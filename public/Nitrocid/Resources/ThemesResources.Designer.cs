//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KS.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ThemesResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ThemesResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("KS.Resources.ThemesResources", typeof(ThemesResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Amaya&quot;,
        ///        &quot;Description&quot;: &quot;Purple harmony&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#b491c5&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#808080&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#68228b&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#68228b&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#33218a&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#68228b&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#000000&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#808080&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#b491c5&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#33218a&quot;,
        ///    &quot;StageColor&quot;: &quot;#b491c5&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#68228b [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Amaya {
            get {
                return ResourceManager.GetString("Amaya", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Aptivi&quot;,
        ///        &quot;Description&quot;: &quot;Our branding harmony&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#C390D9&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#C390D9&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#752EFD&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#752EFD&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#752EFD&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#752EFD&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#020143&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#C390D9&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#C390D9&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#752EFD&quot;,
        ///    &quot;StageColor&quot;: &quot;#C390D9&quot;,
        ///    &quot;ErrorColor&quot;: &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Aptivi {
            get {
                return ResourceManager.GetString("Aptivi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Ayu (dark)&quot;,
        ///        &quot;Description&quot;: &quot;Dark version of a popular VIM theme, Ayu&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;184;204;82&quot;,
        ///    &quot;LicenseColor&quot;: &quot;92;103;115&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;255;119;51&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;255;51;51&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;54;163;217&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;230;182;115&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;15;20;25&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;230;225;207&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;54;163;217&quot;,
        ///    &quot;ListValueColor&quot;: &quot;230;182;11 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string AyuDark {
            get {
                return ResourceManager.GetString("AyuDark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Ayu (light)&quot;,
        ///        &quot;Description&quot;: &quot;Light version of a popular VIM theme, Ayu&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;134;179;0&quot;,
        ///    &quot;LicenseColor&quot;: &quot;171;176;182&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;255;119;51&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;255;51;51&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;54;163;217&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;230;182;115&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;250;250;250&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;92;103;115&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;54;163;217&quot;,
        ///    &quot;ListValueColor&quot;: &quot;230;18 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string AyuLight {
            get {
                return ResourceManager.GetString("AyuLight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Ayu (mirage)&quot;,
        ///        &quot;Description&quot;: &quot;Mirage version of a popular VIM theme, Ayu&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;187;230;126&quot;,
        ///    &quot;LicenseColor&quot;: &quot;92;103;115&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;255;174;87&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;255;51;51&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;92;207;230&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;255;196;76&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;33;39;51&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;217;215;206&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;92;207;230&quot;,
        ///    &quot;ListValueColor&quot;: &quot;255;19 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string AyuMirage {
            get {
                return ResourceManager.GetString("AyuMirage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Back to School&quot;,
        ///        &quot;Description&quot;: &quot;This is the first day of the new school year&quot;,
        ///        &quot;IsEvent&quot;: true,
        ///        &quot;StartMonth&quot;: 8,
        ///        &quot;StartDay&quot;: 27,
        ///        &quot;EndMonth&quot;: 9,
        ///        &quot;EndDay&quot;: 10
        ///    },
        ///    &quot;InputColor&quot;: &quot;15&quot;,
        ///    &quot;LicenseColor&quot;: &quot;15&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;15&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;15&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;15&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;15&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0;50;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;15&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string BackToSchool {
            get {
                return ResourceManager.GetString("BackToSchool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Black on White&quot;,
        ///        &quot;Description&quot;: &quot;Lightest terminal possible&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;0&quot;,
        ///    &quot;LicenseColor&quot;: &quot;0&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;0&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;0&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;0&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;0&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;15&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;0&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;0&quot;,
        ///    &quot;ListValueColor&quot;: &quot;0&quot;,
        ///    &quot;StageColor&quot;: &quot;0&quot;,
        ///    &quot;ErrorColor&quot;: &quot;0&quot;,
        ///    &quot;WarningColor&quot;: &quot;0&quot;,
        ///    &quot;OptionColor&quot;: &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string BlackOnWhite {
            get {
                return ResourceManager.GetString("BlackOnWhite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Black Rose&quot;,
        ///        &quot;Description&quot;: &quot;This is the black rose&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#FF89B7&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#9D003D&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#9D003D&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#6B0029&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#9D003D&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#6B0029&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#000000&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#9D003D&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#FF89B7&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#9D003D&quot;,
        ///    &quot;StageColor&quot;: &quot;#FF89B7&quot;,
        ///    &quot;ErrorCol [rest of string was truncated]&quot;;.
        /// </summary>
        public static string BlackRose {
            get {
                return ResourceManager.GetString("BlackRose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Breeze&quot;,
        ///        &quot;Description&quot;: &quot;Color scheme for Breeze, a KDE Plasma 5 theme&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;244;79;79&quot;,
        ///    &quot;LicenseColor&quot;: &quot;122;124;125&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;202;146;25&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;77;31;36&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;41;128;185&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;61;174;233&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;35;38;41&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;207;207;194&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;41;128;185&quot;,
        ///    &quot;ListValueColor&quot;: &quot;61;174;233&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Breeze {
            get {
                return ResourceManager.GetString("Breeze", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Breeze (dark)&quot;,
        ///        &quot;Description&quot;: &quot;Color scheme for Breeze, a KDE Plasma 5 theme&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;244;79;79&quot;,
        ///    &quot;LicenseColor&quot;: &quot;122;124;125&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;202;146;25&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;77;31;36&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;41;128;185&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;61;174;233&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;207;207;194&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;41;128;185&quot;,
        ///    &quot;ListValueColor&quot;: &quot;61;174;233&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string BreezeDark {
            get {
                return ResourceManager.GetString("BreezeDark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Darcula&quot;,
        ///        &quot;Description&quot;: &quot;Popular color scheme for IDEs, like IntelliJ&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#629755&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#A9B7C6&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#CC666E&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#BC3F3C&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#BBBBBB&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#808080&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#2B2B2B&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#A9B7C6&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#3A3A3A&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#8C8C8C&quot;,
        ///    &quot;StageColor&quot;: &quot;#6297 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Darcula {
            get {
                return ResourceManager.GetString("Darcula", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Debian&quot;,
        ///        &quot;Description&quot;: &quot;Color schemes for Debian&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;15&quot;,
        ///    &quot;LicenseColor&quot;: &quot;15&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;15&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;15&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;7&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;7&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;161&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;15&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;15&quot;,
        ///    &quot;ListValueColor&quot;: &quot;15&quot;,
        ///    &quot;StageColor&quot;: &quot;15&quot;,
        ///    &quot;ErrorColor&quot;: &quot;7&quot;,
        ///    &quot;WarningColor&quot;: &quot;15&quot;,
        ///    &quot;OptionColor&quot;: &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Debian {
            get {
                return ResourceManager.GetString("Debian", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Default&quot;,
        ///        &quot;Description&quot;: &quot;The default theme for the kernel&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;15&quot;,
        ///    &quot;LicenseColor&quot;: &quot;15&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;11&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;9&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;2&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;10&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;7&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;3&quot;,
        ///    &quot;ListValueColor&quot;: &quot;8&quot;,
        ///    &quot;StageColor&quot;: &quot;10&quot;,
        ///    &quot;ErrorColor&quot;: &quot;9&quot;,
        ///    &quot;WarningColor&quot;: &quot;11&quot;,
        ///    &quot;OptionColor [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Default {
            get {
                return ResourceManager.GetString("Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;DefaultVivid&quot;,
        ///        &quot;Description&quot;: &quot;The vivid default theme for the kernel&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;15&quot;,
        ///    &quot;LicenseColor&quot;: &quot;15&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;11&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;200;0;0&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;0;200;0&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;10&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;200;200;200&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;0;200;200&quot;,
        ///    &quot;ListValueColor&quot;: &quot;8&quot;,
        ///    &quot;StageColor&quot;: &quot;10&quot;,
        ///    &quot;ErrorColor&quot;: &quot;200;0;0&quot;,
        ///    &quot;WarningC [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DefaultVivid {
            get {
                return ResourceManager.GetString("DefaultVivid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Electronic Dance Music (EDM)&quot;,
        ///        &quot;Description&quot;: &quot;Use if you are a fan of EDM&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#5C1D6B&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#FDD602&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#38A6F3&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#FF3179&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#B41EB2&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#FF3179&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#000000&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#FDD602&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#5C1D6B&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#B41EB2&quot;,
        ///    &quot;StageColor&quot;: &quot;# [rest of string was truncated]&quot;;.
        /// </summary>
        public static string EDM {
            get {
                return ResourceManager.GetString("EDM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Fire&quot;,
        ///        &quot;Description&quot;: &quot;Fire shades&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#FAA307&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#FFBA08&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#9D0208&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#D00000&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#F48C06&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#DC2F02&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#03071E&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#FFBA08&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#6A040F&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#F48C06&quot;,
        ///    &quot;StageColor&quot;: &quot;#FAA307&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#9D0208&quot;,
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Fire {
            get {
                return ResourceManager.GetString("Fire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Grape&quot;,
        ///        &quot;Description&quot;: &quot;Color scheme for grapes&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;85;7;173&quot;,
        ///    &quot;LicenseColor&quot;: &quot;85;7;173&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;88;9;179&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;178;133;230&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;116;104;130&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;44;21;69&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;74;49;102&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;184;156;217&quot;,
        ///    &quot;ListValueColor&quot;: &quot;85;7;173&quot;,
        ///    &quot;StageColor&quot;: &quot;44;21;69&quot;,
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Grape {
            get {
                return ResourceManager.GetString("Grape", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Grape Kiwi&quot;,
        ///        &quot;Description&quot;: &quot;Grape and Kiwi mixed together&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;147;77;191&quot;,
        ///    &quot;LicenseColor&quot;: &quot;147;77;191&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;166;51;95&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;99;255;118&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;154;77;201&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;237;83;142&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;93;232;109&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;124;58;166&quot;,
        ///    &quot;ListValueColor&quot;: &quot;250;92;153&quot;,
        ///    &quot;StageColor&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Grape_Kiwi {
            get {
                return ResourceManager.GetString("Grape_Kiwi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Green Mix&quot;,
        ///        &quot;Description&quot;: &quot;Vivid and plastered green, blue, and purple colors&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;179;95;68&quot;,
        ///    &quot;LicenseColor&quot;: &quot;179;95;68&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;67;217;144&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;82;196;235&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;163;46;102&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;201;91;54&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;76;217;149&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;90;210;250&quot;,
        ///    &quot;ListValueColor&quot;: &quot;252;61;153&quot;, [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Green_Mix {
            get {
                return ResourceManager.GetString("Green_Mix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Grink (Green + Pink)&quot;,
        ///        &quot;Description&quot;: &quot;Green and pink mixed together&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;235;75;155&quot;,
        ///    &quot;LicenseColor&quot;: &quot;235;75;155&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;46;173;42&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;44;222;133&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;249;69;255&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;214;64;139&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;51;199;46&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;44;163;104&quot;,
        ///    &quot;ListValueColor&quot;: &quot;172;67;176&quot;,
        ///    &quot;St [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Grink {
            get {
                return ResourceManager.GetString("Grink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Gruvbox&quot;,
        ///        &quot;Description&quot;: &quot;One of the known terminal color schemes&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#3c3836&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#d65d0e&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#cc241d&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#fb4934&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#d79921&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#d79921&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#fbf1c7&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#3c3836&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#928374&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#3c3836&quot;,
        ///    &quot;StageColor&quot;: &quot;#928374&quot;,        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Gruvbox {
            get {
                return ResourceManager.GetString("Gruvbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Hacker&quot;,
        ///        &quot;Description&quot;: &quot;Green text on gray&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;10&quot;,
        ///    &quot;LicenseColor&quot;: &quot;10&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;10&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;10&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;10&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;10&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;8&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;10&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;2&quot;,
        ///    &quot;ListValueColor&quot;: &quot;10&quot;,
        ///    &quot;StageColor&quot;: &quot;2&quot;,
        ///    &quot;ErrorColor&quot;: &quot;2&quot;,
        ///    &quot;WarningColor&quot;: &quot;10&quot;,
        ///    &quot;OptionColor&quot;: &quot;2&quot;,
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Hacker {
            get {
                return ResourceManager.GetString("Hacker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Lemon&quot;,
        ///        &quot;Description&quot;: &quot;Make your terminal full of lemon acid&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;185;204;45&quot;,
        ///    &quot;LicenseColor&quot;: &quot;185;204;45&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;166;160;46&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;184;186;41&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;186;212;70&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;199;197;78&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;173;173;35&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;232;250;97&quot;,
        ///    &quot;ListValueColor&quot;: &quot;200;224;45&quot;,
        ///    &quot;StageCo [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Lemon {
            get {
                return ResourceManager.GetString("Lemon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Light Planks&quot;,
        ///        &quot;Description&quot;: &quot;Light wood planks&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;184;129;62&quot;,
        ///    &quot;LicenseColor&quot;: &quot;184;129;62&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;194;136;66&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;217;154;87&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;224;196;72&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;255;154;59&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;202;204;59&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;219;189;88&quot;,
        ///    &quot;ListValueColor&quot;: &quot;224;165;56&quot;,
        ///    &quot;StageColor&quot;: &quot;255;15 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Light_Planks {
            get {
                return ResourceManager.GetString("Light_Planks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Linux (colored defaults)&quot;,
        ///        &quot;Description&quot;: &quot;Standard Linux terminal colors&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;7&quot;,
        ///    &quot;LicenseColor&quot;: &quot;7&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;7&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;7&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;12&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;12&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;7&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;15&quot;,
        ///    &quot;ListValueColor&quot;: &quot;7&quot;,
        ///    &quot;StageColor&quot;: &quot;15&quot;,
        ///    &quot;ErrorColor&quot;: &quot;7&quot;,
        ///    &quot;WarningColor&quot;: &quot;7&quot;,
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        public static string LinuxColoredDef {
            get {
                return ResourceManager.GetString("LinuxColoredDef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Linux (uncolored)&quot;,
        ///        &quot;Description&quot;: &quot;Gray terminal&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;7&quot;,
        ///    &quot;LicenseColor&quot;: &quot;7&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;7&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;7&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;7&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;7&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;7&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;7&quot;,
        ///    &quot;ListValueColor&quot;: &quot;7&quot;,
        ///    &quot;StageColor&quot;: &quot;7&quot;,
        ///    &quot;ErrorColor&quot;: &quot;7&quot;,
        ///    &quot;WarningColor&quot;: &quot;7&quot;,
        ///    &quot;OptionColor&quot;: &quot;7&quot;,
        ///    &quot;B [rest of string was truncated]&quot;;.
        /// </summary>
        public static string LinuxUncolored {
            get {
                return ResourceManager.GetString("LinuxUncolored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Materialistic&quot;,
        ///        &quot;Description&quot;: &quot;Some Material Design text on your terminal&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;105;158;62&quot;,
        ///    &quot;LicenseColor&quot;: &quot;105;158;62&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;56;91;232&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;117;46;176&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;189;164;64&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;113;176;62&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;39;62;156&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;107;38;163&quot;,
        ///    &quot;ListValueColor&quot;: &quot;214;188;84&quot;,
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Materialistic {
            get {
                return ResourceManager.GetString("Materialistic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Maya&quot;,
        ///        &quot;Description&quot;: &quot;Shades of orange and brown&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#d1e1da&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#c3d6c2&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#912e2e&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#4e3925&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#e59f00&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#4e3925&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#000000&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#c3d6c2&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#d1e1da&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#e59f00&quot;,
        ///    &quot;StageColor&quot;: &quot;#d1e1da&quot;,
        ///    &quot;ErrorColor [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Maya {
            get {
                return ResourceManager.GetString("Maya", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Melange&quot;,
        ///        &quot;Description&quot;: &quot;Melange theme inspired by the VIM theme of the same name&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#CC7F2B&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#C29830&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#E0BFBB&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#D7898C&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#DFE3EB&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#DFE3EB&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#F4F0ED&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#6B5C4D&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#A38D78&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#6B5C4D&quot;,
        ///    &quot;StageCo [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Melange {
            get {
                return ResourceManager.GetString("Melange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Melange (dark)&quot;,
        ///        &quot;Description&quot;: &quot;Melange theme inspired by the VIM theme of the same name&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#E49B5D&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#EBC06D&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#7D2A2F&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#B65C60&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#243146&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#243146&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#2A2520&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#ECE1D7&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#A38D78&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#ECE1D7&quot;,
        ///    &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string MelangeDark {
            get {
                return ResourceManager.GetString("MelangeDark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Mint&quot;,
        ///        &quot;Description&quot;: &quot;Make your terminal full of mint&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;50;161;61&quot;,
        ///    &quot;LicenseColor&quot;: &quot;50;161;61&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;75;173;68&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;100;176;42&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;64;189;79&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;48;194;43&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;44;201;50&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;109;207;76&quot;,
        ///    &quot;ListValueColor&quot;: &quot;127;212;78&quot;,
        ///    &quot;StageColor&quot;: &quot;48;194 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Mint {
            get {
                return ResourceManager.GetString("Mint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Monokai&quot;,
        ///        &quot;Description&quot;: &quot;A theme inspired by a VIM theme of the same name&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#90908a&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#f8f8f2&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#f8f8f0&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#f8f8f0&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#ae81ff&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#f92672&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#272822&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#f8f8f2&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#90908a&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#ae81ff&quot;,
        ///    &quot;StageColor&quot;: &quot;# [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Monokai {
            get {
                return ResourceManager.GetString("Monokai", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Neon Breeze&quot;,
        ///        &quot;Description&quot;: &quot;Do you like neon blue and pink?&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;13&quot;,
        ///    &quot;LicenseColor&quot;: &quot;14&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;13&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;13&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;14&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;14&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;237&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;14&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;13&quot;,
        ///    &quot;ListValueColor&quot;: &quot;14&quot;,
        ///    &quot;StageColor&quot;: &quot;13&quot;,
        ///    &quot;ErrorColor&quot;: &quot;13&quot;,
        ///    &quot;WarningColor&quot;: &quot;13&quot;,
        ///    &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string NeonBreeze {
            get {
                return ResourceManager.GetString("NeonBreeze", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Neutralized&quot;,
        ///        &quot;Description&quot;: &quot;This theme should be neutral to you.&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;45;60;61&quot;,
        ///    &quot;LicenseColor&quot;: &quot;45;60;61&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;61;72;74&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;178;180;175&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;88;96;82&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;228;224;212&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;149;151;140&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;178;187;195&quot;,
        ///    &quot;ListValueColor&quot;: &quot;211;205;189&quot;,
        ///    &quot;Stage [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Neutralized {
            get {
                return ResourceManager.GetString("Neutralized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Nitric Acid - HNO3&quot;,
        ///        &quot;Description&quot;: &quot;Colorless, fuming, and highly corrosive liquid&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#AC9B03&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#AC9B03&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#AC9B03&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#AC9B03&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#AC9B03&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#AC9B03&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#0A0A00&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#AC9B03&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#AC9B03&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#AC9B03&quot;,
        ///    &quot;StageC [rest of string was truncated]&quot;;.
        /// </summary>
        public static string NitricAcid {
            get {
                return ResourceManager.GetString("NitricAcid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;No Frils (acme)&quot;,
        ///        &quot;Description&quot;: &quot;A theme inspired by a VIM theme of the same name&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#585858&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#AF8700&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#800000&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#ff5555&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#5f005f&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#5f005f&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#FFFFD7&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#000000&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#585858&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#000000&quot;,
        ///    &quot;StageCo [rest of string was truncated]&quot;;.
        /// </summary>
        public static string NoFrilsAcme {
            get {
                return ResourceManager.GetString("NoFrilsAcme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;No Frils (dark)&quot;,
        ///        &quot;Description&quot;: &quot;A theme inspired by a VIM theme of the same name&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#6C6C6C&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#6C6C6C&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#800000&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#5F0000&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#5F87FF&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#5F87FF&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#262626&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#eeeeee&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#6C6C6C&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#eeeeee&quot;,
        ///    &quot;StageCo [rest of string was truncated]&quot;;.
        /// </summary>
        public static string NoFrilsDark {
            get {
                return ResourceManager.GetString("NoFrilsDark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;No Frils (light)&quot;,
        ///        &quot;Description&quot;: &quot;A theme inspired by a VIM theme of the same name&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#A8A8A8&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#A8A8A8&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#800000&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#FF5555&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#5F005F&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#5F005F&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#E4E4E4&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#000000&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#A8A8A8&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#000000&quot;,
        ///    &quot;StageC [rest of string was truncated]&quot;;.
        /// </summary>
        public static string NoFrilsLight {
            get {
                return ResourceManager.GetString("NoFrilsLight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;No Frils (sepia)&quot;,
        ///        &quot;Description&quot;: &quot;A theme inspired by a VIM theme of the same name&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#AF8700&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#AF8700&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#800000&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#FF5555&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#5F005F&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#5F005F&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#ffdfaf&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#000000&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#AF8700&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#000000&quot;,
        ///    &quot;StageC [rest of string was truncated]&quot;;.
        /// </summary>
        public static string NoFrilsSepia {
            get {
                return ResourceManager.GetString("NoFrilsSepia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Orange Sea&quot;,
        ///        &quot;Description&quot;: &quot;The sea of orange&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;54;152;217&quot;,
        ///    &quot;LicenseColor&quot;: &quot;54;152;217&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;179;112;68&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;64;136;184&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;232;142;81&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;56;157;224&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;163;95;49&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;42;118;168&quot;,
        ///    &quot;ListValueColor&quot;: &quot;189;121;75&quot;,
        ///    &quot;StageColor&quot;: &quot;56;157;22 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Orange_Sea {
            get {
                return ResourceManager.GetString("Orange_Sea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Papercolor&quot;,
        ///        &quot;Description&quot;: &quot;A theme inspired by a VIM theme of the same name&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#005f87&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#000000&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#af0000&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#ffafd7&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#0087af&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#0087af&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#c0c0c0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#000000&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#800080&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#000000&quot;,
        ///    &quot;StageColor&quot;: [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Papercolor {
            get {
                return ResourceManager.GetString("Papercolor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Papercolor (dark)&quot;,
        ///        &quot;Description&quot;: &quot;A theme inspired by a VIM theme of the same name&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#005f87&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#c0c0c0&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#af0000&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#ffafd7&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#0087af&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#0087af&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#000000&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#c0c0c0&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#800080&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#c0c0c0&quot;,
        ///    &quot;Stage [rest of string was truncated]&quot;;.
        /// </summary>
        public static string PapercolorDark {
            get {
                return ResourceManager.GetString("PapercolorDark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Phosphoric (background)&quot;,
        ///        &quot;Description&quot;: &quot;Phosphoric terminal that converts everything to orange&quot;
        ///    },
        ///	&quot;InputColor&quot;: &quot;0&quot;,
        ///	&quot;LicenseColor&quot;: &quot;0&quot;,
        ///	&quot;ContKernelErrorColor&quot;: &quot;0&quot;,
        ///	&quot;UncontKernelErrorColor&quot;: &quot;0&quot;,
        ///	&quot;HostNameShellColor&quot;: &quot;0&quot;,
        ///	&quot;UserNameShellColor&quot;: &quot;0&quot;,
        ///	&quot;BackgroundColor&quot;: &quot;3&quot;,
        ///	&quot;NeutralTextColor&quot;: &quot;0&quot;,
        ///	&quot;ListEntryColor&quot;: &quot;0&quot;,
        ///	&quot;ListValueColor&quot;: &quot;0&quot;,
        ///	&quot;StageColor&quot;: &quot;0&quot;,
        ///	&quot;ErrorColor&quot;: &quot;0&quot;,
        ///	&quot;WarningColor&quot;: &quot;0&quot;,
        ///	&quot;OptionColor&quot;: &quot;0&quot;,
        ///	 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string PhosphoricBG {
            get {
                return ResourceManager.GetString("PhosphoricBG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Phosphoric (foreground)&quot;,
        ///        &quot;Description&quot;: &quot;Phosphoric terminal that converts everything to orange&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;3&quot;,
        ///    &quot;LicenseColor&quot;: &quot;3&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;3&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;3&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;3&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;3&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;3&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;3&quot;,
        ///    &quot;ListValueColor&quot;: &quot;3&quot;,
        ///    &quot;StageColor&quot;: &quot;3&quot;,
        ///    &quot;ErrorColor&quot;: &quot;3&quot;,
        ///    &quot;Warni [rest of string was truncated]&quot;;.
        /// </summary>
        public static string PhosphoricFG {
            get {
                return ResourceManager.GetString("PhosphoricFG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Red Breeze&quot;,
        ///        &quot;Description&quot;: &quot;Gives you a breeze of red.&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;197;201;54&quot;,
        ///    &quot;LicenseColor&quot;: &quot;197;201;54&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;71;223;237&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;153;46;37&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;95;90;237&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;247;93;79&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;212;78;66&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;212;64;51&quot;,
        ///    &quot;ListValueColor&quot;: &quot;230;97;85&quot;,
        ///    &quot;StageColor&quot;: &quot;247;9 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Red_Breeze {
            get {
                return ResourceManager.GetString("Red_Breeze", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Red Console&quot;,
        ///        &quot;Description&quot;: &quot;A bloody red console&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;9&quot;,
        ///    &quot;LicenseColor&quot;: &quot;9&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;9&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;1&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;1&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;9&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;9&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;9&quot;,
        ///    &quot;ListValueColor&quot;: &quot;1&quot;,
        ///    &quot;StageColor&quot;: &quot;9&quot;,
        ///    &quot;ErrorColor&quot;: &quot;1&quot;,
        ///    &quot;WarningColor&quot;: &quot;9&quot;,
        ///    &quot;OptionColor&quot;: &quot;9&quot;,
        ///    &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string RedConsole {
            get {
                return ResourceManager.GetString("RedConsole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Rigel&quot;,
        ///        &quot;Description&quot;: &quot;A theme inspired by a VIM theme of the same name&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#f08e48&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#1c8db2&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#c43060&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#77929e&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#e6e6dc&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#e6e6dc&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#002635&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#e6e6dc&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#77929e&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#e6e6dc&quot;,
        ///    &quot;StageColor&quot;: &quot;#77 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Rigel {
            get {
                return ResourceManager.GetString("Rigel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Sakura&quot;,
        ///        &quot;Description&quot;: &quot;Sakura trees will give you some Chinese breeze&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#EACBD2&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#DFAEB4&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#DFAEB4&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#DD9AC2&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#DFAEB4&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#DD9AC2&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#231C29&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#DFAEB4&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#EACBD2&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#DFAEB4&quot;,
        ///    &quot;StageColor&quot;: &quot;#EAC [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Sakura {
            get {
                return ResourceManager.GetString("Sakura", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Solarized (dark)&quot;,
        ///        &quot;Description&quot;: &quot;A theme inspired by a VIM theme of the same name&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;38;139;210&quot;,
        ///    &quot;LicenseColor&quot;: &quot;211;54;130&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;181;137;0&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;211;1;2&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;38;139;210&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;42;161;152&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0;43;54&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;38;139;210&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;38;139;210&quot;,
        ///    &quot;ListValueColor&quot;: &quot;42 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SolarizedDark {
            get {
                return ResourceManager.GetString("SolarizedDark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Solarized (light)&quot;,
        ///        &quot;Description&quot;: &quot;A theme inspired by a VIM theme of the same name&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;38;139;210&quot;,
        ///    &quot;LicenseColor&quot;: &quot;211;54;130&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;181;137;0&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;211;1;2&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;38;139;210&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;42;161;152&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;253;246;227&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;38;139;210&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;38;139;210&quot;,
        ///    &quot;ListValueColor&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SolarizedLight {
            get {
                return ResourceManager.GetString("SolarizedLight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Space Camp&quot;,
        ///        &quot;Description&quot;: &quot;A theme inspired by a VIM theme of the same name&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#DEDEDE&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#EEEEEE&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#821A1A&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#FF0000&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#3E3D32&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#3E3D32&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#121212&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#EEEEEE&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#6B6B6B&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#EEEEEE&quot;,
        ///    &quot;StageColor&quot;: [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SpaceCamp {
            get {
                return ResourceManager.GetString("SpaceCamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Space Duck&quot;,
        ///        &quot;Description&quot;: &quot;A theme inspired by a VIM theme of the same name&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#818596&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#b3a1e6&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#e33400&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#e33400&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#f2ce00&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#f2ce00&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#0f111b&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#ecf0c1&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#30365F&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#ecf0c1&quot;,
        ///    &quot;StageColor&quot;: [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SpaceDuck {
            get {
                return ResourceManager.GetString("SpaceDuck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Tealed&quot;,
        ///        &quot;Description&quot;: &quot;All teal colors&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;62;98;115&quot;,
        ///    &quot;LicenseColor&quot;: &quot;62;98;115&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;51;99;128&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;60;106;117&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;48;126;138&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;209;48;73&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;217;113;102&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;252;91;116&quot;,
        ///    &quot;ListValueColor&quot;: &quot;145;196;55&quot;,
        ///    &quot;StageColor&quot;: &quot;209;48;73&quot;,
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Tealed {
            get {
                return ResourceManager.GetString("Tealed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Techno&quot;,
        ///        &quot;Description&quot;: &quot;A theme for technology lovers&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#7cd4d4&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#648e9c&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#206363&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#9bf4eb&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#82c5c8&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#9bf4eb&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#3d3756&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#648e9c&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#7cd4d4&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#82c5c8&quot;,
        ///    &quot;StageColor&quot;: &quot;#7cd4d4&quot;,
        ///    &quot;Error [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Techno {
            get {
                return ResourceManager.GetString("Techno", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Trance&quot;,
        ///        &quot;Description&quot;: &quot;Trance music fan? This is the theme for you!&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;14&quot;,
        ///    &quot;LicenseColor&quot;: &quot;14&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;12&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;12&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;12&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;12&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;14&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;14&quot;,
        ///    &quot;ListValueColor&quot;: &quot;12&quot;,
        ///    &quot;StageColor&quot;: &quot;14&quot;,
        ///    &quot;ErrorColor&quot;: &quot;12&quot;,
        ///    &quot;WarningColor&quot;: &quot;12&quot;,        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Trance {
            get {
                return ResourceManager.GetString("Trance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Ubuntu&quot;,
        ///        &quot;Description&quot;: &quot;Color schemes from a popular Linux operating system, Ubuntu&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;15&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#77216F&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#77216F&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#77216F&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#E95420&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#E95420&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;15&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#E95420&quot;,
        ///    &quot;ListValueColor&quot;: &quot;15&quot;,
        ///    &quot;StageColor&quot;: &quot;#77216F&quot;,
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Ubuntu {
            get {
                return ResourceManager.GetString("Ubuntu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;VI - Vice City&quot;,
        ///        &quot;Description&quot;: &quot;Gives you a perfect Vice City vibe&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#00a8ff&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#0266c8&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#f4afc2&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#f195ac&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#b28bc0&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#f195ac&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#000000&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#0266c8&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#00a8ff&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#b28bc0&quot;,
        ///    &quot;StageColor&quot;: &quot;#00a8ff&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ViceCity {
            get {
                return ResourceManager.GetString("ViceCity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Visual Studio (dark)&quot;,
        ///        &quot;Description&quot;: &quot;Color scheme for Visual Studio, one of the most powerful IDEs&quot;
        ///    },
        ///	&quot;InputColor&quot;: &quot;15&quot;,
        ///	&quot;LicenseColor&quot;: &quot;15&quot;,
        ///	&quot;ContKernelErrorColor&quot;: &quot;15&quot;,
        ///	&quot;UncontKernelErrorColor&quot;: &quot;15&quot;,
        ///	&quot;HostNameShellColor&quot;: &quot;15&quot;,
        ///	&quot;UserNameShellColor&quot;: &quot;15&quot;,
        ///	&quot;BackgroundColor&quot;: &quot;#100940&quot;,
        ///	&quot;NeutralTextColor&quot;: &quot;15&quot;,
        ///	&quot;ListEntryColor&quot;: &quot;15&quot;,
        ///	&quot;ListValueColor&quot;: &quot;15&quot;,
        ///	&quot;StageColor&quot;: &quot;15&quot;,
        ///	&quot;ErrorColor&quot;: &quot;15&quot;,
        ///	&quot;WarningColor&quot;: &quot;15&quot;,
        ///	 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string VisualStudioDark {
            get {
                return ResourceManager.GetString("VisualStudioDark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Visual Studio (light)&quot;,
        ///        &quot;Description&quot;: &quot;Color scheme for Visual Studio, one of the most powerful IDEs&quot;
        ///    },
        ///	&quot;InputColor&quot;: &quot;15&quot;,
        ///	&quot;LicenseColor&quot;: &quot;15&quot;,
        ///	&quot;ContKernelErrorColor&quot;: &quot;15&quot;,
        ///	&quot;UncontKernelErrorColor&quot;: &quot;15&quot;,
        ///	&quot;HostNameShellColor&quot;: &quot;15&quot;,
        ///	&quot;UserNameShellColor&quot;: &quot;15&quot;,
        ///	&quot;BackgroundColor&quot;: &quot;#7160E8&quot;,
        ///	&quot;NeutralTextColor&quot;: &quot;15&quot;,
        ///	&quot;ListEntryColor&quot;: &quot;15&quot;,
        ///	&quot;ListValueColor&quot;: &quot;15&quot;,
        ///	&quot;StageColor&quot;: &quot;15&quot;,
        ///	&quot;ErrorColor&quot;: &quot;15&quot;,
        ///	&quot;WarningColor&quot;: &quot;15&quot;,
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string VisualStudioLight {
            get {
                return ResourceManager.GetString("VisualStudioLight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Windows 11&quot;,
        ///        &quot;Description&quot;: &quot;Color scheme for Windows 11, a recent version of Windows&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;LicenseColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;ListValueColor&quot;: &quot;0;120;212&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Windows11 {
            get {
                return ResourceManager.GetString("Windows11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Windows 11 (light)&quot;,
        ///        &quot;Description&quot;: &quot;Color scheme for Windows 11, a recent version of Windows&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;LicenseColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;200;200;200&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;ListValueC [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Windows11Light {
            get {
                return ResourceManager.GetString("Windows11Light", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Windows 95&quot;,
        ///        &quot;Description&quot;: &quot;Bring back nostalgia with this theme!&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;15&quot;,
        ///    &quot;LicenseColor&quot;: &quot;15&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;15&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;15&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;15&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;15&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;6&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;15&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;15&quot;,
        ///    &quot;ListValueColor&quot;: &quot;15&quot;,
        ///    &quot;StageColor&quot;: &quot;15&quot;,
        ///    &quot;ErrorColor&quot;: &quot;15&quot;,
        ///    &quot;WarningColor&quot;: &quot;15&quot;,
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Windows95 {
            get {
                return ResourceManager.GetString("Windows95", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Wood&quot;,
        ///        &quot;Description&quot;: &quot;Your terminal consists of wood planks&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;166&quot;,
        ///    &quot;LicenseColor&quot;: &quot;130&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;130&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;166&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;166&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;130&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;130&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;166&quot;,
        ///    &quot;ListValueColor&quot;: &quot;130&quot;,
        ///    &quot;StageColor&quot;: &quot;166&quot;,
        ///    &quot;ErrorColor&quot;: &quot;166&quot;,
        ///    &quot;WarningColor&quot;: &quot;166 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Wood {
            get {
                return ResourceManager.GetString("Wood", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Yasai&quot;,
        ///        &quot;Description&quot;: &quot;Inspired from the Chinese pattern of different fruits, Yasai&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#C0B596&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#7B1F68&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#BB7429&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#DD5815&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#869A73&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#614161&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#16253D&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#7B1F68&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#C0B596&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#869A73&quot;,
        ///    &quot;Stage [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Yasai {
            get {
                return ResourceManager.GetString("Yasai", resourceCulture);
            }
        }
    }
}
