
// Nitrocid KS  Copyright (C) 2018-2023  Aptivi
// 
// This file is part of Nitrocid KS
// 
// Nitrocid KS is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Nitrocid KS is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

using ColorSeq;
using static KS.Misc.Screensaver.Displays.LinotypoSettings;

namespace KS.Kernel.Configuration.Instances
{
    public class KernelSaverConfig
    {
        public bool ColorMixTrueColor { get; set; } = true;
        public int ColorMixDelay { get; set; } = 1;
        public string ColorMixBackgroundColor { get; set; } = new Color(ConsoleColors.Red).PlainSequence;
        public int ColorMixMinimumRedColorLevel { get; set; } = 0;
        public int ColorMixMinimumGreenColorLevel { get; set; } = 0;
        public int ColorMixMinimumBlueColorLevel { get; set; } = 0;
        public int ColorMixMinimumColorLevel { get; set; } = 0;
        public int ColorMixMaximumRedColorLevel { get; set; } = 255;
        public int ColorMixMaximumGreenColorLevel { get; set; } = 255;
        public int ColorMixMaximumBlueColorLevel { get; set; } = 255;
        public int ColorMixMaximumColorLevel { get; set; } = 255;
        public bool DiscoTrueColor { get; set; } = true;
        public int DiscoDelay { get; set; } = 100;
        public bool DiscoUseBeatsPerMinute { get; set; }
        public bool DiscoCycleColors { get; set; }
        public bool DiscoEnableFedMode { get; set; }
        public int DiscoMinimumRedColorLevel { get; set; } = 0;
        public int DiscoMinimumGreenColorLevel { get; set; } = 0;
        public int DiscoMinimumBlueColorLevel { get; set; } = 0;
        public int DiscoMinimumColorLevel { get; set; } = 0;
        public int DiscoMaximumRedColorLevel { get; set; } = 255;
        public int DiscoMaximumGreenColorLevel { get; set; } = 255;
        public int DiscoMaximumBlueColorLevel { get; set; } = 255;
        public int DiscoMaximumColorLevel { get; set; } = 255;
        public bool GlitterColorTrueColor { get; set; } = true;
        public int GlitterColorDelay { get; set; } = 1;
        public int GlitterColorMinimumRedColorLevel { get; set; } = 0;
        public int GlitterColorMinimumGreenColorLevel { get; set; } = 0;
        public int GlitterColorMinimumBlueColorLevel { get; set; } = 0;
        public int GlitterColorMinimumColorLevel { get; set; } = 0;
        public int GlitterColorMaximumRedColorLevel { get; set; } = 255;
        public int GlitterColorMaximumGreenColorLevel { get; set; } = 255;
        public int GlitterColorMaximumBlueColorLevel { get; set; } = 255;
        public int GlitterColorMaximumColorLevel { get; set; } = 255;
        public bool LinesTrueColor { get; set; } = true;
        public int LinesDelay { get; set; } = 500;
        public string LinesLineChar { get; set; } = "-";
        public string LinesBackgroundColor { get; set; } = new Color(ConsoleColors.Black).PlainSequence;
        public int LinesMinimumRedColorLevel { get; set; } = 0;
        public int LinesMinimumGreenColorLevel { get; set; } = 0;
        public int LinesMinimumBlueColorLevel { get; set; } = 0;
        public int LinesMinimumColorLevel { get; set; } = 0;
        public int LinesMaximumRedColorLevel { get; set; } = 255;
        public int LinesMaximumGreenColorLevel { get; set; } = 255;
        public int LinesMaximumBlueColorLevel { get; set; } = 255;
        public int LinesMaximumColorLevel { get; set; } = 255;
        public bool DissolveTrueColor { get; set; } = true;
        public string DissolveBackgroundColor { get; set; } = new Color(ConsoleColors.Black).PlainSequence;
        public int DissolveMinimumRedColorLevel { get; set; } = 0;
        public int DissolveMinimumGreenColorLevel { get; set; } = 0;
        public int DissolveMinimumBlueColorLevel { get; set; } = 0;
        public int DissolveMinimumColorLevel { get; set; } = 0;
        public int DissolveMaximumRedColorLevel { get; set; } = 255;
        public int DissolveMaximumGreenColorLevel { get; set; } = 255;
        public int DissolveMaximumBlueColorLevel { get; set; } = 255;
        public int DissolveMaximumColorLevel { get; set; } = 255;
        public bool BouncingBlockTrueColor { get; set; } = true;
        public int BouncingBlockDelay { get; set; } = 10;
        public string BouncingBlockBackgroundColor { get; set; } = new Color(ConsoleColors.Black).PlainSequence;
        public string BouncingBlockForegroundColor { get; set; } = new Color(ConsoleColors.White).PlainSequence;
        public int BouncingBlockMinimumRedColorLevel { get; set; } = 0;
        public int BouncingBlockMinimumGreenColorLevel { get; set; } = 0;
        public int BouncingBlockMinimumBlueColorLevel { get; set; } = 0;
        public int BouncingBlockMinimumColorLevel { get; set; } = 0;
        public int BouncingBlockMaximumRedColorLevel { get; set; } = 255;
        public int BouncingBlockMaximumGreenColorLevel { get; set; } = 255;
        public int BouncingBlockMaximumBlueColorLevel { get; set; } = 255;
        public int BouncingBlockMaximumColorLevel { get; set; } = 255;
        public bool ProgressClockTrueColor { get; set; } = true;
        public bool ProgressClockCycleColors { get; set; } = true;
        public int ProgressClockCycleColorsTicks { get; set; } = 20;
        public string ProgressClockSecondsProgressColor { get; set; } = "4";
        public string ProgressClockMinutesProgressColor { get; set; } = "5";
        public string ProgressClockHoursProgressColor { get; set; } = "6";
        public string ProgressClockProgressColor { get; set; } = "7";
        public int ProgressClockDelay { get; set; } = 500;
        public string ProgressClockUpperLeftCornerCharHours { get; set; } = "╔";
        public string ProgressClockUpperLeftCornerCharMinutes { get; set; } = "╔";
        public string ProgressClockUpperLeftCornerCharSeconds { get; set; } = "╔";
        public string ProgressClockUpperRightCornerCharHours { get; set; } = "╗";
        public string ProgressClockUpperRightCornerCharMinutes { get; set; } = "╗";
        public string ProgressClockUpperRightCornerCharSeconds { get; set; } = "╗";
        public string ProgressClockLowerLeftCornerCharHours { get; set; } = "╚";
        public string ProgressClockLowerLeftCornerCharMinutes { get; set; } = "╚";
        public string ProgressClockLowerLeftCornerCharSeconds { get; set; } = "╚";
        public string ProgressClockLowerRightCornerCharHours { get; set; } = "╝";
        public string ProgressClockLowerRightCornerCharMinutes { get; set; } = "╝";
        public string ProgressClockLowerRightCornerCharSeconds { get; set; } = "╝";
        public string ProgressClockUpperFrameCharHours { get; set; } = "═";
        public string ProgressClockUpperFrameCharMinutes { get; set; } = "═";
        public string ProgressClockUpperFrameCharSeconds { get; set; } = "═";
        public string ProgressClockLowerFrameCharHours { get; set; } = "═";
        public string ProgressClockLowerFrameCharMinutes { get; set; } = "═";
        public string ProgressClockLowerFrameCharSeconds { get; set; } = "═";
        public string ProgressClockLeftFrameCharHours { get; set; } = "║";
        public string ProgressClockLeftFrameCharMinutes { get; set; } = "║";
        public string ProgressClockLeftFrameCharSeconds { get; set; } = "║";
        public string ProgressClockRightFrameCharHours { get; set; } = "║";
        public string ProgressClockRightFrameCharMinutes { get; set; } = "║";
        public string ProgressClockRightFrameCharSeconds { get; set; } = "║";
        public string ProgressClockInfoTextHours { get; set; } = "";
        public string ProgressClockInfoTextMinutes { get; set; } = "";
        public string ProgressClockInfoTextSeconds { get; set; } = "";
        public int ProgressClockMinimumRedColorLevelHours { get; set; } = 0;
        public int ProgressClockMinimumGreenColorLevelHours { get; set; } = 0;
        public int ProgressClockMinimumBlueColorLevelHours { get; set; } = 0;
        public int ProgressClockMinimumColorLevelHours { get; set; } = 0;
        public int ProgressClockMaximumRedColorLevelHours { get; set; } = 255;
        public int ProgressClockMaximumGreenColorLevelHours { get; set; } = 255;
        public int ProgressClockMaximumBlueColorLevelHours { get; set; } = 255;
        public int ProgressClockMaximumColorLevelHours { get; set; } = 255;
        public int ProgressClockMinimumRedColorLevelMinutes { get; set; } = 0;
        public int ProgressClockMinimumGreenColorLevelMinutes { get; set; } = 0;
        public int ProgressClockMinimumBlueColorLevelMinutes { get; set; } = 0;
        public int ProgressClockMinimumColorLevelMinutes { get; set; } = 0;
        public int ProgressClockMaximumRedColorLevelMinutes { get; set; } = 255;
        public int ProgressClockMaximumGreenColorLevelMinutes { get; set; } = 255;
        public int ProgressClockMaximumBlueColorLevelMinutes { get; set; } = 255;
        public int ProgressClockMaximumColorLevelMinutes { get; set; } = 255;
        public int ProgressClockMinimumRedColorLevelSeconds { get; set; } = 0;
        public int ProgressClockMinimumGreenColorLevelSeconds { get; set; } = 0;
        public int ProgressClockMinimumBlueColorLevelSeconds { get; set; } = 0;
        public int ProgressClockMinimumColorLevelSeconds { get; set; } = 0;
        public int ProgressClockMaximumRedColorLevelSeconds { get; set; } = 255;
        public int ProgressClockMaximumGreenColorLevelSeconds { get; set; } = 255;
        public int ProgressClockMaximumBlueColorLevelSeconds { get; set; } = 255;
        public int ProgressClockMaximumColorLevelSeconds { get; set; } = 255;
        public int ProgressClockMinimumRedColorLevel { get; set; } = 0;
        public int ProgressClockMinimumGreenColorLevel { get; set; } = 0;
        public int ProgressClockMinimumBlueColorLevel { get; set; } = 0;
        public int ProgressClockMinimumColorLevel { get; set; } = 0;
        public int ProgressClockMaximumRedColorLevel { get; set; } = 255;
        public int ProgressClockMaximumGreenColorLevel { get; set; } = 255;
        public int ProgressClockMaximumBlueColorLevel { get; set; } = 255;
        public int ProgressClockMaximumColorLevel { get; set; } = 255;
        public bool LighterTrueColor { get; set; } = true;
        public int LighterDelay { get; set; } = 100;
        public int LighterMaxPositions { get; set; } = 10;
        public string LighterBackgroundColor { get; set; } = new Color(ConsoleColors.Black).PlainSequence;
        public int LighterMinimumRedColorLevel { get; set; } = 0;
        public int LighterMinimumGreenColorLevel { get; set; } = 0;
        public int LighterMinimumBlueColorLevel { get; set; } = 0;
        public int LighterMinimumColorLevel { get; set; } = 0;
        public int LighterMaximumRedColorLevel { get; set; } = 255;
        public int LighterMaximumGreenColorLevel { get; set; } = 255;
        public int LighterMaximumBlueColorLevel { get; set; } = 255;
        public int LighterMaximumColorLevel { get; set; } = 255;
        public bool WipeTrueColor { get; set; } = true;
        public int WipeDelay { get; set; } = 10;
        public int WipeWipesNeededToChangeDirection { get; set; } = 10;
        public string WipeBackgroundColor { get; set; } = new Color(ConsoleColors.Black).PlainSequence;
        public int WipeMinimumRedColorLevel { get; set; } = 0;
        public int WipeMinimumGreenColorLevel { get; set; } = 0;
        public int WipeMinimumBlueColorLevel { get; set; } = 0;
        public int WipeMinimumColorLevel { get; set; } = 0;
        public int WipeMaximumRedColorLevel { get; set; } = 255;
        public int WipeMaximumGreenColorLevel { get; set; } = 255;
        public int WipeMaximumBlueColorLevel { get; set; } = 255;
        public int WipeMaximumColorLevel { get; set; } = 255;
        public int MatrixDelay { get; set; } = 1;
        public int GlitterMatrixDelay { get; set; } = 1;
        public string GlitterMatrixBackgroundColor { get; set; } = new Color(ConsoleColors.Black).PlainSequence;
        public string GlitterMatrixForegroundColor { get; set; } = new Color(ConsoleColors.Green).PlainSequence;
        public bool BouncingTextTrueColor { get; set; } = true;
        public int BouncingTextDelay { get; set; } = 10;
        public string BouncingTextWrite { get; set; } = "Nitrocid KS";
        public string BouncingTextBackgroundColor { get; set; } = new Color(ConsoleColors.Black).PlainSequence;
        public string BouncingTextForegroundColor { get; set; } = new Color(ConsoleColors.White).PlainSequence;
        public int BouncingTextMinimumRedColorLevel { get; set; } = 0;
        public int BouncingTextMinimumGreenColorLevel { get; set; } = 0;
        public int BouncingTextMinimumBlueColorLevel { get; set; } = 0;
        public int BouncingTextMinimumColorLevel { get; set; } = 0;
        public int BouncingTextMaximumRedColorLevel { get; set; } = 255;
        public int BouncingTextMaximumGreenColorLevel { get; set; } = 255;
        public int BouncingTextMaximumBlueColorLevel { get; set; } = 255;
        public int BouncingTextMaximumColorLevel { get; set; } = 255;
        public int FaderDelay { get; set; } = 50;
        public int FaderFadeOutDelay { get; set; } = 3000;
        public string FaderWrite { get; set; } = "Nitrocid KS";
        public int FaderMaxSteps { get; set; } = 25;
        public string FaderBackgroundColor { get; set; } = new Color(ConsoleColors.Black).PlainSequence;
        public int FaderMinimumRedColorLevel { get; set; } = 0;
        public int FaderMinimumGreenColorLevel { get; set; } = 0;
        public int FaderMinimumBlueColorLevel { get; set; } = 0;
        public int FaderMaximumRedColorLevel { get; set; } = 255;
        public int FaderMaximumGreenColorLevel { get; set; } = 255;
        public int FaderMaximumBlueColorLevel { get; set; } = 255;
        public int FaderBackDelay { get; set; } = 10;
        public int FaderBackFadeOutDelay { get; set; } = 3000;
        public int FaderBackMaxSteps { get; set; } = 25;
        public int FaderBackMinimumRedColorLevel { get; set; } = 0;
        public int FaderBackMinimumGreenColorLevel { get; set; } = 0;
        public int FaderBackMinimumBlueColorLevel { get; set; } = 0;
        public int FaderBackMaximumRedColorLevel { get; set; } = 255;
        public int FaderBackMaximumGreenColorLevel { get; set; } = 255;
        public int FaderBackMaximumBlueColorLevel { get; set; } = 255;
        public bool BeatFaderTrueColor { get; set; } = true;
        public int BeatFaderDelay { get; set; } = 120;
        public bool BeatFaderCycleColors { get; set; } = true;
        public string BeatFaderBeatColor { get; set; } = "17";
        public int BeatFaderMaxSteps { get; set; } = 25;
        public int BeatFaderMinimumRedColorLevel { get; set; } = 0;
        public int BeatFaderMinimumGreenColorLevel { get; set; } = 0;
        public int BeatFaderMinimumBlueColorLevel { get; set; } = 0;
        public int BeatFaderMinimumColorLevel { get; set; } = 0;
        public int BeatFaderMaximumRedColorLevel { get; set; } = 255;
        public int BeatFaderMaximumGreenColorLevel { get; set; } = 255;
        public int BeatFaderMaximumBlueColorLevel { get; set; } = 255;
        public int BeatFaderMaximumColorLevel { get; set; } = 255;
        public int TypoDelay { get; set; } = 50;
        public int TypoWriteAgainDelay { get; set; } = 3000;
        public string TypoWrite { get; set; } = "Nitrocid KS";
        public int TypoWritingSpeedMin { get; set; } = 50;
        public int TypoWritingSpeedMax { get; set; } = 80;
        public int TypoMissStrikePossibility { get; set; } = 20;
        public int TypoMissPossibility { get; set; } = 10;
        public string TypoTextColor { get; set; } = new Color(ConsoleColors.White).PlainSequence;
        public bool MarqueeTrueColor { get; set; } = true;
        public int MarqueeDelay { get; set; } = 10;
        public string MarqueeWrite { get; set; } = "Nitrocid KS";
        public bool MarqueeAlwaysCentered { get; set; } = true;
        public bool MarqueeUseConsoleAPI { get; set; }
        public string MarqueeBackgroundColor { get; set; } = new Color(ConsoleColors.Black).PlainSequence;
        public int MarqueeMinimumRedColorLevel { get; set; } = 0;
        public int MarqueeMinimumGreenColorLevel { get; set; } = 0;
        public int MarqueeMinimumBlueColorLevel { get; set; } = 0;
        public int MarqueeMinimumColorLevel { get; set; } = 0;
        public int MarqueeMaximumRedColorLevel { get; set; } = 255;
        public int MarqueeMaximumGreenColorLevel { get; set; } = 255;
        public int MarqueeMaximumBlueColorLevel { get; set; } = 255;
        public int MarqueeMaximumColorLevel { get; set; } = 255;
        public int LinotypoDelay { get; set; } = 50;
        public int LinotypoNewScreenDelay { get; set; } = 3000;
        public string LinotypoWrite { get; set; } = "Nitrocid KS";
        public int LinotypoWritingSpeedMin { get; set; } = 50;
        public int LinotypoWritingSpeedMax { get; set; } = 80;
        public int LinotypoMissStrikePossibility { get; set; } = 1;
        public int LinotypoTextColumns { get; set; } = 3;
        public int LinotypoEtaoinThreshold { get; set; } = 5;
        public int LinotypoEtaoinCappingPossibility { get; set; } = 5;
        public int LinotypoEtaoinType { get; set; } = (int)FillType.EtaoinPattern;
        public int LinotypoMissPossibility { get; set; } = 10;
        public string LinotypoTextColor { get; set; } = new Color(ConsoleColors.White).PlainSequence;
        public int TypewriterDelay { get; set; } = 50;
        public int TypewriterNewScreenDelay { get; set; } = 3000;
        public string TypewriterWrite { get; set; } = "Nitrocid KS";
        public int TypewriterWritingSpeedMin { get; set; } = 50;
        public int TypewriterWritingSpeedMax { get; set; } = 80;
        public string TypewriterTextColor { get; set; } = new Color(ConsoleColors.White).PlainSequence;
        public bool FlashColorTrueColor { get; set; } = true;
        public int FlashColorDelay { get; set; } = 20;
        public string FlashColorBackgroundColor { get; set; } = new Color(ConsoleColors.Black).PlainSequence;
        public int FlashColorMinimumRedColorLevel { get; set; } = 0;
        public int FlashColorMinimumGreenColorLevel { get; set; } = 0;
        public int FlashColorMinimumBlueColorLevel { get; set; } = 0;
        public int FlashColorMinimumColorLevel { get; set; } = 0;
        public int FlashColorMaximumRedColorLevel { get; set; } = 255;
        public int FlashColorMaximumGreenColorLevel { get; set; } = 255;
        public int FlashColorMaximumBlueColorLevel { get; set; } = 255;
        public int FlashColorMaximumColorLevel { get; set; } = 255;
        public int SpotWriteDelay { get; set; } = 100;
        public int SpotWriteNewScreenDelay { get; set; } = 3000;
        public string SpotWriteWrite { get; set; } = "Nitrocid KS";
        public string SpotWriteTextColor { get; set; } = new Color(ConsoleColors.White).PlainSequence;
        public bool RampTrueColor { get; set; } = true;
        public int RampDelay { get; set; } = 20;
        public int RampNextRampDelay { get; set; } = 250;
        public string RampUpperLeftCornerChar { get; set; } = "╔";
        public string RampUpperRightCornerChar { get; set; } = "╗";
        public string RampLowerLeftCornerChar { get; set; } = "╚";
        public string RampLowerRightCornerChar { get; set; } = "╝";
        public string RampUpperFrameChar { get; set; } = "═";
        public string RampLowerFrameChar { get; set; } = "═";
        public string RampLeftFrameChar { get; set; } = "║";
        public string RampRightFrameChar { get; set; } = "║";
        public int RampMinimumRedColorLevelStart { get; set; } = 0;
        public int RampMinimumGreenColorLevelStart { get; set; } = 0;
        public int RampMinimumBlueColorLevelStart { get; set; } = 0;
        public int RampMinimumColorLevelStart { get; set; } = 0;
        public int RampMaximumRedColorLevelStart { get; set; } = 255;
        public int RampMaximumGreenColorLevelStart { get; set; } = 255;
        public int RampMaximumBlueColorLevelStart { get; set; } = 255;
        public int RampMaximumColorLevelStart { get; set; } = 255;
        public int RampMinimumRedColorLevelEnd { get; set; } = 0;
        public int RampMinimumGreenColorLevelEnd { get; set; } = 0;
        public int RampMinimumBlueColorLevelEnd { get; set; } = 0;
        public int RampMinimumColorLevelEnd { get; set; } = 0;
        public int RampMaximumRedColorLevelEnd { get; set; } = 255;
        public int RampMaximumGreenColorLevelEnd { get; set; } = 255;
        public int RampMaximumBlueColorLevelEnd { get; set; } = 255;
        public int RampMaximumColorLevelEnd { get; set; } = 255;
        public string RampUpperLeftCornerColor { get; set; } = "7";
        public string RampUpperRightCornerColor { get; set; } = "7";
        public string RampLowerLeftCornerColor { get; set; } = "7";
        public string RampLowerRightCornerColor { get; set; } = "7";
        public string RampUpperFrameColor { get; set; } = "7";
        public string RampLowerFrameColor { get; set; } = "7";
        public string RampLeftFrameColor { get; set; } = "7";
        public string RampRightFrameColor { get; set; } = "7";
        public bool RampUseBorderColors { get; set; }
        public bool StackBoxTrueColor { get; set; } = true;
        public int StackBoxDelay { get; set; } = 10;
        public int StackBoxMinimumRedColorLevel { get; set; } = 0;
        public int StackBoxMinimumGreenColorLevel { get; set; } = 0;
        public int StackBoxMinimumBlueColorLevel { get; set; } = 0;
        public int StackBoxMinimumColorLevel { get; set; } = 0;
        public int StackBoxMaximumRedColorLevel { get; set; } = 255;
        public int StackBoxMaximumGreenColorLevel { get; set; } = 255;
        public int StackBoxMaximumBlueColorLevel { get; set; } = 255;
        public int StackBoxMaximumColorLevel { get; set; } = 255;
        public bool StackBoxFill { get; set; } = true;
        public bool SnakerTrueColor { get; set; } = true;
        public int SnakerDelay { get; set; } = 100;
        public int SnakerStageDelay { get; set; } = 5000;
        public int SnakerMinimumRedColorLevel { get; set; } = 0;
        public int SnakerMinimumGreenColorLevel { get; set; } = 0;
        public int SnakerMinimumBlueColorLevel { get; set; } = 0;
        public int SnakerMinimumColorLevel { get; set; } = 0;
        public int SnakerMaximumRedColorLevel { get; set; } = 255;
        public int SnakerMaximumGreenColorLevel { get; set; } = 255;
        public int SnakerMaximumBlueColorLevel { get; set; } = 255;
        public int SnakerMaximumColorLevel { get; set; } = 255;
        public bool BarRotTrueColor { get; set; } = true;
        public int BarRotDelay { get; set; } = 10;
        public int BarRotNextRampDelay { get; set; } = 250;
        public string BarRotUpperLeftCornerChar { get; set; } = "╔";
        public string BarRotUpperRightCornerChar { get; set; } = "╗";
        public string BarRotLowerLeftCornerChar { get; set; } = "╚";
        public string BarRotLowerRightCornerChar { get; set; } = "╝";
        public string BarRotUpperFrameChar { get; set; } = "═";
        public string BarRotLowerFrameChar { get; set; } = "═";
        public string BarRotLeftFrameChar { get; set; } = "║";
        public string BarRotRightFrameChar { get; set; } = "║";
        public int BarRotMinimumRedColorLevelStart { get; set; } = 0;
        public int BarRotMinimumGreenColorLevelStart { get; set; } = 0;
        public int BarRotMinimumBlueColorLevelStart { get; set; } = 0;
        public int BarRotMaximumRedColorLevelStart { get; set; } = 255;
        public int BarRotMaximumGreenColorLevelStart { get; set; } = 255;
        public int BarRotMaximumBlueColorLevelStart { get; set; } = 255;
        public int BarRotMinimumRedColorLevelEnd { get; set; } = 0;
        public int BarRotMinimumGreenColorLevelEnd { get; set; } = 0;
        public int BarRotMinimumBlueColorLevelEnd { get; set; } = 0;
        public int BarRotMaximumRedColorLevelEnd { get; set; } = 255;
        public int BarRotMaximumGreenColorLevelEnd { get; set; } = 255;
        public int BarRotMaximumBlueColorLevelEnd { get; set; } = 255;
        public string BarRotUpperLeftCornerColor { get; set; } = "192;192;192";
        public string BarRotUpperRightCornerColor { get; set; } = "192;192;192";
        public string BarRotLowerLeftCornerColor { get; set; } = "192;192;192";
        public string BarRotLowerRightCornerColor { get; set; } = "192;192;192";
        public string BarRotUpperFrameColor { get; set; } = "192;192;192";
        public string BarRotLowerFrameColor { get; set; } = "192;192;192";
        public string BarRotLeftFrameColor { get; set; } = "192;192;192";
        public string BarRotRightFrameColor { get; set; } = "192;192;192";
        public bool BarRotUseBorderColors { get; set; }
        public bool FireworksTrueColor { get; set; } = true;
        public int FireworksDelay { get; set; } = 10;
        public int FireworksRadius { get; set; } = 5;
        public int FireworksMinimumRedColorLevel { get; set; } = 0;
        public int FireworksMinimumGreenColorLevel { get; set; } = 0;
        public int FireworksMinimumBlueColorLevel { get; set; } = 0;
        public int FireworksMinimumColorLevel { get; set; } = 0;
        public int FireworksMaximumRedColorLevel { get; set; } = 255;
        public int FireworksMaximumGreenColorLevel { get; set; } = 255;
        public int FireworksMaximumBlueColorLevel { get; set; } = 255;
        public int FireworksMaximumColorLevel { get; set; } = 255;
        public bool FigletTrueColor { get; set; } = true;
        public int FigletDelay { get; set; } = 1000;
        public string FigletText { get; set; } = "Nitrocid KS";
        public string FigletFont { get; set; } = "Small";
        public int FigletMinimumRedColorLevel { get; set; } = 0;
        public int FigletMinimumGreenColorLevel { get; set; } = 0;
        public int FigletMinimumBlueColorLevel { get; set; } = 0;
        public int FigletMinimumColorLevel { get; set; } = 0;
        public int FigletMaximumRedColorLevel { get; set; } = 255;
        public int FigletMaximumGreenColorLevel { get; set; } = 255;
        public int FigletMaximumBlueColorLevel { get; set; } = 255;
        public int FigletMaximumColorLevel { get; set; } = 255;
        public bool FlashTextTrueColor { get; set; } = true;
        public int FlashTextDelay { get; set; } = 20;
        public string FlashTextWrite { get; set; } = "Nitrocid KS";
        public string FlashTextBackgroundColor { get; set; } = new Color(ConsoleColors.Black).PlainSequence;
        public int FlashTextMinimumRedColorLevel { get; set; } = 0;
        public int FlashTextMinimumGreenColorLevel { get; set; } = 0;
        public int FlashTextMinimumBlueColorLevel { get; set; } = 0;
        public int FlashTextMinimumColorLevel { get; set; } = 0;
        public int FlashTextMaximumRedColorLevel { get; set; } = 255;
        public int FlashTextMaximumGreenColorLevel { get; set; } = 255;
        public int FlashTextMaximumBlueColorLevel { get; set; } = 255;
        public int FlashTextMaximumColorLevel { get; set; } = 255;
        public int NoiseNewScreenDelay { get; set; } = 5000;
        public int NoiseDensity { get; set; } = 40;
        public int PersonLookupDelay { get; set; } = 75;
        public int PersonLookupLookedUpDelay { get; set; } = 10000;
        public int PersonLookupMinimumNames { get; set; } = 10;
        public int PersonLookupMaximumNames { get; set; } = 100;
        public int PersonLookupMinimumAgeYears { get; set; } = 18;
        public int PersonLookupMaximumAgeYears { get; set; } = 100;
        public bool DateAndTimeTrueColor { get; set; } = true;
        public int DateAndTimeDelay { get; set; } = 1000;
        public int DateAndTimeMinimumRedColorLevel { get; set; } = 0;
        public int DateAndTimeMinimumGreenColorLevel { get; set; } = 0;
        public int DateAndTimeMinimumBlueColorLevel { get; set; } = 0;
        public int DateAndTimeMinimumColorLevel { get; set; } = 0;
        public int DateAndTimeMaximumRedColorLevel { get; set; } = 255;
        public int DateAndTimeMaximumGreenColorLevel { get; set; } = 255;
        public int DateAndTimeMaximumBlueColorLevel { get; set; } = 255;
        public int DateAndTimeMaximumColorLevel { get; set; } = 255;
        public int GlitchDelay { get; set; } = 10;
        public int GlitchDensity { get; set; } = 40;
        public bool FallingLineTrueColor { get; set; } = true;
        public int FallingLineDelay { get; set; } = 10;
        public int FallingLineMaxSteps { get; set; } = 25;
        public int FallingLineMinimumRedColorLevel { get; set; } = 0;
        public int FallingLineMinimumGreenColorLevel { get; set; } = 0;
        public int FallingLineMinimumBlueColorLevel { get; set; } = 0;
        public int FallingLineMinimumColorLevel { get; set; } = 0;
        public int FallingLineMaximumRedColorLevel { get; set; } = 255;
        public int FallingLineMaximumGreenColorLevel { get; set; } = 255;
        public int FallingLineMaximumBlueColorLevel { get; set; } = 255;
        public int FallingLineMaximumColorLevel { get; set; } = 255;
        public bool IndeterminateTrueColor { get; set; } = true;
        public int IndeterminateDelay { get; set; } = 20;
        public string IndeterminateUpperLeftCornerChar { get; set; } = "╔";
        public string IndeterminateUpperRightCornerChar { get; set; } = "╗";
        public string IndeterminateLowerLeftCornerChar { get; set; } = "╚";
        public string IndeterminateLowerRightCornerChar { get; set; } = "╝";
        public string IndeterminateUpperFrameChar { get; set; } = "═";
        public string IndeterminateLowerFrameChar { get; set; } = "═";
        public string IndeterminateLeftFrameChar { get; set; } = "║";
        public string IndeterminateRightFrameChar { get; set; } = "║";
        public int IndeterminateMinimumRedColorLevel { get; set; } = 0;
        public int IndeterminateMinimumGreenColorLevel { get; set; } = 0;
        public int IndeterminateMinimumBlueColorLevel { get; set; } = 0;
        public int IndeterminateMinimumColorLevel { get; set; } = 0;
        public int IndeterminateMaximumRedColorLevel { get; set; } = 255;
        public int IndeterminateMaximumGreenColorLevel { get; set; } = 255;
        public int IndeterminateMaximumBlueColorLevel { get; set; } = 255;
        public int IndeterminateMaximumColorLevel { get; set; } = 255;
        public string IndeterminateUpperLeftCornerColor { get; set; } = "7";
        public string IndeterminateUpperRightCornerColor { get; set; } = "7";
        public string IndeterminateLowerLeftCornerColor { get; set; } = "7";
        public string IndeterminateLowerRightCornerColor { get; set; } = "7";
        public string IndeterminateUpperFrameColor { get; set; } = "7";
        public string IndeterminateLowerFrameColor { get; set; } = "7";
        public string IndeterminateLeftFrameColor { get; set; } = "7";
        public string IndeterminateRightFrameColor { get; set; } = "7";
        public bool IndeterminateUseBorderColors { get; set; }
        public int PulseDelay { get; set; } = 50;
        public int PulseMaxSteps { get; set; } = 25;
        public int PulseMinimumRedColorLevel { get; set; } = 0;
        public int PulseMinimumGreenColorLevel { get; set; } = 0;
        public int PulseMinimumBlueColorLevel { get; set; } = 0;
        public int PulseMaximumRedColorLevel { get; set; } = 255;
        public int PulseMaximumGreenColorLevel { get; set; } = 255;
        public int PulseMaximumBlueColorLevel { get; set; } = 255;
        public bool BeatPulseTrueColor { get; set; } = true;
        public int BeatPulseDelay { get; set; } = 50;
        public bool BeatPulseCycleColors { get; set; } = true;
        public string BeatPulseBeatColor { get; set; } = "17";
        public int BeatPulseMaxSteps { get; set; } = 25;
        public int BeatPulseMinimumRedColorLevel { get; set; } = 0;
        public int BeatPulseMinimumGreenColorLevel { get; set; } = 0;
        public int BeatPulseMinimumBlueColorLevel { get; set; } = 0;
        public int BeatPulseMinimumColorLevel { get; set; } = 0;
        public int BeatPulseMaximumRedColorLevel { get; set; } = 255;
        public int BeatPulseMaximumGreenColorLevel { get; set; } = 255;
        public int BeatPulseMaximumBlueColorLevel { get; set; } = 255;
        public int BeatPulseMaximumColorLevel { get; set; } = 255;
        public int EdgePulseDelay { get; set; } = 50;
        public int EdgePulseMaxSteps { get; set; } = 25;
        public int EdgePulseMinimumRedColorLevel { get; set; } = 0;
        public int EdgePulseMinimumGreenColorLevel { get; set; } = 0;
        public int EdgePulseMinimumBlueColorLevel { get; set; } = 0;
        public int EdgePulseMaximumRedColorLevel { get; set; } = 255;
        public int EdgePulseMaximumGreenColorLevel { get; set; } = 255;
        public int EdgePulseMaximumBlueColorLevel { get; set; } = 255;
        public bool BeatEdgePulseTrueColor { get; set; } = true;
        public int BeatEdgePulseDelay { get; set; } = 50;
        public bool BeatEdgePulseCycleColors { get; set; } = true;
        public string BeatEdgePulseBeatColor { get; set; } = "17";
        public int BeatEdgePulseMaxSteps { get; set; } = 25;
        public int BeatEdgePulseMinimumRedColorLevel { get; set; } = 0;
        public int BeatEdgePulseMinimumGreenColorLevel { get; set; } = 0;
        public int BeatEdgePulseMinimumBlueColorLevel { get; set; } = 0;
        public int BeatEdgePulseMinimumColorLevel { get; set; } = 0;
        public int BeatEdgePulseMaximumRedColorLevel { get; set; } = 255;
        public int BeatEdgePulseMaximumGreenColorLevel { get; set; } = 255;
        public int BeatEdgePulseMaximumBlueColorLevel { get; set; } = 255;
        public int BeatEdgePulseMaximumColorLevel { get; set; } = 255;
        public int GradientRotDelay { get; set; } = 10;
        public int GradientRotNextRampDelay { get; set; } = 250;
        public int GradientRotMinimumRedColorLevelStart { get; set; } = 0;
        public int GradientRotMinimumGreenColorLevelStart { get; set; } = 0;
        public int GradientRotMinimumBlueColorLevelStart { get; set; } = 0;
        public int GradientRotMaximumRedColorLevelStart { get; set; } = 255;
        public int GradientRotMaximumGreenColorLevelStart { get; set; } = 255;
        public int GradientRotMaximumBlueColorLevelStart { get; set; } = 255;
        public int GradientRotMinimumRedColorLevelEnd { get; set; } = 0;
        public int GradientRotMinimumGreenColorLevelEnd { get; set; } = 0;
        public int GradientRotMinimumBlueColorLevelEnd { get; set; } = 0;
        public int GradientRotMaximumRedColorLevelEnd { get; set; } = 255;
        public int GradientRotMaximumGreenColorLevelEnd { get; set; } = 255;
        public int GradientRotMaximumBlueColorLevelEnd { get; set; } = 255;
        public int GradientNextRampDelay { get; set; } = 250;
        public int GradientMinimumRedColorLevelStart { get; set; } = 0;
        public int GradientMinimumGreenColorLevelStart { get; set; } = 0;
        public int GradientMinimumBlueColorLevelStart { get; set; } = 0;
        public int GradientMaximumRedColorLevelStart { get; set; } = 255;
        public int GradientMaximumGreenColorLevelStart { get; set; } = 255;
        public int GradientMaximumBlueColorLevelStart { get; set; } = 255;
        public int GradientMinimumRedColorLevelEnd { get; set; } = 0;
        public int GradientMinimumGreenColorLevelEnd { get; set; } = 0;
        public int GradientMinimumBlueColorLevelEnd { get; set; } = 0;
        public int GradientMaximumRedColorLevelEnd { get; set; } = 255;
        public int GradientMaximumGreenColorLevelEnd { get; set; } = 255;
        public int GradientMaximumBlueColorLevelEnd { get; set; } = 255;
        public bool LightspeedCycleColors { get; set; }
        public int LightspeedMinimumRedColorLevel { get; set; } = 0;
        public int LightspeedMinimumGreenColorLevel { get; set; } = 0;
        public int LightspeedMinimumBlueColorLevel { get; set; } = 0;
        public int LightspeedMinimumColorLevel { get; set; } = 0;
        public int LightspeedMaximumRedColorLevel { get; set; } = 255;
        public int LightspeedMaximumGreenColorLevel { get; set; } = 255;
        public int LightspeedMaximumBlueColorLevel { get; set; } = 255;
        public int LightspeedMaximumColorLevel { get; set; } = 255;
        public int StarfieldDelay { get; set; } = 10;
        public int SirenDelay { get; set; } = 500;
        public string SirenStyle { get; set; } = "Cop";
        public int SpinDelay { get; set; } = 10;
        public bool SnakeFillTrueColor { get; set; } = true;
        public int SnakeFillDelay { get; set; } = 10;
        public int SnakeFillMinimumRedColorLevel { get; set; } = 0;
        public int SnakeFillMinimumGreenColorLevel { get; set; } = 0;
        public int SnakeFillMinimumBlueColorLevel { get; set; } = 0;
        public int SnakeFillMinimumColorLevel { get; set; } = 0;
        public int SnakeFillMaximumRedColorLevel { get; set; } = 255;
        public int SnakeFillMaximumGreenColorLevel { get; set; } = 255;
        public int SnakeFillMaximumBlueColorLevel { get; set; } = 255;
        public int SnakeFillMaximumColorLevel { get; set; } = 255;
        public int EqualizerNextScreenDelay { get; set; } = 3000;
        public int BSODDelay { get; set; } = 10000;
        public int MemdumpDelay { get; set; } = 500;
        public int LyricsDelay { get; set; } = 10000;
        public bool ExcaliBeatsTrueColor { get; set; } = true;
        public int ExcaliBeatsDelay { get; set; } = 140;
        public bool ExcaliBeatsCycleColors { get; set; } = true;
        public bool ExcaliBeatsExplicit { get; set; } = true;
        public bool ExcaliBeatsTranceMode { get; set; }
        public string ExcaliBeatsBeatColor { get; set; } = "17";
        public int ExcaliBeatsMaxSteps { get; set; } = 25;
        public int ExcaliBeatsMinimumRedColorLevel { get; set; } = 0;
        public int ExcaliBeatsMinimumGreenColorLevel { get; set; } = 0;
        public int ExcaliBeatsMinimumBlueColorLevel { get; set; } = 0;
        public int ExcaliBeatsMinimumColorLevel { get; set; } = 0;
        public int ExcaliBeatsMaximumRedColorLevel { get; set; } = 255;
        public int ExcaliBeatsMaximumGreenColorLevel { get; set; } = 255;
        public int ExcaliBeatsMaximumBlueColorLevel { get; set; } = 255;
        public int ExcaliBeatsMaximumColorLevel { get; set; } = 255;
    }
}
