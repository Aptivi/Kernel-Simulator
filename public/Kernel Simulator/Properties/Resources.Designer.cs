//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Properties.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("KS.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;3Y-Diamond OS&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;60&quot;,
        ///    &quot;LicenseColor&quot;: &quot;113&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;146&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;146&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;60&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;35&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;113&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;113&quot;,
        ///    &quot;ListValueColor&quot;: &quot;35&quot;,
        ///    &quot;StageColor&quot;: &quot;146&quot;,
        ///    &quot;ErrorColor&quot;: &quot;146&quot;,
        ///    &quot;WarningColor&quot;: &quot;146&quot;,
        ///    &quot;OptionColor&quot;: &quot;113&quot;,
        ///    &quot;BannerColor&quot;: &quot;146&quot;,
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string _3Y_Diamond {
            get {
                return ResourceManager.GetString("_3Y_Diamond", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Default&quot;,
        ///        &quot;Description&quot;: &quot;The default theme for the kernel&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;15&quot;,
        ///    &quot;LicenseColor&quot;: &quot;15&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;11&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;9&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;2&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;10&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;7&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;3&quot;,
        ///    &quot;ListValueColor&quot;: &quot;8&quot;,
        ///    &quot;StageColor&quot;: &quot;10&quot;,
        ///    &quot;ErrorColor&quot;: &quot;9&quot;,
        ///    &quot;WarningColor&quot;: &quot;11&quot;,
        ///    &quot;OptionColor [rest of string was truncated]&quot;;.
        /// </summary>
        public static string _Default {
            get {
                return ResourceManager.GetString("_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Amaya&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;#b491c5&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#808080&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#68228b&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#68228b&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#33218a&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#68228b&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#000000&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#808080&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#b491c5&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#33218a&quot;,
        ///    &quot;StageColor&quot;: &quot;#b491c5&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#68228b&quot;,
        ///    &quot;WarningColor&quot;: &quot;#68228b&quot;,
        ///    &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Amaya {
            get {
                return ResourceManager.GetString("Amaya", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Aptivi&quot;,
        ///        &quot;Description&quot;: &quot;Our branding harmony&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#C390D9&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#C390D9&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#752EFD&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#752EFD&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#752EFD&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#752EFD&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#020143&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#C390D9&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#C390D9&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#752EFD&quot;,
        ///    &quot;StageColor&quot;: &quot;#C390D9&quot;,
        ///    &quot;ErrorColor&quot;: &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Aptivi {
            get {
                return ResourceManager.GetString("Aptivi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Aquatic&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;68;142;227&quot;,
        ///    &quot;LicenseColor&quot;: &quot;68;142;227&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;48;159;199&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;40;59;201&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;69;115;222&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;82;242;226&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;42;122;191&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;62;135;199&quot;,
        ///    &quot;ListValueColor&quot;: &quot;61;102;196&quot;,
        ///    &quot;StageColor&quot;: &quot;82;242;226&quot;,
        ///    &quot;ErrorColor&quot;: &quot;40;59;201&quot;,
        ///    &quot;Warni [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Aquatic {
            get {
                return ResourceManager.GetString("Aquatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;Arabic&quot;,
        ///  &quot;Transliterable&quot;: true,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;al&apos;awamir almtaht: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;tam &apos;iilgha&apos; haqn al&apos;awamir.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;sayatimu jadwlat alhujaj almahqunat litashghiliha eind &apos;iieadat altamhid altaali.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;qalib &apos;alwan ghayr salih {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;hwprobe: sayatim alta [rest of string was truncated]&quot;;.
        /// </summary>
        public static string arb {
            get {
                return ResourceManager.GetString("arb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;Arabic&quot;,
        ///  &quot;Transliterable&quot;: true,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;الأوامر المتاحة: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;تم إلغاء حقن الأوامر.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;سيتم جدولة الحجج المحقونة لتشغيلها عند إعادة التمهيد التالي.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;قالب ألوان غير صالح {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;hwprobe: سيتم التحقيق في الأجهزة الخاصة بك. ارجوك انتظر. [rest of string was truncated]&quot;;.
        /// </summary>
        public static string arb_T {
            get {
                return ResourceManager.GetString("arb_T", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Ayu (dark)&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;184;204;82&quot;,
        ///    &quot;LicenseColor&quot;: &quot;92;103;115&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;255;119;51&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;255;51;51&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;54;163;217&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;230;182;115&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;15;20;25&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;230;225;207&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;54;163;217&quot;,
        ///    &quot;ListValueColor&quot;: &quot;230;182;115&quot;,
        ///    &quot;StageColor&quot;: &quot;255;180;84&quot;,
        ///    &quot;ErrorColor&quot;: &quot;255;51;51&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string AyuDark {
            get {
                return ResourceManager.GetString("AyuDark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Ayu (light)&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;134;179;0&quot;,
        ///    &quot;LicenseColor&quot;: &quot;171;176;182&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;255;119;51&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;255;51;51&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;54;163;217&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;230;182;115&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;250;250;250&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;92;103;115&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;54;163;217&quot;,
        ///    &quot;ListValueColor&quot;: &quot;230;182;115&quot;,
        ///    &quot;StageColor&quot;: &quot;242;151;24&quot;,
        ///    &quot;ErrorColor&quot;: &quot;255;51; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string AyuLight {
            get {
                return ResourceManager.GetString("AyuLight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Ayu (mirage)&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;187;230;126&quot;,
        ///    &quot;LicenseColor&quot;: &quot;92;103;115&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;255;174;87&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;255;51;51&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;92;207;230&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;255;196;76&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;33;39;51&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;217;215;206&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;92;207;230&quot;,
        ///    &quot;ListValueColor&quot;: &quot;255;196;76&quot;,
        ///    &quot;StageColor&quot;: &quot;255;213;127&quot;,
        ///    &quot;ErrorColor&quot;: &quot;255;51;5 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string AyuMirage {
            get {
                return ResourceManager.GetString("AyuMirage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;BedOS&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;74&quot;,
        ///    &quot;LicenseColor&quot;: &quot;177&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;202&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;202&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;130&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;202&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;177&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;12&quot;,
        ///    &quot;ListValueColor&quot;: &quot;80&quot;,
        ///    &quot;StageColor&quot;: &quot;80&quot;,
        ///    &quot;ErrorColor&quot;: &quot;202&quot;,
        ///    &quot;WarningColor&quot;: &quot;202&quot;,
        ///    &quot;OptionColor&quot;: &quot;12&quot;,
        ///    &quot;BannerColor&quot;: &quot;80&quot;,
        ///    &quot;Notifi [rest of string was truncated]&quot;;.
        /// </summary>
        public static string BedOS {
            get {
                return ResourceManager.GetString("BedOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Black on White&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;0&quot;,
        ///    &quot;LicenseColor&quot;: &quot;0&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;0&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;0&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;0&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;0&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;15&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;0&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;0&quot;,
        ///    &quot;ListValueColor&quot;: &quot;0&quot;,
        ///    &quot;StageColor&quot;: &quot;0&quot;,
        ///    &quot;ErrorColor&quot;: &quot;0&quot;,
        ///    &quot;WarningColor&quot;: &quot;0&quot;,
        ///    &quot;OptionColor&quot;: &quot;0&quot;,
        ///    &quot;BannerColor&quot;: &quot;0&quot;,
        ///    &quot;NotificationTitleC [rest of string was truncated]&quot;;.
        /// </summary>
        public static string BlackOnWhite {
            get {
                return ResourceManager.GetString("BlackOnWhite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Black Rose&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;#FF89B7&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#9D003D&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#9D003D&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#6B0029&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#9D003D&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#6B0029&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#000000&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#9D003D&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#FF89B7&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#9D003D&quot;,
        ///    &quot;StageColor&quot;: &quot;#FF89B7&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#6B0029&quot;,
        ///    &quot;WarningColor&quot;: &quot;#9D003D&quot;,
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string BlackRose {
            get {
                return ResourceManager.GetString("BlackRose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Bloody&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;199;187;187&quot;,
        ///    &quot;LicenseColor&quot;: &quot;199;187;187&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;247;188;188&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;71;11;11&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;235;99;99&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;199;34;34&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;242;12;12&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;235;99;99&quot;,
        ///    &quot;ListValueColor&quot;: &quot;199;34;34&quot;,
        ///    &quot;StageColor&quot;: &quot;199;34;34&quot;,
        ///    &quot;ErrorColor&quot;: &quot;71;11;11&quot;,
        ///    &quot;WarningColo [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Bloody {
            get {
                return ResourceManager.GetString("Bloody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Blue Power&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;35;11;128&quot;,
        ///    &quot;LicenseColor&quot;: &quot;35;11;128&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;250;52;55&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;17;153;126&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;44;20;122&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;207;82;60&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;5;158;135&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;50;9;122&quot;,
        ///    &quot;ListValueColor&quot;: &quot;252;109;101&quot;,
        ///    &quot;StageColor&quot;: &quot;207;82;60&quot;,
        ///    &quot;ErrorColor&quot;: &quot;17;153;126&quot;,
        ///    &quot;WarningC [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Blue_Power {
            get {
                return ResourceManager.GetString("Blue_Power", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Bluesome&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;137;126;191&quot;,
        ///    &quot;LicenseColor&quot;: &quot;137;126;191&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;73;45;214&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;137;126;191&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;137;126;191&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;79;77;84&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;158;154;173&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;137;126;191&quot;,
        ///    &quot;ListValueColor&quot;: &quot;32;0;194&quot;,
        ///    &quot;StageColor&quot;: &quot;79;77;84&quot;,
        ///    &quot;ErrorColor&quot;: &quot;137;126;121&quot;,
        ///    &quot;Wa [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Bluesome {
            get {
                return ResourceManager.GetString("Bluesome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Breeze&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;244;79;79&quot;,
        ///    &quot;LicenseColor&quot;: &quot;122;124;125&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;202;146;25&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;77;31;36&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;41;128;185&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;61;174;233&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;35;38;41&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;207;207;194&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;41;128;185&quot;,
        ///    &quot;ListValueColor&quot;: &quot;61;174;233&quot;,
        ///    &quot;StageColor&quot;: &quot;253;188;75&quot;,
        ///    &quot;ErrorColor&quot;: &quot;77;31;36&quot;,
        ///    &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Breeze {
            get {
                return ResourceManager.GetString("Breeze", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Breeze (dark)&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;244;79;79&quot;,
        ///    &quot;LicenseColor&quot;: &quot;122;124;125&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;202;146;25&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;77;31;36&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;41;128;185&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;61;174;233&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;207;207;194&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;41;128;185&quot;,
        ///    &quot;ListValueColor&quot;: &quot;61;174;233&quot;,
        ///    &quot;StageColor&quot;: &quot;253;188;75&quot;,
        ///    &quot;ErrorColor&quot;: &quot;77;31;36&quot;,
        ///    &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string BreezeDark {
            get {
                return ResourceManager.GetString("BreezeDark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;Chinese&quot;,
        ///  &quot;Transliterable&quot;: true,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;Kěyòng mìnglìng: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;Mìnglìng zhùrù yǐ bèi qǔxiāo.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;Zhùrù de cānshù jiāng ānpái zàixià cì chóngxīn qǐdòng shí yùnxíng.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;Wúxiào de yánsè múbǎn {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;hwprobe: Nǐ de yìngjiàn jiāng bèi tàncè [rest of string was truncated]&quot;;.
        /// </summary>
        public static string chi {
            get {
                return ResourceManager.GetString("chi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;Chinese&quot;,
        ///  &quot;Transliterable&quot;: true,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;可用命令：{0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;命令注入已被取消。&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;注入的参数将计划在下次重新引导时运行。&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;无效的颜色模板{0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;hwprobe：将检测您的硬件。请耐心等待...&quot;,
        ///    &quot;CPU: One or more of the CPU cores failed to be probed. Showing information anyway...&quot;: &quot;CPU：一个或多个CPU [rest of string was truncated]&quot;;.
        /// </summary>
        public static string chi_T {
            get {
                return ResourceManager.GetString("chi_T", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;Chinese (Traditional)&quot;,
        ///  &quot;Transliterable&quot;: true,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;Kěyòng mìnglìng:{0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;Mìnglìng zhùrù yǐ bèi qǔxiāo.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;Zhùrù de cānshù jiāng bèi ānpái zàixià cì chóngxīn qǐdòng shí yùnxíng.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;Wúxiào de yánsè múbǎn {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;hwprobe: Nín de yìngji [rest of string was truncated]&quot;;.
        /// </summary>
        public static string cnt {
            get {
                return ResourceManager.GetString("cnt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;Chinese (Traditional)&quot;,
        ///  &quot;Transliterable&quot;: true,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;可用命令：{0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;命令注入已被取消。&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;注入的參數將被安排在下次重新啟動時運行。&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;無效的顏色模板 {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;hwprobe：您的硬件將被探測。請稍等...&quot;,
        ///    &quot;CPU: One or more of the CPU cores failed to be probed. Showing information anyway...&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string cnt_T {
            get {
                return ResourceManager.GetString("cnt_T", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;Czech&quot;,
        ///  &quot;Transliterable&quot;: false,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;Dostupné příkazy: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;Příkazové injekce byla zrušena.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;Vložené argumenty budou naplánovány na další restart.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;Neplatná šablona barev {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;hwprobe: Váš hardware bude testován. Prosím, čeke [rest of string was truncated]&quot;;.
        /// </summary>
        public static string cze {
            get {
                return ResourceManager.GetString("cze", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Darcula&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;#629755&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#A9B7C6&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#CC666E&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#BC3F3C&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#BBBBBB&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#808080&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#2B2B2B&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#A9B7C6&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#3A3A3A&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#8C8C8C&quot;,
        ///    &quot;StageColor&quot;: &quot;#629755&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#CC666E&quot;,
        ///    &quot;WarningColor&quot;: &quot;#A9B7C6&quot;,
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Darcula {
            get {
                return ResourceManager.GetString("Darcula", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Dawn Aurora&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;15;31;64&quot;,
        ///    &quot;LicenseColor&quot;: &quot;15;31;64&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;33;39;83&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;54;47;100&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;78;53;117&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;105;57;131&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;133;61;142&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;163;62;151&quot;,
        ///    &quot;ListValueColor&quot;: &quot;194;62;157&quot;,
        ///    &quot;StageColor&quot;: &quot;105;57;131&quot;,
        ///    &quot;ErrorColor&quot;: &quot;54;47;100&quot;,
        ///    &quot;WarningC [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Dawn_Aurora {
            get {
                return ResourceManager.GetString("Dawn_Aurora", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Debian&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;15&quot;,
        ///    &quot;LicenseColor&quot;: &quot;15&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;15&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;15&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;7&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;7&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;161&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;15&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;15&quot;,
        ///    &quot;ListValueColor&quot;: &quot;15&quot;,
        ///    &quot;StageColor&quot;: &quot;15&quot;,
        ///    &quot;ErrorColor&quot;: &quot;7&quot;,
        ///    &quot;WarningColor&quot;: &quot;15&quot;,
        ///    &quot;OptionColor&quot;: &quot;15&quot;,
        ///    &quot;BannerColor&quot;: &quot;15&quot;,
        ///    &quot;NotificationTi [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Debian {
            get {
                return ResourceManager.GetString("Debian", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;Dutch&quot;,
        ///  &quot;Transliterable&quot;: false,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;Beschikbare opdrachten: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;Commando-injectie is geannuleerd.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;Geïnjecteerde argumenten worden gepland om te worden uitgevoerd bij het volgende opnieuw opstarten.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;Ongeldige kleurensjabloon {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wai [rest of string was truncated]&quot;;.
        /// </summary>
        public static string dtc {
            get {
                return ResourceManager.GetString("dtc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Electronic Dance Music (EDM)&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;#5C1D6B&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#FDD602&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#38A6F3&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#FF3179&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#B41EB2&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#FF3179&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#000000&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#FDD602&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#5C1D6B&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#B41EB2&quot;,
        ///    &quot;StageColor&quot;: &quot;#5C1D6B&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#FF3179&quot;,
        ///    &quot;WarningCo [rest of string was truncated]&quot;;.
        /// </summary>
        public static string EDM {
            get {
                return ResourceManager.GetString("EDM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;English&quot;,
        ///  &quot;Transliterable&quot;: false,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;Available commands: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;Command injection has been cancelled.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;Injected arguments will be scheduled to run at next reboot.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;Invalid color template {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;hwprobe: Your hardware will be pr [rest of string was truncated]&quot;;.
        /// </summary>
        public static string eng {
            get {
                return ResourceManager.GetString("eng", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;English (UK)&quot;,
        ///  &quot;Transliterable&quot;: false,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;Available commands: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;Command injection has been cancelled.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;Injected arguments will be scheduled to run at next reboot.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;Invalid colour template {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;hwprobe: Your hardware will [rest of string was truncated]&quot;;.
        /// </summary>
        public static string enk {
            get {
                return ResourceManager.GetString("enk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Fast X (Fast and Furious 10)&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;#FFFFFF&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#FFFFFF&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#FFFFFF&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#FFFFFF&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#FFFFFF&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#FFFFFF&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#009AFE&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#FFFFFF&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#FFFFFF&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#FFFFFF&quot;,
        ///    &quot;StageColor&quot;: &quot;#FFFFFF&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#FFFFFF&quot;,
        ///    &quot;WarningCo [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Fast_X {
            get {
                return ResourceManager.GetString("Fast_X", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Fast X (Fast and Furious 10)&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;#009AFE&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#009AFE&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#009AFE&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#009AFE&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#009AFE&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#009AFE&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#000023&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#009AFE&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#009AFE&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#009AFE&quot;,
        ///    &quot;StageColor&quot;: &quot;#009AFE&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#009AFE&quot;,
        ///    &quot;WarningCo [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Fast_X_FG {
            get {
                return ResourceManager.GetString("Fast_X_FG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Fire&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;#FAA307&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#FFBA08&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#9D0208&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#D00000&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#F48C06&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#DC2F02&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#03071E&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#FFBA08&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#6A040F&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#F48C06&quot;,
        ///    &quot;StageColor&quot;: &quot;#FAA307&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#9D0208&quot;,
        ///    &quot;WarningColor&quot;: &quot;#FFBA08&quot;,
        ///    &quot;O [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Fire {
            get {
                return ResourceManager.GetString("Fire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;French&quot;,
        ///  &quot;Transliterable&quot;: false,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;Commandes disponibles: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;L&apos;injection de commande a été annulée.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;Les arguments injectés seront programmés pour s&apos;exécuter au prochain redémarrage.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;Modèle de couleur non valide {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;hw [rest of string was truncated]&quot;;.
        /// </summary>
        public static string fre {
            get {
                return ResourceManager.GetString("fre", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;German&quot;,
        ///  &quot;Transliterable&quot;: false,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;Verfügbare Befehle: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;Die Befehlsinjektion wurde abgebrochen.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;Injizierte Argumente werden für den nächsten Neustart geplant.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;Ungültige Farbvorlage {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;hwprobe: Ihre Hardware wird ge [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ger {
            get {
                return ResourceManager.GetString("ger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Grape&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;85;7;173&quot;,
        ///    &quot;LicenseColor&quot;: &quot;85;7;173&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;88;9;179&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;178;133;230&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;116;104;130&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;44;21;69&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;74;49;102&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;184;156;217&quot;,
        ///    &quot;ListValueColor&quot;: &quot;85;7;173&quot;,
        ///    &quot;StageColor&quot;: &quot;44;21;69&quot;,
        ///    &quot;ErrorColor&quot;: &quot;178;133;230&quot;,
        ///    &quot;WarningColor&quot;: [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Grape {
            get {
                return ResourceManager.GetString("Grape", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Grape Kiwi&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;147;77;191&quot;,
        ///    &quot;LicenseColor&quot;: &quot;147;77;191&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;166;51;95&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;99;255;118&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;154;77;201&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;237;83;142&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;93;232;109&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;124;58;166&quot;,
        ///    &quot;ListValueColor&quot;: &quot;250;92;153&quot;,
        ///    &quot;StageColor&quot;: &quot;237;83;142&quot;,
        ///    &quot;ErrorColor&quot;: &quot;99;255;118&quot;,
        ///    &quot;W [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Grape_Kiwi {
            get {
                return ResourceManager.GetString("Grape_Kiwi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Gray on Yellow&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;7&quot;,
        ///    &quot;LicenseColor&quot;: &quot;7&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;7&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;7&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;7&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;7&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;3&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;7&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;7&quot;,
        ///    &quot;ListValueColor&quot;: &quot;7&quot;,
        ///    &quot;StageColor&quot;: &quot;7&quot;,
        ///    &quot;ErrorColor&quot;: &quot;7&quot;,
        ///    &quot;WarningColor&quot;: &quot;7&quot;,
        ///    &quot;OptionColor&quot;: &quot;7&quot;,
        ///    &quot;BannerColor&quot;: &quot;7&quot;,
        ///    &quot;NotificationTitleCo [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GrayOnYellow {
            get {
                return ResourceManager.GetString("GrayOnYellow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Grays&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;33;33;33&quot;,
        ///    &quot;LicenseColor&quot;: &quot;33;33;33&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;52;52;53&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;73;71;73&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;96;92;94&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;119;113;116&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;144;136;138&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;170;158;159&quot;,
        ///    &quot;ListValueColor&quot;: &quot;195;182;181&quot;,
        ///    &quot;StageColor&quot;: &quot;119;113;116&quot;,
        ///    &quot;ErrorColor&quot;: &quot;73;71;73&quot;,
        ///    &quot;WarningColor [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Grays {
            get {
                return ResourceManager.GetString("Grays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Green Mix&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;179;95;68&quot;,
        ///    &quot;LicenseColor&quot;: &quot;179;95;68&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;67;217;144&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;82;196;235&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;163;46;102&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;201;91;54&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;76;217;149&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;90;210;250&quot;,
        ///    &quot;ListValueColor&quot;: &quot;252;61;153&quot;,
        ///    &quot;StageColor&quot;: &quot;201;91;54&quot;,
        ///    &quot;ErrorColor&quot;: &quot;82;196;235&quot;,
        ///    &quot;Warni [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Green_Mix {
            get {
                return ResourceManager.GetString("Green_Mix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Grink (Green + Pink)&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;235;75;155&quot;,
        ///    &quot;LicenseColor&quot;: &quot;235;75;155&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;46;173;42&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;44;222;133&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;249;69;255&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;214;64;139&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;51;199;46&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;44;163;104&quot;,
        ///    &quot;ListValueColor&quot;: &quot;172;67;176&quot;,
        ///    &quot;StageColor&quot;: &quot;214;64;139&quot;,
        ///    &quot;ErrorColor&quot;: &quot;44;222;133&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Grink {
            get {
                return ResourceManager.GetString("Grink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Gruvbox&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;#3c3836&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#d65d0e&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#cc241d&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#fb4934&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#d79921&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#d79921&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#fbf1c7&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#3c3836&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#928374&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#3c3836&quot;,
        ///    &quot;StageColor&quot;: &quot;#928374&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#cc241d&quot;,
        ///    &quot;WarningColor&quot;: &quot;#9d0006&quot;,
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Gruvbox {
            get {
                return ResourceManager.GetString("Gruvbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Grand Theft Auto: San Andreas&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;11&quot;,
        ///    &quot;LicenseColor&quot;: &quot;11&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;3&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;3&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;11&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;3&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;15&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;11&quot;,
        ///    &quot;ListValueColor&quot;: &quot;3&quot;,
        ///    &quot;StageColor&quot;: &quot;11&quot;,
        ///    &quot;ErrorColor&quot;: &quot;3&quot;,
        ///    &quot;WarningColor&quot;: &quot;3&quot;,
        ///    &quot;OptionColor&quot;: &quot;11&quot;,
        ///    &quot;BannerColor&quot;: &quot;11&quot;,
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GTASA {
            get {
                return ResourceManager.GetString("GTASA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Hacker&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;10&quot;,
        ///    &quot;LicenseColor&quot;: &quot;10&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;10&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;10&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;10&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;10&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;8&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;10&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;2&quot;,
        ///    &quot;ListValueColor&quot;: &quot;10&quot;,
        ///    &quot;StageColor&quot;: &quot;2&quot;,
        ///    &quot;ErrorColor&quot;: &quot;2&quot;,
        ///    &quot;WarningColor&quot;: &quot;10&quot;,
        ///    &quot;OptionColor&quot;: &quot;2&quot;,
        ///    &quot;BannerColor&quot;: &quot;2&quot;,
        ///    &quot;NotificationTitleC [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Hacker {
            get {
                return ResourceManager.GetString("Hacker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;H4X0R Level 1&quot;,
        ///  &quot;Transliterable&quot;: false,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;4v41l4bl3 c0mm4nd5: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;c0mm4nd 1nj3c710n h45 b33n c4nc3ll3d.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;1nj3c73d 4r6um3n75 w1ll b3 5ch3dul3d 70 run 47 n3x7 r3b007.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;1nv4l1d c0l0r 73mpl473 {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;hwpr0b3: y0ur h4rdw4r3 w1ll [rest of string was truncated]&quot;;.
        /// </summary>
        public static string hxr_1 {
            get {
                return ResourceManager.GetString("hxr_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;H4X0R Level 2&quot;,
        ///  &quot;Transliterable&quot;: false,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;4\\\\/4!|_4|3|_3 (0/\\\\/\\\\/\\\\/\\\\4|\\\\||)5: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;(0/\\\\/\\\\/\\\\/\\\\4|\\\\||) !|\\\\|_|3(7!0|\\\\| |-|45 |333|\\\\| (4|\\\\|(3|_|_3|).&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;!|\\\\|_|3(73|) 4|29(_)/\\\\/\\\\3|\\\\|75 \\\\/\\\\/!|_|_ |33 5(|-|3|)(_)|_3|) 70 |2(_)|\\\\| 47 |\\\\|3&gt;&lt;7 |23|3007.&quot;,
        ///    &quot;Invalid  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string hxr_2 {
            get {
                return ResourceManager.GetString("hxr_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;H4X0R Level 3&quot;,
        ///  &quot;Transliterable&quot;: false,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;4\\\\/4!14813 (0|\\\\/||\\\\/|4|\\\\||)5: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;(0|\\\\/||\\\\/|4|\\\\||) !|\\\\|_)3(+!0|\\\\| |-|45 833|\\\\| (4|\\\\|(3113|).&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;!|\\\\|_)3(+3|) 4|26|_||\\\\/|3|\\\\|+5 \\\\|/!11 83 5(|-|3|)|_|13|) +0 |2|_||\\\\| 4+ |\\\\|3%+ |23800+.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;!|\\\\|\\ [rest of string was truncated]&quot;;.
        /// </summary>
        public static string hxr_3 {
            get {
                return ResourceManager.GetString("hxr_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;Hindi&quot;,
        ///  &quot;Transliterable&quot;: true,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;upalabdh aadesh: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;kamaand injekshan radd kar diya gaya hai.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;injekshan vaale tark agale reeboot par chalane ke lie nirdhaarit kie jaenge.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;amaany rang tempalet {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;hwprobai: aapake haa [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ind {
            get {
                return ResourceManager.GetString("ind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;Hindi&quot;,
        ///  &quot;Transliterable&quot;: true,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;उपलब्ध आदेश: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;कमांड इंजेक्शन रद्द कर दिया गया है।&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;इंजेक्ट किए गए तर्कों को अगले रिबूट पर चलाने के लिए निर्धारित किया जाएगा।&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;अमान्य रंग टेम्पलेट {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;hwprobe: आपके हार्डवेयर की जांच की [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ind_T {
            get {
                return ResourceManager.GetString("ind_T", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;Italian&quot;,
        ///  &quot;Transliterable&quot;: false,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;Comandi disponibili: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;L&apos;iniezione del comando è stata annullata.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;Gli argomenti iniettati saranno programmati per essere eseguiti al successivo riavvio.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;Modello di colore non valido {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait. [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ita {
            get {
                return ResourceManager.GetString("ita", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;Japanese&quot;,
        ///  &quot;Transliterable&quot;: false,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;利用可能なコマンド：{0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;コマンドインジェクションはキャンセルされました。&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;注入された引数は、次回の再起動時に実行されるようにスケジュールされます。&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;無効なカラーテンプレート{0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;hwprobe：ハードウェアがプローブされます。お待ちください...&quot;,
        ///    &quot;CPU: One or more of the CPU cores failed to be [rest of string was truncated]&quot;;.
        /// </summary>
        public static string jpn {
            get {
                return ResourceManager.GetString("jpn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;Korean&quot;,
        ///  &quot;Transliterable&quot;: true,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;sayong ganeunghan myeonglyeong : {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;myeonglyeong ju-ib-i chwisodoeeossseubnida.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;ju-ib doen insuneun da-eum-e dasi buting hal ttae silhaengdoedolog yeyagdoebnida.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;jalmosdoen saegsang tempeullis {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Plea [rest of string was truncated]&quot;;.
        /// </summary>
        public static string kor {
            get {
                return ResourceManager.GetString("kor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;Korean&quot;,
        ///  &quot;Transliterable&quot;: true,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;사용 가능한 명령 : {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;명령 주입이 취소되었습니다.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;주입 된 인수는 다음에 다시 부팅 할 때 실행되도록 예약됩니다.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;잘못된 색상 템플릿 {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;hwprobe : 하드웨어가 검사됩니다. 기다려주세요 ...&quot;,
        ///    &quot;CPU: One or more of the CPU cores failed to be probed. Show [rest of string was truncated]&quot;;.
        /// </summary>
        public static string kor_T {
            get {
                return ResourceManager.GetString("kor_T", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;arb&quot;: {
        ///        &quot;name&quot;: &quot;Arabic&quot;,
        ///        &quot;transliterable&quot;: true
        ///    },
        ///    &quot;arb-T&quot;: {
        ///        &quot;name&quot;: &quot;Arabic&quot;,
        ///        &quot;transliterable&quot;: true,
        ///        &quot;codepage&quot;: 1256
        ///    },
        ///    &quot;chi&quot;: {
        ///        &quot;name&quot;: &quot;Chinese&quot;,
        ///        &quot;transliterable&quot;: true
        ///    },
        ///    &quot;chi-T&quot;: {
        ///        &quot;name&quot;: &quot;Chinese&quot;,
        ///        &quot;transliterable&quot;: true,
        ///        &quot;codepage&quot;: 936
        ///    },
        ///    &quot;cnt&quot;: {
        ///        &quot;name&quot;: &quot;Chinese (Traditional)&quot;,
        ///        &quot;transliterable&quot;: true
        ///    },
        ///    &quot;cnt-T&quot;: {
        ///        &quot;name&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string LanguageMetadata {
            get {
                return ResourceManager.GetString("LanguageMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Lemon&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;185;204;45&quot;,
        ///    &quot;LicenseColor&quot;: &quot;185;204;45&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;166;160;46&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;184;186;41&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;186;212;70&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;199;197;78&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;173;173;35&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;232;250;97&quot;,
        ///    &quot;ListValueColor&quot;: &quot;200;224;45&quot;,
        ///    &quot;StageColor&quot;: &quot;199;197;78&quot;,
        ///    &quot;ErrorColor&quot;: &quot;184;186;41&quot;,
        ///    &quot;Warni [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Lemon {
            get {
                return ResourceManager.GetString("Lemon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Light Planks&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;184;129;62&quot;,
        ///    &quot;LicenseColor&quot;: &quot;184;129;62&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;194;136;66&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;217;154;87&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;224;196;72&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;255;154;59&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;202;204;59&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;219;189;88&quot;,
        ///    &quot;ListValueColor&quot;: &quot;224;165;56&quot;,
        ///    &quot;StageColor&quot;: &quot;255;154;59&quot;,
        ///    &quot;ErrorColor&quot;: &quot;217;154;87&quot;,
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Light_Planks {
            get {
                return ResourceManager.GetString("Light_Planks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Linux (colored defaults)&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;7&quot;,
        ///    &quot;LicenseColor&quot;: &quot;7&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;7&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;7&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;12&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;12&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;7&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;15&quot;,
        ///    &quot;ListValueColor&quot;: &quot;7&quot;,
        ///    &quot;StageColor&quot;: &quot;15&quot;,
        ///    &quot;ErrorColor&quot;: &quot;7&quot;,
        ///    &quot;WarningColor&quot;: &quot;7&quot;,
        ///    &quot;OptionColor&quot;: &quot;15&quot;,
        ///    &quot;BannerColor&quot;: &quot;15&quot;,
        ///    &quot;Not [rest of string was truncated]&quot;;.
        /// </summary>
        public static string LinuxColoredDef {
            get {
                return ResourceManager.GetString("LinuxColoredDef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Linux (uncolored)&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;7&quot;,
        ///    &quot;LicenseColor&quot;: &quot;7&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;7&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;7&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;7&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;7&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;7&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;7&quot;,
        ///    &quot;ListValueColor&quot;: &quot;7&quot;,
        ///    &quot;StageColor&quot;: &quot;7&quot;,
        ///    &quot;ErrorColor&quot;: &quot;7&quot;,
        ///    &quot;WarningColor&quot;: &quot;7&quot;,
        ///    &quot;OptionColor&quot;: &quot;7&quot;,
        ///    &quot;BannerColor&quot;: &quot;7&quot;,
        ///    &quot;NotificationTitl [rest of string was truncated]&quot;;.
        /// </summary>
        public static string LinuxUncolored {
            get {
                return ResourceManager.GetString("LinuxUncolored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Materialistic&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;105;158;62&quot;,
        ///    &quot;LicenseColor&quot;: &quot;105;158;62&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;56;91;232&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;117;46;176&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;189;164;64&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;113;176;62&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;39;62;156&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;107;38;163&quot;,
        ///    &quot;ListValueColor&quot;: &quot;214;188;84&quot;,
        ///    &quot;StageColor&quot;: &quot;113;176;62&quot;,
        ///    &quot;ErrorColor&quot;: &quot;117;46;176&quot;,
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Materialistic {
            get {
                return ResourceManager.GetString("Materialistic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Maya&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;#d1e1da&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#c3d6c2&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#912e2e&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#4e3925&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#e59f00&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#4e3925&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#000000&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#c3d6c2&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#d1e1da&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#e59f00&quot;,
        ///    &quot;StageColor&quot;: &quot;#d1e1da&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#4e3925&quot;,
        ///    &quot;WarningColor&quot;: &quot;#912e2e&quot;,
        ///    &quot;O [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Maya {
            get {
                return ResourceManager.GetString("Maya", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Melange&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;#CC7F2B&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#C29830&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#E0BFBB&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#D7898C&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#DFE3EB&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#DFE3EB&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#F4F0ED&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#6B5C4D&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#A38D78&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#6B5C4D&quot;,
        ///    &quot;StageColor&quot;: &quot;#A38D78&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#E0BFBB&quot;,
        ///    &quot;WarningColor&quot;: &quot;#D7898C&quot;,
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Melange {
            get {
                return ResourceManager.GetString("Melange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Melange (dark)&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;#E49B5D&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#EBC06D&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#7D2A2F&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#B65C60&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#243146&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#243146&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#2A2520&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#ECE1D7&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#A38D78&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#ECE1D7&quot;,
        ///    &quot;StageColor&quot;: &quot;#A38D78&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#7D2A2F&quot;,
        ///    &quot;WarningColor&quot;: &quot;#65C60&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string MelangeDark {
            get {
                return ResourceManager.GetString("MelangeDark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Metallic&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;8&quot;,
        ///    &quot;LicenseColor&quot;: &quot;7&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;8&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;8&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;8&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;7&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;239&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;7&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;8&quot;,
        ///    &quot;ListValueColor&quot;: &quot;8&quot;,
        ///    &quot;StageColor&quot;: &quot;7&quot;,
        ///    &quot;ErrorColor&quot;: &quot;8&quot;,
        ///    &quot;WarningColor&quot;: &quot;8&quot;,
        ///    &quot;OptionColor&quot;: &quot;7&quot;,
        ///    &quot;BannerColor&quot;: &quot;7&quot;,
        ///    &quot;NotificationTitleColor&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Metallic {
            get {
                return ResourceManager.GetString("Metallic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Minecraft - Creeper&quot;,
        ///        &quot;Description&quot;: &quot;Creepers in the world of Minecraft blow you up! Can you survive?&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#8fe38f&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#0db50d&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#609e60&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#609e60&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#0f800f&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#0f800f&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#004500&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#609e60&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#0db50d&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#60 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Minecraft_Creeper {
            get {
                return ResourceManager.GetString("Minecraft-Creeper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Minecraft - Grass&quot;,
        ///        &quot;Description&quot;: &quot;Grass from Minecraft&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#4a6f28&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#5b8b32&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#527a2d&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#527a2d&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#5b8731&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#5b8731&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#3e5c20&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#527a2d&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#5b8b32&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#527a2d&quot;,
        ///    &quot;StageColor&quot;: &quot;#5b8b32&quot;,
        ///    &quot;Err [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Minecraft_Grass {
            get {
                return ResourceManager.GetString("Minecraft-Grass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Minecraft - Obsidian&quot;,
        ///        &quot;Description&quot;: &quot;Obsidian block from Minecraft&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#3d2856&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#281f3f&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#110d1d&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#110d1d&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#3d2856&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#3d2856&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#06030c&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#110d1d&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#281f3f&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#110d1d&quot;,
        ///    &quot;StageColor&quot;: &quot;#281f3f [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Minecraft_Obsidian {
            get {
                return ResourceManager.GetString("Minecraft-Obsidian", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Mint&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;50;161;61&quot;,
        ///    &quot;LicenseColor&quot;: &quot;50;161;61&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;75;173;68&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;100;176;42&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;64;189;79&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;48;194;43&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;44;201;50&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;109;207;76&quot;,
        ///    &quot;ListValueColor&quot;: &quot;127;212;78&quot;,
        ///    &quot;StageColor&quot;: &quot;48;194;43&quot;,
        ///    &quot;ErrorColor&quot;: &quot;100;176;42&quot;,
        ///    &quot;WarningColor&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Mint {
            get {
                return ResourceManager.GetString("Mint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Mint Gum&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;102;17;64&quot;,
        ///    &quot;LicenseColor&quot;: &quot;102;17;64&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;115;18;63&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;133;12;58&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;49;107;74&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;49;112;85&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;60;120;84&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;62;135;97&quot;,
        ///    &quot;ListValueColor&quot;: &quot;217;181;74&quot;,
        ///    &quot;StageColor&quot;: &quot;49;112;85&quot;,
        ///    &quot;ErrorColor&quot;: &quot;133;12;58&quot;,
        ///    &quot;WarningColor [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Mint_Gum {
            get {
                return ResourceManager.GetString("Mint_Gum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Mintback&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;23;13;28&quot;,
        ///    &quot;LicenseColor&quot;: &quot;23;13;28&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;32;14;36&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;39;24;43&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;204;29;45&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;212;25;44&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;15&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;217;32;43&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;196;85;37&quot;,
        ///    &quot;ListValueColor&quot;: &quot;127;163;54&quot;,
        ///    &quot;StageColor&quot;: &quot;212;25;44&quot;,
        ///    &quot;ErrorColor&quot;: &quot;39;24;43&quot;,
        ///    &quot;WarningColor&quot;: &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Mintback {
            get {
                return ResourceManager.GetString("Mintback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Mintish&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;244;242;105&quot;,
        ///    &quot;LicenseColor&quot;: &quot;244;242;105&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;225;236;104&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;206;230;105&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;188;223;105&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;171;216;106&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;154;209;107&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;138;201;109&quot;,
        ///    &quot;ListValueColor&quot;: &quot;122;194;110&quot;,
        ///    &quot;StageColor&quot;: &quot;171;216;106&quot;,
        ///    &quot;ErrorColor&quot;: &quot;206;230;105&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Mintish {
            get {
                return ResourceManager.GetString("Mintish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Monokai&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;#90908a&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#f8f8f2&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#f8f8f0&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#f8f8f0&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#ae81ff&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#f92672&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#272822&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#f8f8f2&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#90908a&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#ae81ff&quot;,
        ///    &quot;StageColor&quot;: &quot;#90908a&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#f8f8f0&quot;,
        ///    &quot;WarningColor&quot;: &quot;#f8f8f0&quot;,
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Monokai {
            get {
                return ResourceManager.GetString("Monokai", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Neon Breeze&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;13&quot;,
        ///    &quot;LicenseColor&quot;: &quot;14&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;13&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;13&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;14&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;14&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;237&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;14&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;13&quot;,
        ///    &quot;ListValueColor&quot;: &quot;14&quot;,
        ///    &quot;StageColor&quot;: &quot;13&quot;,
        ///    &quot;ErrorColor&quot;: &quot;13&quot;,
        ///    &quot;WarningColor&quot;: &quot;13&quot;,
        ///    &quot;OptionColor&quot;: &quot;14&quot;,
        ///    &quot;BannerColor&quot;: &quot;13&quot;,
        ///    &quot;Notifi [rest of string was truncated]&quot;;.
        /// </summary>
        public static string NeonBreeze {
            get {
                return ResourceManager.GetString("NeonBreeze", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Neutralized&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;45;60;61&quot;,
        ///    &quot;LicenseColor&quot;: &quot;45;60;61&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;61;72;74&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;178;180;175&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;88;96;82&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;228;224;212&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;149;151;140&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;178;187;195&quot;,
        ///    &quot;ListValueColor&quot;: &quot;211;205;189&quot;,
        ///    &quot;StageColor&quot;: &quot;228;224;212&quot;,
        ///    &quot;ErrorColor&quot;: &quot;178;180;175&quot;,
        ///    &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Neutralized {
            get {
                return ResourceManager.GetString("Neutralized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Need for Speed: Hot Pursuit (2010) - Cop&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;9&quot;,
        ///    &quot;LicenseColor&quot;: &quot;19&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;4&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;88&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;4&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;9&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;4&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;4&quot;,
        ///    &quot;ListValueColor&quot;: &quot;9&quot;,
        ///    &quot;StageColor&quot;: &quot;9&quot;,
        ///    &quot;ErrorColor&quot;: &quot;88&quot;,
        ///    &quot;WarningColor&quot;: &quot;4&quot;,
        ///    &quot;OptionColor&quot;: &quot;4&quot;,
        ///    &quot;BannerColor&quot;: &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string NFSHP_Cop {
            get {
                return ResourceManager.GetString("NFSHP-Cop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Need for Speed: Hot Pursuit (2010) - Racer&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;15&quot;,
        ///    &quot;LicenseColor&quot;: &quot;15&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;94&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;88&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;94&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;172&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;178&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;94&quot;,
        ///    &quot;ListValueColor&quot;: &quot;15&quot;,
        ///    &quot;StageColor&quot;: &quot;184&quot;,
        ///    &quot;ErrorColor&quot;: &quot;88&quot;,
        ///    &quot;WarningColor&quot;: &quot;94&quot;,
        ///    &quot;OptionColor&quot;: &quot;94&quot;,
        ///    &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string NFSHP_Racer {
            get {
                return ResourceManager.GetString("NFSHP-Racer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;No Frils (acme)&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;#585858&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#AF8700&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#800000&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#ff5555&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#5f005f&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#5f005f&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#FFFFD7&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#000000&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#585858&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#000000&quot;,
        ///    &quot;StageColor&quot;: &quot;#FF00FF&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#800000&quot;,
        ///    &quot;WarningColor&quot;: &quot;#ff555 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string NoFrilsAcme {
            get {
                return ResourceManager.GetString("NoFrilsAcme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;No Frils (dark)&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;#6C6C6C&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#6C6C6C&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#800000&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#5F0000&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#5F87FF&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#5F87FF&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#262626&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#eeeeee&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#6C6C6C&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#eeeeee&quot;,
        ///    &quot;StageColor&quot;: &quot;#FF00FF&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#800000&quot;,
        ///    &quot;WarningColor&quot;: &quot;#5F000 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string NoFrilsDark {
            get {
                return ResourceManager.GetString("NoFrilsDark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;No Frils (light)&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;#A8A8A8&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#A8A8A8&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#800000&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#FF5555&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#5F005F&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#5F005F&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#E4E4E4&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#000000&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#A8A8A8&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#000000&quot;,
        ///    &quot;StageColor&quot;: &quot;#FF00FF&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#800000&quot;,
        ///    &quot;WarningColor&quot;: &quot;#FF55 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string NoFrilsLight {
            get {
                return ResourceManager.GetString("NoFrilsLight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;No Frils (sepia)&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;#AF8700&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#AF8700&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#800000&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#FF5555&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#5F005F&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#5F005F&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#ffdfaf&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#000000&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#AF8700&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#000000&quot;,
        ///    &quot;StageColor&quot;: &quot;#FF00FF&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#800000&quot;,
        ///    &quot;WarningColor&quot;: &quot;#FF55 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string NoFrilsSepia {
            get {
                return ResourceManager.GetString("NoFrilsSepia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Orange Sea&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;54;152;217&quot;,
        ///    &quot;LicenseColor&quot;: &quot;54;152;217&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;179;112;68&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;64;136;184&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;232;142;81&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;56;157;224&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;163;95;49&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;42;118;168&quot;,
        ///    &quot;ListValueColor&quot;: &quot;189;121;75&quot;,
        ///    &quot;StageColor&quot;: &quot;56;157;224&quot;,
        ///    &quot;ErrorColor&quot;: &quot;64;136;184&quot;,
        ///    &quot;W [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Orange_Sea {
            get {
                return ResourceManager.GetString("Orange_Sea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Papercolor&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;#005f87&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#000000&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#af0000&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#ffafd7&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#0087af&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#0087af&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#c0c0c0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#000000&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#800080&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#000000&quot;,
        ///    &quot;StageColor&quot;: &quot;#800080&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#af0000&quot;,
        ///    &quot;WarningColor&quot;: &quot;#00ff00&quot;,
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Papercolor {
            get {
                return ResourceManager.GetString("Papercolor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Papercolor (dark)&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;#005f87&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#c0c0c0&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#af0000&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#ffafd7&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#0087af&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#0087af&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#000000&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#c0c0c0&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#800080&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#c0c0c0&quot;,
        ///    &quot;StageColor&quot;: &quot;#800080&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#af0000&quot;,
        ///    &quot;WarningColor&quot;: &quot;#00f [rest of string was truncated]&quot;;.
        /// </summary>
        public static string PapercolorDark {
            get {
                return ResourceManager.GetString("PapercolorDark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Pastel 1&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;204;227;222&quot;,
        ///    &quot;LicenseColor&quot;: &quot;204;227;222&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;204;147;200&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;191;227;125&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;126;158;217&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;242;240;240&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;171;214;181&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;197;151;240&quot;,
        ///    &quot;ListValueColor&quot;: &quot;247;236;188&quot;,
        ///    &quot;StageColor&quot;: &quot;242;240;240&quot;,
        ///    &quot;ErrorColor&quot;: &quot;191;227;125 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Pastel_1 {
            get {
                return ResourceManager.GetString("Pastel_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Pastel 2&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;252;204;189&quot;,
        ///    &quot;LicenseColor&quot;: &quot;252;204;189&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;207;209;208&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;197;153;207&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;231;235;202&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;148;195;227&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;235;122;158&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;191;250;190&quot;,
        ///    &quot;ListValueColor&quot;: &quot;225;218;245&quot;,
        ///    &quot;StageColor&quot;: &quot;148;195;227&quot;,
        ///    &quot;ErrorColor&quot;: &quot;197;153;207 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Pastel_2 {
            get {
                return ResourceManager.GetString("Pastel_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Pastel 3&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;132;217;139&quot;,
        ///    &quot;LicenseColor&quot;: &quot;132;217;139&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;218;211;230&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;224;211;184&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;176;247;245&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;242;153;220&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;161;209;121&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;160;174;242&quot;,
        ///    &quot;ListValueColor&quot;: &quot;227;131;116&quot;,
        ///    &quot;StageColor&quot;: &quot;242;153;220&quot;,
        ///    &quot;ErrorColor&quot;: &quot;224;211;184 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Pastel_3 {
            get {
                return ResourceManager.GetString("Pastel_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Phosphoric (background)&quot;,
        ///    },
        ///	&quot;InputColor&quot;: &quot;0&quot;,
        ///	&quot;LicenseColor&quot;: &quot;0&quot;,
        ///	&quot;ContKernelErrorColor&quot;: &quot;0&quot;,
        ///	&quot;UncontKernelErrorColor&quot;: &quot;0&quot;,
        ///	&quot;HostNameShellColor&quot;: &quot;0&quot;,
        ///	&quot;UserNameShellColor&quot;: &quot;0&quot;,
        ///	&quot;BackgroundColor&quot;: &quot;3&quot;,
        ///	&quot;NeutralTextColor&quot;: &quot;0&quot;,
        ///	&quot;ListEntryColor&quot;: &quot;0&quot;,
        ///	&quot;ListValueColor&quot;: &quot;0&quot;,
        ///	&quot;StageColor&quot;: &quot;0&quot;,
        ///	&quot;ErrorColor&quot;: &quot;0&quot;,
        ///	&quot;WarningColor&quot;: &quot;0&quot;,
        ///	&quot;OptionColor&quot;: &quot;0&quot;,
        ///	&quot;BannerColor&quot;: &quot;0&quot;,
        ///	&quot;NotificationTitleColor&quot;: &quot;0&quot;,
        ///	&quot;NotificationDescriptionCo [rest of string was truncated]&quot;;.
        /// </summary>
        public static string PhosphoricBG {
            get {
                return ResourceManager.GetString("PhosphoricBG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Phosphoric (foreground)&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;3&quot;,
        ///    &quot;LicenseColor&quot;: &quot;3&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;3&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;3&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;3&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;3&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;3&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;3&quot;,
        ///    &quot;ListValueColor&quot;: &quot;3&quot;,
        ///    &quot;StageColor&quot;: &quot;3&quot;,
        ///    &quot;ErrorColor&quot;: &quot;3&quot;,
        ///    &quot;WarningColor&quot;: &quot;3&quot;,
        ///    &quot;OptionColor&quot;: &quot;3&quot;,
        ///    &quot;BannerColor&quot;: &quot;3&quot;,
        ///    &quot;Notificati [rest of string was truncated]&quot;;.
        /// </summary>
        public static string PhosphoricFG {
            get {
                return ResourceManager.GetString("PhosphoricFG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;Pirate Speak&quot;,
        ///  &quot;Transliterable&quot;: false,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;Available commands: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;command injection been cancelled.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;injected arguments be scheduled to run at next reboot.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;invalid color template {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;&apos;wprobe: yer &apos;ardware be probed. Plea [rest of string was truncated]&quot;;.
        /// </summary>
        public static string pir {
            get {
                return ResourceManager.GetString("pir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;Gangsta, Playa&quot;,
        ///  &quot;Transliterable&quot;: false,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;Available commands: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;Command injection has been cancelled.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;Injected arguments will be scheduled ta run at next reboot.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;Invalid color template {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;hwprobe: Its just anotha h [rest of string was truncated]&quot;;.
        /// </summary>
        public static string pla {
            get {
                return ResourceManager.GetString("pla", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Planted Wood&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;214;142;60&quot;,
        ///    &quot;LicenseColor&quot;: &quot;214;142;60&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;69;140;90&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;56;127;143&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;212;108;63&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;242;117;34&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;51;107;67&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;35;101;120&quot;,
        ///    &quot;ListValueColor&quot;: &quot;194;93;31&quot;,
        ///    &quot;StageColor&quot;: &quot;242;117;34&quot;,
        ///    &quot;ErrorColor&quot;: &quot;56;127;143&quot;,
        ///    &quot;W [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Planted_Wood {
            get {
                return ResourceManager.GetString("Planted_Wood", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;Portuguese&quot;,
        ///  &quot;Transliterable&quot;: false,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;Comandos disponíveis: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;A injeção de comando foi cancelada.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;Argumentos injetados serão agendados para serem executados na próxima reinicialização.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;Modelo de cor inválido {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;hwp [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ptg {
            get {
                return ResourceManager.GetString("ptg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Purlow (Purple + Yellow)&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;217;217;65&quot;,
        ///    &quot;LicenseColor&quot;: &quot;217;217;65&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;117;1;88&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;201;212;51&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;135;22;107&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;227;213;57&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;138;11;95&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;255;255;82&quot;,
        ///    &quot;ListValueColor&quot;: &quot;135;14;95&quot;,
        ///    &quot;StageColor&quot;: &quot;227;213;57&quot;,
        ///    &quot;ErrorColor&quot;: &quot;201;212;5 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Purlow {
            get {
                return ResourceManager.GetString("Purlow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Quantum&quot;,
        ///        &quot;Description&quot;: &quot;Are you a quantum fan?&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#623004&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#f7780c&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#f9a054&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#f9a054&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#c56009&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#c56009&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#fde4ce&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#f9a054&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#f7780c&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#f9a054&quot;,
        ///    &quot;StageColor&quot;: &quot;#f7780c&quot;,
        ///    &quot;ErrorColor&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Quantum {
            get {
                return ResourceManager.GetString("Quantum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Mourning the death of Mahsa Amini&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;#EEEEEE&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#00EE00&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#EE0000&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#EE0000&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#EEEEEE&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#00EE00&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#006600&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#EEEEEE&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#00EE00&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#EEEEEE&quot;,
        ///    &quot;StageColor&quot;: &quot;#00EE00&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#EE0000&quot;,
        ///    &quot;Warn [rest of string was truncated]&quot;;.
        /// </summary>
        public static string RecentDisaster {
            get {
                return ResourceManager.GetString("RecentDisaster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Red Breeze&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;197;201;54&quot;,
        ///    &quot;LicenseColor&quot;: &quot;197;201;54&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;71;223;237&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;153;46;37&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;95;90;237&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;247;93;79&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;212;78;66&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;212;64;51&quot;,
        ///    &quot;ListValueColor&quot;: &quot;230;97;85&quot;,
        ///    &quot;StageColor&quot;: &quot;247;93;79&quot;,
        ///    &quot;ErrorColor&quot;: &quot;153;46;37&quot;,
        ///    &quot;WarningC [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Red_Breeze {
            get {
                return ResourceManager.GetString("Red_Breeze", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Red Console&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;9&quot;,
        ///    &quot;LicenseColor&quot;: &quot;9&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;9&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;1&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;1&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;9&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;9&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;9&quot;,
        ///    &quot;ListValueColor&quot;: &quot;1&quot;,
        ///    &quot;StageColor&quot;: &quot;9&quot;,
        ///    &quot;ErrorColor&quot;: &quot;1&quot;,
        ///    &quot;WarningColor&quot;: &quot;9&quot;,
        ///    &quot;OptionColor&quot;: &quot;9&quot;,
        ///    &quot;BannerColor&quot;: &quot;9&quot;,
        ///    &quot;NotificationTitleColor [rest of string was truncated]&quot;;.
        /// </summary>
        public static string RedConsole {
            get {
                return ResourceManager.GetString("RedConsole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Reddish&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;153;46;38&quot;,
        ///    &quot;LicenseColor&quot;: &quot;153;46;38&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;176;56;40&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;245;71;51&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;181;66;43&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;169;15;7&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;254;7;24&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;156;44;49&quot;,
        ///    &quot;ListValueColor&quot;: &quot;171;51;51&quot;,
        ///    &quot;StageColor&quot;: &quot;169;15;7&quot;,
        ///    &quot;ErrorColor&quot;: &quot;245;71;51&quot;,
        ///    &quot;WarningColor&quot;: &quot;1 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Reddish {
            get {
                return ResourceManager.GetString("Reddish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Retro Windows (1990s)&quot;,
        ///        &quot;Description&quot;: &quot;Did you remember using your Windows computer in the &apos;90s? Bring back nostalgia with this color theme!&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#bebebe&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#fe00ff&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#fe0000&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#fe0000&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#06ff04&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#06ff04&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#047e7e&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#fe0000&quot;,
        ///    &quot;ListEntryColor&quot;: [rest of string was truncated]&quot;;.
        /// </summary>
        public static string RetroWindows {
            get {
                return ResourceManager.GetString("RetroWindows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Rigel&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;#f08e48&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#1c8db2&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#c43060&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#77929e&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#e6e6dc&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#e6e6dc&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#002635&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#e6e6dc&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#77929e&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#e6e6dc&quot;,
        ///    &quot;StageColor&quot;: &quot;#77929e&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#c43060&quot;,
        ///    &quot;WarningColor&quot;: &quot;#c43060&quot;,
        ///    &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Rigel {
            get {
                return ResourceManager.GetString("Rigel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;Russian&quot;,
        ///  &quot;Transliterable&quot;: true,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;Dostupnyye komandy: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;Komandnaya in\&quot;yektsiya byla otmenena.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;Vvedennyye argumenty budut zaplanirovany dlya zapuska pri sleduyushchey perezagruzke.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;Nevernyy tsvetovoy shablon {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;hwp [rest of string was truncated]&quot;;.
        /// </summary>
        public static string rus {
            get {
                return ResourceManager.GetString("rus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;Russian&quot;,
        ///  &quot;Transliterable&quot;: true,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;Доступные команды: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;Командная инъекция была отменена.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;Введенные аргументы будут запланированы для запуска при следующей перезагрузке.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;Неверный цветовой шаблон {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;hwprobe: Ваше обо [rest of string was truncated]&quot;;.
        /// </summary>
        public static string rus_T {
            get {
                return ResourceManager.GetString("rus_T", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Sakura&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;#EACBD2&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#DFAEB4&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#DFAEB4&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#DD9AC2&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#DFAEB4&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#DD9AC2&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#231C29&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#DFAEB4&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#EACBD2&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#DFAEB4&quot;,
        ///    &quot;StageColor&quot;: &quot;#EACBD2&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#DD9AC2&quot;,
        ///    &quot;WarningColor&quot;: &quot;#DFAEB4&quot;,
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Sakura {
            get {
                return ResourceManager.GetString("Sakura", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;ColorMix&quot;: {
        ///        &quot;Desc&quot;: &quot;Settings for this screensaver are available here.&quot;,
        ///        &quot;Path&quot;: &quot;Screensaver.ColorMix&quot;,
        ///        &quot;Keys&quot;: [
        ///            {
        ///                &quot;Name&quot;: &quot;Activate true colors&quot;,
        ///                &quot;Type&quot;: &quot;SBoolean&quot;,
        ///                &quot;Variable&quot;: &quot;ColorMixTrueColor&quot;,
        ///                &quot;Description&quot;: &quot;Activates the true color support.&quot;
        ///            },
        ///            {
        ///                &quot;Name&quot;: &quot;Delay in Milliseconds&quot;,
        ///                &quot;Type&quot;: &quot;SInt&quot;,
        ///                &quot;Variable&quot;: [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ScreensaverSettingsEntries {
            get {
                return ResourceManager.GetString("ScreensaverSettingsEntries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;General&quot;: {
        ///        &quot;Desc&quot;: &quot;This section lists all general kernel settings, mainly for maintaining the kernel.&quot;,
        ///        &quot;Path&quot;: &quot;General&quot;,
        ///        &quot;DisplayAs&quot;: &quot;General kernel settings&quot;,
        ///        &quot;Keys&quot;: [
        ///            {
        ///                &quot;Name&quot;: &quot;Maintenance Mode&quot;,
        ///                &quot;Type&quot;: &quot;SBoolean&quot;,
        ///                &quot;Variable&quot;: &quot;Maintenance&quot;,
        ///                &quot;Description&quot;: &quot;Triggers maintenance mode. This disables multiple accounts.&quot;
        ///            },
        ///            {
        ///                &quot;Name&quot;: &quot;C [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SettingsEntries {
            get {
                return ResourceManager.GetString("SettingsEntries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;SMS Message&quot;,
        ///  &quot;Transliterable&quot;: false,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;Avlbl cmmnds: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;cmmnd njctn hs bn cnclld.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot; injctd rgmnts wll b schdld t rn t nxt rbt.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot; invld clr tmplt {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;hwprb: yr hrdwr wll b prbd. Pls wt...&quot;,
        ///    &quot;CPU: One or more of the [rest of string was truncated]&quot;;.
        /// </summary>
        public static string sms {
            get {
                return ResourceManager.GetString("sms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Solarized (dark)&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;38;139;210&quot;,
        ///    &quot;LicenseColor&quot;: &quot;211;54;130&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;181;137;0&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;211;1;2&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;38;139;210&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;42;161;152&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0;43;54&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;38;139;210&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;38;139;210&quot;,
        ///    &quot;ListValueColor&quot;: &quot;42;161;152&quot;,
        ///    &quot;StageColor&quot;: &quot;133;153;0&quot;,
        ///    &quot;ErrorColor&quot;: &quot;211;1;2&quot;,
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SolarizedDark {
            get {
                return ResourceManager.GetString("SolarizedDark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Solarized (light)&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;38;139;210&quot;,
        ///    &quot;LicenseColor&quot;: &quot;211;54;130&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;181;137;0&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;211;1;2&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;38;139;210&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;42;161;152&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;253;246;227&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;38;139;210&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;38;139;210&quot;,
        ///    &quot;ListValueColor&quot;: &quot;42;161;152&quot;,
        ///    &quot;StageColor&quot;: &quot;133;153;0&quot;,
        ///    &quot;ErrorColor&quot;: &quot;211;1;2 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SolarizedLight {
            get {
                return ResourceManager.GetString("SolarizedLight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;Spanish&quot;,
        ///  &quot;Transliterable&quot;: false,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;Comandos disponibles: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;La inyección de comandos ha sido cancelada.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;Los argumentos inyectados se programarán para ejecutarse en el próximo reinicio.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;Plantilla de color no válida {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: [rest of string was truncated]&quot;;.
        /// </summary>
        public static string spa {
            get {
                return ResourceManager.GetString("spa", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Space Camp&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;#DEDEDE&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#EEEEEE&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#821A1A&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#FF0000&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#3E3D32&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#3E3D32&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#121212&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#EEEEEE&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#6B6B6B&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#EEEEEE&quot;,
        ///    &quot;StageColor&quot;: &quot;#6B6B6B&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#821A1A&quot;,
        ///    &quot;WarningColor&quot;: &quot;#821A1A&quot;,
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SpaceCamp {
            get {
                return ResourceManager.GetString("SpaceCamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Space Duck&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;#818596&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#b3a1e6&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#e33400&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#e33400&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#f2ce00&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#f2ce00&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#0f111b&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#ecf0c1&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#30365F&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#ecf0c1&quot;,
        ///    &quot;StageColor&quot;: &quot;#30365F&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#e33400&quot;,
        ///    &quot;WarningColor&quot;: &quot;#e39400&quot;,
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SpaceDuck {
            get {
                return ResourceManager.GetString("SpaceDuck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Simple&quot;: {
        ///        &quot;Desc&quot;: &quot;Settings for this splash screen are available here.&quot;,
        ///        &quot;Path&quot;: &quot;Splash.Simple&quot;,
        ///        &quot;Keys&quot;: [
        ///            {
        ///                &quot;Name&quot;: &quot;Progress text location&quot;,
        ///                &quot;Type&quot;: &quot;SSelection&quot;,
        ///                &quot;Variable&quot;: &quot;SimpleProgressTextLocation&quot;,
        ///                &quot;IsEnumeration&quot;: true,
        ///                &quot;EnumerationInternal&quot;: true,
        ///                &quot;Enumeration&quot;: &quot;Misc.Text.TextLocation&quot;,
        ///                &quot;EnumerationZeroBased&quot;: true,
        ///             [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SplashSettingsEntries {
            get {
                return ResourceManager.GetString("SplashSettingsEntries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;Shakespearean&quot;,
        ///  &quot;Transliterable&quot;: false,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;Available hests: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;hest injection hast been cancell&apos;d. &quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot; did inject arguments shall beest schedul&apos;d to runneth at next reboot. &quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot; invalid col&apos;r template {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;hwprobe: thy hardw [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ssp {
            get {
                return ResourceManager.GetString("ssp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Tealed&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;62;98;115&quot;,
        ///    &quot;LicenseColor&quot;: &quot;62;98;115&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;51;99;128&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;60;106;117&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;48;126;138&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;209;48;73&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;217;113;102&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;252;91;116&quot;,
        ///    &quot;ListValueColor&quot;: &quot;145;196;55&quot;,
        ///    &quot;StageColor&quot;: &quot;209;48;73&quot;,
        ///    &quot;ErrorColor&quot;: &quot;60;106;117&quot;,
        ///    &quot;WarningC [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Tealed {
            get {
                return ResourceManager.GetString("Tealed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;TealerOS&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;74&quot;,
        ///    &quot;LicenseColor&quot;: &quot;74&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;23&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;23&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;23&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;74&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;74&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;23&quot;,
        ///    &quot;ListValueColor&quot;: &quot;74&quot;,
        ///    &quot;StageColor&quot;: &quot;80&quot;,
        ///    &quot;ErrorColor&quot;: &quot;23&quot;,
        ///    &quot;WarningColor&quot;: &quot;23&quot;,
        ///    &quot;OptionColor&quot;: &quot;23&quot;,
        ///    &quot;BannerColor&quot;: &quot;80&quot;,
        ///    &quot;Notificatio [rest of string was truncated]&quot;;.
        /// </summary>
        public static string TealerOS {
            get {
                return ResourceManager.GetString("TealerOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Techno&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;#7cd4d4&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#648e9c&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#206363&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#9bf4eb&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#82c5c8&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#9bf4eb&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#3d3756&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#648e9c&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#7cd4d4&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#82c5c8&quot;,
        ///    &quot;StageColor&quot;: &quot;#7cd4d4&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#9bf4eb&quot;,
        ///    &quot;WarningColor&quot;: &quot;#206363&quot;,
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Techno {
            get {
                return ResourceManager.GetString("Techno", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;Turkish&quot;,
        ///  &quot;Transliterable&quot;: false,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;Kullanılabilir komutlar: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;Komut enjeksiyonu iptal edildi.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;Enjekte edilen argümanlar bir sonraki yeniden başlatmada çalışacak şekilde programlanacaktır.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;Geçersiz renk şablonu {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;h [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tky {
            get {
                return ResourceManager.GetString("tky", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Traffic Light&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;10&quot;,
        ///    &quot;LicenseColor&quot;: &quot;10&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;226&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;9&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;10&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;10&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;10&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;10&quot;,
        ///    &quot;ListValueColor&quot;: &quot;10&quot;,
        ///    &quot;StageColor&quot;: &quot;226&quot;,
        ///    &quot;ErrorColor&quot;: &quot;9&quot;,
        ///    &quot;WarningColor&quot;: &quot;226&quot;,
        ///    &quot;OptionColor&quot;: &quot;10&quot;,
        ///    &quot;BannerColor&quot;: &quot;226&quot;,
        ///    &quot;Noti [rest of string was truncated]&quot;;.
        /// </summary>
        public static string TrafficLight {
            get {
                return ResourceManager.GetString("TrafficLight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Trance&quot;,
        ///        &quot;Description&quot;: &quot;Trance music fan? This is the theme for you!&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;14&quot;,
        ///    &quot;LicenseColor&quot;: &quot;14&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;12&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;12&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;12&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;12&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;14&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;14&quot;,
        ///    &quot;ListValueColor&quot;: &quot;12&quot;,
        ///    &quot;StageColor&quot;: &quot;14&quot;,
        ///    &quot;ErrorColor&quot;: &quot;12&quot;,
        ///    &quot;WarningColor&quot;: &quot;12&quot;,        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Trance {
            get {
                return ResourceManager.GetString("Trance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Ubuntu&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;15&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#77216F&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#77216F&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#77216F&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#E95420&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#E95420&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;15&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#E95420&quot;,
        ///    &quot;ListValueColor&quot;: &quot;15&quot;,
        ///    &quot;StageColor&quot;: &quot;#77216F&quot;,
        ///    &quot;ErrorColor&quot;: &quot;#E95420&quot;,
        ///    &quot;WarningColor&quot;: &quot;#77216F&quot;,
        ///    &quot;OptionColor&quot;: &quot;15&quot;,        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Ubuntu {
            get {
                return ResourceManager.GetString("Ubuntu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Ubuntu (Legacy)&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;15&quot;,
        ///    &quot;LicenseColor&quot;: &quot;15&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;15&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;15&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;7&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;7&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;53&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;15&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;15&quot;,
        ///    &quot;ListValueColor&quot;: &quot;15&quot;,
        ///    &quot;StageColor&quot;: &quot;15&quot;,
        ///    &quot;ErrorColor&quot;: &quot;7&quot;,
        ///    &quot;WarningColor&quot;: &quot;15&quot;,
        ///    &quot;OptionColor&quot;: &quot;15&quot;,
        ///    &quot;BannerColor&quot;: &quot;15&quot;,
        ///    &quot;Notifi [rest of string was truncated]&quot;;.
        /// </summary>
        public static string UbuntuLegacy {
            get {
                return ResourceManager.GetString("UbuntuLegacy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;Ukrainian&quot;,
        ///  &quot;Transliterable&quot;: true,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;Dostupni komandy: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;Vvedennya komandy skasovano.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;Vvedeni arhumenty budutʹ zaplanovani na zapusk pid chas nastupnoho perezavantazhennya.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;Nediysnyy shablon kolʹoru {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;hwprobe: vash [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ukr {
            get {
                return ResourceManager.GetString("ukr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;Ukrainian&quot;,
        ///  &quot;Transliterable&quot;: true,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;Доступні команди: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;Введення команди скасовано.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;Введені аргументи будуть заплановані на запуск під час наступного перезавантаження.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;Недійсний шаблон кольору {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;hwprobe: ваше обла [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ukr_T {
            get {
                return ResourceManager.GetString("ukr_T", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;VI - Vice City&quot;,
        ///        &quot;Description&quot;: &quot;Gives you the perfect Vice City vibe&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#00a8ff&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#0266c8&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#f4afc2&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#f195ac&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#b28bc0&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#f195ac&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#000000&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#0266c8&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#00a8ff&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#b28bc0&quot;,
        ///    &quot;StageColor&quot;: &quot;#00a8f [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ViceCity {
            get {
                return ResourceManager.GetString("ViceCity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Visual Studio (dark)&quot;,
        ///    },
        ///	&quot;InputColor&quot;: &quot;15&quot;,
        ///	&quot;LicenseColor&quot;: &quot;15&quot;,
        ///	&quot;ContKernelErrorColor&quot;: &quot;15&quot;,
        ///	&quot;UncontKernelErrorColor&quot;: &quot;15&quot;,
        ///	&quot;HostNameShellColor&quot;: &quot;15&quot;,
        ///	&quot;UserNameShellColor&quot;: &quot;15&quot;,
        ///	&quot;BackgroundColor&quot;: &quot;#100940&quot;,
        ///	&quot;NeutralTextColor&quot;: &quot;15&quot;,
        ///	&quot;ListEntryColor&quot;: &quot;15&quot;,
        ///	&quot;ListValueColor&quot;: &quot;15&quot;,
        ///	&quot;StageColor&quot;: &quot;15&quot;,
        ///	&quot;ErrorColor&quot;: &quot;15&quot;,
        ///	&quot;WarningColor&quot;: &quot;15&quot;,
        ///	&quot;OptionColor&quot;: &quot;15&quot;,
        ///	&quot;BannerColor&quot;: &quot;15&quot;,
        ///	&quot;NotificationTitleColor&quot;: &quot;15&quot;,
        ///	&quot;Notific [rest of string was truncated]&quot;;.
        /// </summary>
        public static string VisualStudioDark {
            get {
                return ResourceManager.GetString("VisualStudioDark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Visual Studio (light)&quot;,
        ///    },
        ///	&quot;InputColor&quot;: &quot;15&quot;,
        ///	&quot;LicenseColor&quot;: &quot;15&quot;,
        ///	&quot;ContKernelErrorColor&quot;: &quot;15&quot;,
        ///	&quot;UncontKernelErrorColor&quot;: &quot;15&quot;,
        ///	&quot;HostNameShellColor&quot;: &quot;15&quot;,
        ///	&quot;UserNameShellColor&quot;: &quot;15&quot;,
        ///	&quot;BackgroundColor&quot;: &quot;#7160E8&quot;,
        ///	&quot;NeutralTextColor&quot;: &quot;15&quot;,
        ///	&quot;ListEntryColor&quot;: &quot;15&quot;,
        ///	&quot;ListValueColor&quot;: &quot;15&quot;,
        ///	&quot;StageColor&quot;: &quot;15&quot;,
        ///	&quot;ErrorColor&quot;: &quot;15&quot;,
        ///	&quot;WarningColor&quot;: &quot;15&quot;,
        ///	&quot;OptionColor&quot;: &quot;15&quot;,
        ///	&quot;BannerColor&quot;: &quot;15&quot;,
        ///	&quot;NotificationTitleColor&quot;: &quot;15&quot;,
        ///	&quot;Notifi [rest of string was truncated]&quot;;.
        /// </summary>
        public static string VisualStudioLight {
            get {
                return ResourceManager.GetString("VisualStudioLight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;: &quot;Vietnamese&quot;,
        ///  &quot;Transliterable&quot;: false,
        ///  &quot;Localizations&quot;: {
        ///    &quot;Available commands: {0}&quot;: &quot;Các lệnh khả dụng: {0}&quot;,
        ///    &quot;Command injection has been cancelled.&quot;: &quot;Lệnh tiêm đã bị hủy bỏ.&quot;,
        ///    &quot;Injected arguments will be scheduled to run at next reboot.&quot;: &quot;Các đối số được tiêm sẽ được lên lịch để chạy trong lần khởi động lại tiếp theo.&quot;,
        ///    &quot;Invalid color template {0}&quot;: &quot;Mẫu màu không hợp lệ {0}&quot;,
        ///    &quot;hwprobe: Your hardware will be probed. Please wait...&quot;: &quot;hwprobe: Phần cứng của bạn [rest of string was truncated]&quot;;.
        /// </summary>
        public static string vtn {
            get {
                return ResourceManager.GetString("vtn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Windows 11&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;LicenseColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;ListValueColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;StageColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;ErrorColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;WarningColo [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Windows11 {
            get {
                return ResourceManager.GetString("Windows11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Windows 11 (light)&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;LicenseColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;200;200;200&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;ListValueColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;StageColor&quot;: &quot;0;120;212&quot;,
        ///    &quot;ErrorColor&quot;: &quot;0;120;212&quot;, [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Windows11Light {
            get {
                return ResourceManager.GetString("Windows11Light", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Windows 95&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;15&quot;,
        ///    &quot;LicenseColor&quot;: &quot;15&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;15&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;15&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;15&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;15&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;6&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;15&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;15&quot;,
        ///    &quot;ListValueColor&quot;: &quot;15&quot;,
        ///    &quot;StageColor&quot;: &quot;15&quot;,
        ///    &quot;ErrorColor&quot;: &quot;15&quot;,
        ///    &quot;WarningColor&quot;: &quot;15&quot;,
        ///    &quot;OptionColor&quot;: &quot;15&quot;,
        ///    &quot;BannerColor&quot;: &quot;15&quot;,
        ///    &quot;Notificat [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Windows95 {
            get {
                return ResourceManager.GetString("Windows95", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Wood&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;166&quot;,
        ///    &quot;LicenseColor&quot;: &quot;130&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;130&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;166&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;166&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;130&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;130&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;166&quot;,
        ///    &quot;ListValueColor&quot;: &quot;130&quot;,
        ///    &quot;StageColor&quot;: &quot;166&quot;,
        ///    &quot;ErrorColor&quot;: &quot;166&quot;,
        ///    &quot;WarningColor&quot;: &quot;166&quot;,
        ///    &quot;OptionColor&quot;: &quot;166&quot;,
        ///    &quot;BannerColor&quot;: &quot;166&quot;,
        ///    &quot;N [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Wood {
            get {
                return ResourceManager.GetString("Wood", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Yasai&quot;,
        ///        &quot;Description&quot;: &quot;Inspired from the Chinese pattern of different fruits, Yasai&quot;
        ///    },
        ///    &quot;InputColor&quot;: &quot;#C0B596&quot;,
        ///    &quot;LicenseColor&quot;: &quot;#7B1F68&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;#BB7429&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;#DD5815&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;#869A73&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;#614161&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;#16253D&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;#7B1F68&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;#C0B596&quot;,
        ///    &quot;ListValueColor&quot;: &quot;#869A73&quot;,
        ///    &quot;Stage [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Yasai {
            get {
                return ResourceManager.GetString("Yasai", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Yellow (background)&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;0&quot;,
        ///    &quot;LicenseColor&quot;: &quot;0&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;0&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;0&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;0&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;0&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;3&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;0&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;0&quot;,
        ///    &quot;ListValueColor&quot;: &quot;0&quot;,
        ///    &quot;StageColor&quot;: &quot;0&quot;,
        ///    &quot;ErrorColor&quot;: &quot;0&quot;,
        ///    &quot;WarningColor&quot;: &quot;0&quot;,
        ///    &quot;OptionColor&quot;: &quot;0&quot;,
        ///    &quot;BannerColor&quot;: &quot;0&quot;,
        ///    &quot;NotificationTi [rest of string was truncated]&quot;;.
        /// </summary>
        public static string YellowBG {
            get {
                return ResourceManager.GetString("YellowBG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Metadata&quot;: {
        ///        &quot;Name&quot;: &quot;Yellow (foreground)&quot;,
        ///    },
        ///    &quot;InputColor&quot;: &quot;11&quot;,
        ///    &quot;LicenseColor&quot;: &quot;3&quot;,
        ///    &quot;ContKernelErrorColor&quot;: &quot;11&quot;,
        ///    &quot;UncontKernelErrorColor&quot;: &quot;11&quot;,
        ///    &quot;HostNameShellColor&quot;: &quot;3&quot;,
        ///    &quot;UserNameShellColor&quot;: &quot;3&quot;,
        ///    &quot;BackgroundColor&quot;: &quot;0&quot;,
        ///    &quot;NeutralTextColor&quot;: &quot;11&quot;,
        ///    &quot;ListEntryColor&quot;: &quot;11&quot;,
        ///    &quot;ListValueColor&quot;: &quot;3&quot;,
        ///    &quot;StageColor&quot;: &quot;11&quot;,
        ///    &quot;ErrorColor&quot;: &quot;3&quot;,
        ///    &quot;WarningColor&quot;: &quot;11&quot;,
        ///    &quot;OptionColor&quot;: &quot;11&quot;,
        ///    &quot;BannerColor&quot;: &quot;11&quot;,
        ///    &quot;Notif [rest of string was truncated]&quot;;.
        /// </summary>
        public static string YellowFG {
            get {
                return ResourceManager.GetString("YellowFG", resourceCulture);
            }
        }
    }
}
