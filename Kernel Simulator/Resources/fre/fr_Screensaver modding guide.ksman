(*MAN START*)

-TITLE:Guide de modding d'??conomiseur d'??cran
-REVISION:0.0.1
-KSLAYOUT:0.0.5.9-OR-ABOVE

-BODY START-
Quel est l'??conomiseur d'??cran pour le noyau?

L'??conomiseur d'??cran est le processus inactif qui s'active si votre ordinateur devient inactif. 

L'??conomiseur d'??cran peut ??galement ??tre personnalis?? et nous vous apprendrons comment faire votre premier ??conomiseur d'??cran, pour passer du ??conomiseur d'??cran le plus simple au l??gendaire.

Modding de base (??conomiseur d'??cran)

0. Comment cr??er vos propres ??crans de veille sur Visual Studio 2017?

1. R??p??tez les ??tapes 1 ?? 8 du guide de Modding.
2. Dans la section Compile, cliquez sur Build Events, puis ??crivez-le sur la ligne de commande de l'??v??nement post-build:
- copier .. \ .. \ ModFile.vb .. \ .. \ .. \ .. \ ModFileSS.m (placez SS avant le .m afin que KS le reconnaisse comme ??cran de veille et non comme mod)
- del / Q *. * (pour vous assurer qu'aucun fichier DLL factice n'est cr???? car nous n'utilisons pas DLL pour les mods)
3. R??p??tez les ??tapes 9 ?? 16 du guide de Modding, mais remplacez Imports Kernel_Simulator.ModParser par Imports Kernel_Simulator.Screensaver.
4. Entre les lignes Public Class ... et End Class, faites savoir ?? Visual Studio 2017 que vous allez cr??er votre ??conomiseur d'??cran KS en ??crivant: Impl??mente ICustomSaver.
5. Si vous souhaitez ajouter des espaces de nom, ces r??gles doivent ??tre respect??es:
1) N'importez pas Kernel_Simulator par lui-m??me. 
2) Lors de l???importation de modules / classes tels que TextWriterColor, l?????criture est la suivante: Imports Kernel_Simulator.TextWriterColor
6. D??finissez les propri??t??s des informations de mod en mettant sous IScript Implements:
Propri??t?? initialis??e en tant que bool??en impl??mente ICustomSaver.Initialized
7. Cr??ez votre sous-??conomiseur d???init init nomm?? InitSaver () qui impl??mente ICustomSaver.InitSaver en ??crivant:
Sub InitSaver () impl??mente ICustomSaver.InitSaver
'Votre code ici
Initialized = True 'Mettez-le n'importe o?? dans le sous-marin si vous cr??ez des conditions Si, sinon, laissez-le ici.
End Sub
8. Remplacez chaque commentaire de votre code par votre code. 
9. Cr??ez votre sous-??cran de pr??-affichage (appel?? avant d???afficher l?????conomiseur d?????cran) nomm?? PreDisplay () qui impl??mente ICustomSaver.PreDisplay en ??crivant:
Sub PreDisplay () impl??mente ICustomSaver.PreDisplay
'Votre code ici
End Sub
10. Cr??ez votre code d'affichage (il devrait afficher quelque chose) sous-ScrnSaver () qui impl??mente ICustomSaver.ScrnSaver, en ??crivant:
Sub ScrnSaver () impl??mente ICustomSaver.ScrnSaver
'Votre code ici
End Sub
11. Vous pouvez cr??er vos sous-titres n???importe o?? dans la classe, mais si:
1) ils sont sur la classe diff??rente, appuyez sur Entr??e sur la classe de fin et rendre une nouvelle classe publique qui stocke les nouveaux sous-marins:
Classe publique AnotherClass
'Vos d??finitions ci-dessous, et donc vos sous-marins, fonctions, interfaces, etc.
Classe de fin
2) ils essayent de r??initialiser l'??conomiseur d'??cran en appelant InitSaver (), essayez-le d'abord sur votre environnement de test, puis sur l'environnement de production s'il fonctionne correctement.
Et les conditions suivantes doivent ??tre remplies:
1) Ils ne devraient pas faire une boucle infinie ?? moins que vous ne leur fassiez cette sortie si les conditions sp??cifi??es sont remplies
2) Ils ne devraient pas essayer de causer des erreurs avec le noyau.
3) Placez votre appel secondaire sur l???un des trois sous-syst??mes qui impl??mentent l???interface ICustomSaver. 
12. Ex??cutez le build. 
13. Ex??cutez votre simulateur de noyau auquel vous venez de faire r??f??rence dans votre projet, puis chargez, d??finissez les param??tres par d??faut et verrouillez votre ??cran et votre ??cran de veille est pr??sent.

1. Bo??te de message de la console et messages Soon, Overnight ou Rude (Go away ...)

L'??conomiseur d'??cran de la bo??te de message de retour indique aux gens que le propri??taire de l'ordinateur est parti ou que le propri??taire dit qu'ils devraient partir, car des ??v??nements importants se produisent sur leurs ordinateurs. 

1. Cliquez avec le bouton droit sur le projet, puis s??lectionnez Ajouter> Classe.
2. Nommez votre ??conomiseur d'??cran, mais laissez le fichier .vb intact. 
3. Cliquez sur Ajouter et le code sera pr??t.
4. Ecrivez ci-dessous le (supposez que votre nom de mod est SOR) Public Class SOR: Impl??mente ICustomSaver
5. Ecrivez au-dessus de la classe publique DORS:
- Syst??me d'importation
- Importations System.Threading
- Importe Kernel_Simulator.Screensaver
- Importe Kernel_Simulator.TextWriterColor
- Importe Kernel_Simulator.Login
6. Vous devriez avoir des erreurs en disant que ces sous-marins devraient ??tre cr????s.
7. Cr??ez votre gestionnaire d?????cran de d??marrage en ??conomiseur d?????cran en ??crivant:
Propri??t?? initialis??e en tant que bool??en impl??mente ICustomSaver.Initialized
Sub InitSaver () impl??mente ICustomSaver.InitSaver
Wln ("Chargez cet ??conomiseur d'??cran en utilisant" "loadSaver SORSS.m" "et" "setsaver SORSS.m" "", "neutralText")
Initialis?? = Vrai
End Sub
8. Comme nous n'impl??mentons rien avant d'afficher l'??cran de veille, nous allons laisser ce champ vide:
Sub PreDisplay () impl??mente ICustomSaver.PreDisplay
End Sub
9. Ecrivez au-dessus de la propri??t?? initialis??e ...:
Public SOR_Random As New Random () 'Initialise le g??n??rateur de nombres al??atoires
Public S_Random As New Random () 'Initialise le g??n??rateur de nombres al??atoires
Public O_Random As New Random () 'Initialise le g??n??rateur de nombres al??atoires
Public R_Random As New Random () 'Initialise le g??n??rateur de nombres al??atoires
9. Ecrivez sur le ScrnSaver () sub:
Console.Clear ()
Si Custom.CancellationPending = True Then 'Cela r??soudra le probl??me de la t??che occup??e.
Sortie pour
Fin si
Dim SOR_Integer As Integer = SOR_Random.Next (1, 4) 'choisit si c'est t??t, de nuit ou grossier
Dim Soon_MsgID As Integer = SOR_Random.Next (0, 2) 'S??lectionne les messages dans le tableau Soon
Dim Over_MsgID As Integer = SOR_Random.Next (0, 2) 'S??lectionne les messages dans le tableau Overnight
Dim Rude_MsgID As Integer = SOR_Random.Next (0, 3) 'S??lectionne les messages dans le tableau Rude
Console.SetWindowPosition (0, 1)
S??lectionnez le cas SOR_Integer
Cas 1 'Bient??t
WriteMsg (SOR_Integer, Soon_MsgID)
Cas 2 'Nuit
WriteMsg (SOR_Integer, Over_MsgID)
Affaire 3 'Rude
WriteMsg (SOR_Integer, Rude_MsgID)
Fin S??lectionnez
Thread.Sleep (10000)
11. Vous devrez peut-??tre cr??er 1 fonction et 2 sous-marins pour que cela fonctionne. 
Fonction partag??e publique ParsePlaces (texte ByVal en tant que cha??ne)
text = text.Replace ("<OWNER>", signedinusrnm)
Renvoyer le texte
Fonction de fin
Public Shared Sub InitializeBar (ByVal strlen As Integer)
W ("-", "neutralText")
Pour l As Integer = 0 To strlen - 1
W ("-", "neutralText")
Suivant
Wln ("-", "neutralText")
End Sub
Public Shared Sub WriteMsg (ByVal TypeID en tant qu'entier, ByVal MsgID en tant qu'entier)
Dim BackMessages As String () = {"<OWNER> sera bient??t de retour.", "<OWNER> est occup??. Il sera de retour bient??t."}
Dim OvernightMsg As String () = {"Il semble que <PROPRIETAIRE> revienne du jour au lendemain", "Il reviendra du jour au lendemain."}
Dim RudeMessages As String () = {"Pouvez-vous partir?", "Allez-vous-en, <PROPRI??TAIRE> sera bient??t de retour" "," <PROPRI??TAIRE> n'est pas ici. Allez-vous-en.}}
Dim text As String = ""
S??lectionnez le type de cas
Cas 1
text = ParsePlaces (BackMessages (MsgID))
Cas 2
text = ParsePlaces (OvernightMsg (MsgID))
Cas 3
text = ParsePlaces (RudeMessages (MsgID))
Fin S??lectionner
InitializeBar (text.Length)
Wln ("| {0} |", "texte neutre", texte)
InitializeBar (text.Length)
End Sub
12. Le code devrait ressembler ?? ceci:
Syst??me d'importation
Importations System.Threading
Importe Kernel_Simulator.Screensaver
Importe Kernel_Simulator.TextWriterColor
Importe Kernel_Simulator.Login
Classe publique SoonOvernightRude
Impl??mente ICustomSaver
Propri??t?? initialis??e en tant que bool??en impl??mente ICustomSaver.Initialized
Public SOR_Random As New Random () 'Initialise le g??n??rateur de nombres al??atoires
Public S_Random As New Random () 'Initialise le g??n??rateur de nombres al??atoires
Public O_Random As New Random () 'Initialise le g??n??rateur de nombres al??atoires
Public R_Random As New Random () 'Initialise le g??n??rateur de nombres al??atoires
Sub InitSaver () impl??mente ICustomSaver.InitSaver
Wln ("D??finissez cet ??conomiseur d'??cran par d??faut ?? l'aide de" "setsaver SORSS.m" "", "neutralText")
Initialis?? = Vrai
End Sub
Sub PreDisplay () impl??mente ICustomSaver.PreDisplay
End Sub
Sub ScrnSaver () impl??mente ICustomSaver.ScrnSaver
Console.Clear ()
Si Custom.CancellationPending = True Then 'Cela r??soudra le probl??me de la t??che occup??e.
Sortie pour
Fin si
Dim SOR_Integer As Integer = SOR_Random.Next (1, 4) 'choisit si c'est t??t, de nuit ou grossier
Dim Soon_MsgID As Integer = S_Random.Next (0, 2) 'S??lectionne les messages dans le tableau Soon
Dim Over_MsgID As Integer = O_Random.Next (0, 2) 'S??lectionne les messages dans le tableau Overnight
Dim Rude_MsgID As Integer = R_Random.Next (0, 3) 'S??lectionne les messages dans le tableau Rude
Console.SetCursorPosition (0, 1)
S??lectionnez le cas SOR_Integer
Cas 1 'Bient??t
WriteMsg (SOR_Integer, Soon_MsgID)
Cas 2 'Nuit
WriteMsg (SOR_Integer, Over_MsgID)
Affaire 3 'Rude
WriteMsg (SOR_Integer, Rude_MsgID)
Fin S??lectionner
Thread.Sleep (10000)
End Sub
Fonction partag??e publique ParsePlaces (texte ByVal en tant que cha??ne)
text = text.Replace ("<OWNER>", signedinusrnm)
Renvoyer le texte
Fonction de fin
Public Shared Sub InitializeBar (ByVal strlen As Integer)
W ("-", "neutralText")
Pour l As Integer = 0 To strlen - 1
W ("-", "neutralText")
Suivant
Wln ("-", "neutralText")
End Sub
Public Shared Sub WriteMsg (ByVal TypeID en tant qu'entier, ByVal MsgID en tant qu'entier)
Dim BackMessages As String () = {"<OWNER> sera bient??t de retour.", "<OWNER> est occup??. Il sera de retour bient??t."}
Dim OvernightMsg As String () = {"Il semble que <PROPRIETAIRE> revienne du jour au lendemain", "Il reviendra du jour au lendemain."}
Dim RudeMessages As String () = {"Pouvez-vous partir?", "Allez-vous-en, <PROPRI??TAIRE> sera bient??t de retour", "<PROPRI??TAIRE> n'est pas ici. Allez-vous-en."}
Dim text As String = ""
S??lectionnez le type de cas
Cas 1
text = ParsePlaces (BackMessages (MsgID))
Cas 2
text = ParsePlaces (OvernightMsg (MsgID))
Cas 3
text = ParsePlaces (RudeMessages (MsgID))
Fin S??lectionner
InitializeBar (text.Length)
Wln ("| {0} |", "texte neutre", texte)
InitializeBar (text.Length)
End Sub
Classe de fin
13. Ex??cutez la construction. 
14. Ex??cutez votre simulateur de noyau auquel vous venez de faire r??f??rence dans votre projet, chargez-le, d??finissez-le par d??faut et ex??cutez savescreen.

2. Simple ??cran vide

1. R??p??tez les ??tapes 1 ?? 4 du premier exemple: messages dans la bo??te de message de la console et bient??t, dans la nuit ou impolis (dispara??tre ...).
2. Ecrivez au-dessus du blanc de la classe publique (en supposant que votre nom de classe est vide):
- Syst??me d'importation
- Importe Kernel_Simulator.Screensaver
3. Ecrivez ces informations ci-dessous dans Implements ICustomSaver:
La propri??t?? publique initialis??e en tant que bool??en impl??mente ICustomSaver.Initialized
Public Sub InitSaver () impl??mente ICustomSaver.InitSaver
Initialis?? = Vrai
End Sub
Public Sub PreDisplay () Impl??mente ICustomSaver.PreDisplay
End Sub
Public Sub ScrnSaver () Impl??mente ICustomSaver.ScrnSaver

End Sub
4. Ecrivez dans le sous-menu ScrnSaver:
Console.Clear ()
5. Le code devrait ressembler ?? ceci:
Syst??me d'importation
Importe Kernel_Simulator.Screensaver
Classe publique vierge
Impl??mente ICustomSaver
La propri??t?? publique initialis??e en tant que bool??en impl??mente ICustomSaver.Initialized
Public Sub InitSaver () impl??mente ICustomSaver.InitSaver
Initialis?? = Vrai
End Sub
Public Sub PreDisplay () Impl??mente ICustomSaver.PreDisplay
End Sub
Public Sub ScrnSaver () Impl??mente ICustomSaver.ScrnSaver
Console.Clear ()
End Sub
Classe de fin
5. R??p??tez les ??tapes 13 ?? 14 du premier exemple: messages de la bo??te de message de la console et bient??t, du jour au lendemain ou d??sagr??ables

3. Animation (cercle de dessin - 4 images - 4 images par seconde)

Cet exemple va vous aider ?? d??marrer avec les animations. 

Syst??me d'importation
Importe Microsoft.VisualBasic.Constants
Importe Kernel_Simulator.TextWriterColor
Importations System.Threading
Importe Kernel_Simulator.Screensaver
Classe publique ANI
Impl??mente ICustomSaver
La propri??t?? publique initialis??e en tant que bool??en impl??mente ICustomSaver.Initialized
Public CurrentStep As Integer
Public Sub InitSaver () impl??mente ICustomSaver.InitSaver
Initialis?? = Vrai
End Sub
Public Sub PreDisplay () Impl??mente ICustomSaver.PreDisplay
End Sub
Public Sub ScrnSaver () Impl??mente ICustomSaver.ScrnSaver
Pour CurrentStep = 0 ?? 3
Console.Clear ()
Si Custom.CancellationPending = True Then 'Cela r??soudra le probl??me de la t??che occup??e.
Sortie pour
Fin si
Wln (aniset (CurrentStep), "neutralText")
Thread.Sleep (150)
Suivant
End Sub

Aniset public As String () = {"mmhyo / -" vbNewLine
"mNMMMMMNy:" vbNewLine
".: odMMMd /" vbNewLine
".oMMMd." vbNewLine
"` hMMN- "vbNewLine
"yMMm`" vbNewLine
"mMM" vbNewLine
"oMMh" vbNewLine
"" vbNewLine
"" vbNewLine
"" vbNewLine
"" vbNewLine
"" vbNewLine
"" vbNewLine
"" vbNewLine
"",
"mmhyo / -" vbNewLine
"mNMMMMMNy:" vbNewLine
".: odMMMd /" vbNewLine
".oMMMd." vbNewLine
"` hMMN- "vbNewLine
"yMMm`" vbNewLine
"mMM" vbNewLine
"oMMh" vbNewLine
"oMMh" vbNewLine
"mMM" vbNewLine
"yMMm`" vbNewLine
"` hMMN- "vbNewLine
"` oMMMd. "vbNewLine
".: odMMMm /" vbNewLine
"mNMMMMMNy:" vbNewLine
"mmhhs / -",
"mmhyo / -" vbNewLine
"mNMMMMMNy:" vbNewLine
".: odMMMd /" vbNewLine
".oMMMd." vbNewLine
"` hMMN- "vbNewLine
"yMMm`" vbNewLine
"mMM" vbNewLine
"oMMh" vbNewLine
"hMMo oMMh" vbNewLine
"MMm mMM" vbNewLine
"mMMy yMMm`" vbNewLine
"-NMMh`` hMMN- "vbNewLine
".dMMMs`` oMMMd. "vbNewLine
"/ dMMMdo:..: odMMMm /" vbNewLine
": yNMMMMMNmmNMMMMMMNy:" vbNewLine
"- / shhmmmmhhs / -",
"- / oydmmmmhyo / -" vbNewLine
": yNMMMMMNmmNMMMMMMNy:" vbNewLine
": dMMMdo:..: odMMMd /" vbNewLine
".dMMMs. .oMMMd." vbNewLine
"-NMMh`` hMMN- "vbNewLine
"mMMy yMMm`" vbNewLine
"MMm mMM" vbNewLine
"hMMo oMMh" vbNewLine
"hMMo oMMh" vbNewLine
"MMm mMM" vbNewLine
"mMMy yMMm`" vbNewLine
"-NMMh`` hMMN- "vbNewLine
".dMMMs`` oMMMd. "vbNewLine
"/ dMMMdo:..: odMMMm /" vbNewLine
": yNMMMMMNmmNMMMMMMNy:" vbNewLine
"- / shhmmmmhhs / -"}
Classe de fin

4. Calculer de 0 ?? 1 000 000 avec la barre de progression (dynamique)

Syst??me d'importation
Importe Microsoft.VisualBasic.Constants
Importe Kernel_Simulator.TextWriterColor
Importe Microsoft.VisualBasic.Strings
Importe Kernel_Simulator.Screensaver
Classe publique dynamique
Impl??mente ICustomSaver
La propri??t?? publique initialis??e en tant que bool??en impl??mente ICustomSaver.Initialized
Public Res As Integer
Public ProgWent As Integer
V??rification publique en tant qu'entier
OldCheck publique comme entier
Public Sub InitSaver () impl??mente ICustomSaver.InitSaver
Initialis?? = Vrai
End Sub
Public Sub PreDisplay () Impl??mente ICustomSaver.PreDisplay
End Sub
Public Sub ScrnSaver () Impl??mente ICustomSaver.ScrnSaver
Console.Clear ()
Pour Res = 0 ?? 1000000
Si Custom.CancellationPending = True Then 'Cela r??soudra le probl??me de la t??che occup??e.
Sortie pour
Fin si
Console.SetCursorPosition ((Console.WindowWidth / 2) - 9, (Console.WindowHeight / 2) - 5)
ShowStats ()
Suivant
Check = 0: oldCheck = 0: ProgWent = 0
End Sub
Public Sub ShowStats ()
Wln ("{0} / 1000000 | {1}%", "neutralText", Res, FormatNumber (CStr (Res * 100/1000000), 1))
UpdateProgressBar (Res * 100/1000000)
End Sub
Public Sub UpdateProgressBar (ByVal pourcent As String)
Contr??le = pourcentage / 5
Wln (V??rifier, "neutralText")
Console.SetCursorPosition ((Console.WindowWidth / 2) - 9, (Console.WindowHeight / 2) - 3)
W ("--------------------", "neutralText")
Console.SetCursorPosition ((Console.WindowWidth / 2) - 9, (Console.WindowHeight / 2) - 2)
W ("|", "neutralText")
Si cocher <> oldCheck alors
For Went As Integer = 0 ?? ProgWent
W ("*", "neutralText")
Suivant
ProgWent = 1
Fin si
Console.SetCursorPosition ((Console.WindowWidth / 2) 11, (Console.WindowHeight / 2) - 2)
W ("|", "neutralText")
Console.SetCursorPosition ((Console.WindowWidth / 2) - 9, (Console.WindowHeight / 2) - 1)
W ("--------------------", "neutralText")
oldCheck = pourcentage / 5
End Sub
Classe de fin

Plus d'exemples

Si vous souhaitez consulter plus d'exemples, n'h??sitez pas ?? les consulter dans le r??pertoire KSModExamples sur le dossier Screensavers de GitHub.
-BODY END-

-COLOR CONFIGURATION-
screensaver=>Green
savescreen=>DarkGreen
Modding guide=>Green
Compile=>Cyan
Build Events=>Cyan
Post-build event=>Green
End Class=>Cyan
Public Class...=>Cyan
Visual Studio 2017=>Magenta
Imports Implements=>Cyan
ICustomSaver=>Green
Kernel_Simulator=>Cyan
TextWriterColor=>Green
Kernel_Simulator.TextWriterColor=>Green
Property As Boolean Sub=>Cyan
Initialized ICustomSaver.Initialized=>Green
Kernel Simulator=>Green
Rude=>Red
KSModExamples Screensavers GitHub=>Green
-COLOR CONFIG END-

-SECTIONS-
What is the screensaver for the kernel?=>SE1
Basic modding (screensaver)=>SE1
0. How to make your own screensavers on Visual Studio 2017?=>SE2
1. In-Console Message Box, and Soon, Overnight, or Rude (Go away...) messages=>SE2
2. Simple Blank screen=>SE2
3. Animation (Drawing Circle - 4 frames - 4 FPS)=>SE2
4. Calculate from 0 to 1,000,000 with progress bar (dynamic)=>SE2
More examples=>SE1
-SECTIONS END-
