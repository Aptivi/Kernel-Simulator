(*MAN START*)

-TITLE:Sk??rmsl??ckare modding guide
-REVISION:0.0.1
-KSLAYOUT:0.0.5.9-OR-ABOVE

-BODY START-
Vad ??r sk??rmsl??ckaren f??r k??rnan?

Sk??rmsl??ckaren ??r den inaktiva processen som aktiveras om din dator gick i vilol??ge. 

Sk??rmsl??ckaren kan ocks?? anpassas, och vi l??r dig hur du g??r din f??rsta sk??rmsl??ckare, att g??ra fr??n den enklaste sk??rmsl??ckaren till legendariska.

Grundl??ggande modding (sk??rmsl??ckare)

0. Hur g??r du dina egna sk??rmsl??ckare p?? Visual Studio 2017?

1. Upprepa steg 1-8 fr??n Modding-guiden
2. Klicka p?? Bygg h??ndelser i avsnittet Kompilera och skriv det sedan p?? kommandoraden Post-build-h??ndelse:
	- copy ..\..\ModFile.vb ..\..\..\..\ModFileSS.m (S??tt SS framf??r .m s?? att KS k??nner igen det som en sk??rmsl??ckare och inte som mod)
	- del /Q *.* (f??r att se till att det inte skapas n??gra dummy-DLL-filer eftersom vi inte anv??nder DLL f??r mods)
3. Upprepa steg 9-16 fr??n Modding-guiden, men ers??tt Imports KS.ModParser med Imports KS.Screensaver
4. Mellan raderna Public Class ... och End Class, l??t Visual Studio 2017 veta att du kommer att skapa din KS-sk??rmsl??ckare genom att skriva: Implementerar ICustomSaver
5. Om du ska l??gga till namnomr??den m??ste dessa regler vara uppfyllda:
	1) Importera inte KS av sig sj??lv. 
	2) N??r du importerar moduler / klasser som TextWriterColor, skrivs det s?? h??r: Importerar KS.TextWriterColor
6. Definiera egenskaper f??r modinformation genom att l??gga ned Implements IScript:
    Property Initialized As Boolean Implements ICustomSaver.Initialized
7. G??r din init-sk??rmsl??ckareund med namnet InitSaver () som implementerar ICustomSaver.InitSaver genom att skriva:
    Sub InitSaver() Implements ICustomSaver.InitSaver
        'Your code here
	Initialized = True 'Put it anywhere in the sub if you're making If conditions, otherwise, leave it here.
    End Sub
8. Byt ut alla kommentarer fr??n din kod h??r med din kod. 
9. G??r din f??rdisplay (kallas innan sk??rmsl??ckaren visas) som heter PreDisplay () som implementerar ICustomSaver.PreDisplay genom att skriva:
    Sub PreDisplay() Implements ICustomSaver.PreDisplay
        'Your code here
    End Sub
10. G??r din visningskod (den ska visa n??got) under som heter ScrnSaver () som implementerar ICustomSaver.ScrnSaver genom att skriva:
    Sub ScrnSaver() Implements ICustomSaver.ScrnSaver
        'Your code here
    End Sub
11. Du kan g??ra dina abonnemang var som helst i klassen, men om:
	1) de ??r i den olika klassen, tryck p?? Enter p?? End Class och g??r en offentlig ny klass som lagrar nya under:
		Public Class AnotherClass
		'Dina definitioner nedan, och s?? dina subs, funktioner, gr??nssnitt, etc.
		End Class
	2) de f??rs??ker ??terinitiera sk??rmsl??ckaren genom att ringa om InitSaver (), prova s?? med testmilj??n f??rst, sedan produktionsmilj??n om det fungerade korrekt.
	Och f??ljande villkor b??r uppfyllas:
	1) De b??r inte g??ra en o??ndlig slinga om du inte g??r dem som g??r ut om angivna villkor ??r uppfyllda
	2) De b??r inte f??rs??ka orsaka fel med k??rnan.
	3) S??tt ditt subsamtal p?? en av de tre delarna som implementerar ICustomSaver-gr??nssnittet. 
12. K??r byggandet. 
13. K??r din Kernel Simulator som du just har h??nvisat till i ditt projekt, och ladda, st??lla in standard och l??s dina scren och din sk??rmsl??ckare ??r d??r.

1. Meddelandel??dan i konsolen och snart, ??ver natten eller of??rsk??md (g?? bort ...) meddelanden

Sk??rmsl??ckaren i den bakre meddelandel??dan ber??ttar f??r folk att dator??garen ??r borta, eller att ??garen ber??ttar att de borde f??rsvinna eftersom det finns viktiga saker som h??nder i deras datorer. 

1. H??gerklicka p?? projektet och g?? till L??gg till> Klass
2. Namnge din sk??rmsl??ckare, men l??t .vb vara intakt. 
3. Klicka p?? L??gg till, s?? kommer koden att vara klar.
4. Skriv nedan (Antag att ditt modnamn ??r SOR) Public Class SOR: Implementerar ICustomSaver
5. Skriv ovan Public Class SOR:
	- Imports System
	- Imports System.Threading
	- Imports KS.Screensaver
	- Imports KS.TextWriterColor
	- Imports KS.Login
6. Du b??r f?? fel med att s??ga att dessa subs b??r skapas.
7. G??r din h??ndelsehanterare f??r sk??rmsl??ckare genom att skriva:
    Property Initialized As Boolean Implements ICustomSaver.Initialized
    Sub InitSaver() Implements ICustomSaver.InitSaver
	W("Load this screensaver using ""loadsaver SORSS.m"" and ""setsaver SORSS.m""", True, "neutralText")
        Initialized = True
    End Sub
8. Eftersom vi inte implementerar n??gonting innan vi visar sk??rmsl??ckare kommer vi att l??mna detta tomt:
    Sub PreDisplay() Implements ICustomSaver.PreDisplay
    End Sub
9. Skriv ovan fastigheten som initieras ...:
	Public SOR_Random As New Random () 'Initierar slumptalsgeneratorn
	Public S_Random As New Random () 'Initierar slumptalsgeneratorn
	Public O_Random As New Random () 'Initierar generator f??r slumpm??ssigt nummer
	Public R_Random As New Random () 'Initierar slumptalsgeneratorn
9. Skriv under ScrnSaver ():
    Console.Clear()
    If Custom.CancellationPending = True Then 'This will fix the issue for the task being busy.
        Exit For
    End If
    Dim SOR_Integer As Integer = SOR_Random.Next(1, 4) 'Chooses whether it's Soon, Overnight or Rude
    Dim Soon_MsgID As Integer = SOR_Random.Next(0, 2) 'Selects messages in the Soon array
    Dim Over_MsgID As Integer = SOR_Random.Next(0, 2) 'Selects messages in the Overnight array
    Dim Rude_MsgID As Integer = SOR_Random.Next(0, 3) 'Selects messages in the Rude array
    Console.SetWindowPosition(0, 1)
    Select Case SOR_Integer
        Case 1 'Soon
            WriteMsg(SOR_Integer, Soon_MsgID)
        Case 2 'Overnight
            WriteMsg(SOR_Integer, Over_MsgID)
        Case 3 'Rude
            WriteMsg(SOR_Integer, Rude_MsgID)
    End Select
    Thread.Sleep(10000)
11. Du kanske m??ste skapa en funktion och 2 sub f??r att detta ska fungera. 
    Public Shared Function ParsePlaces(ByVal text As String)
        text = text.Replace("<OWNER>", signedinusrnm)
        Return text
    End Function
    Public Shared Sub InitializeBar(ByVal strlen As Integer)
        W("   +-", "neutralText")
        For l As Integer = 0 To strlen - 1
            W("-", "neutralText")
        Next
        W("-+", "neutralText")
    End Sub
    Public Shared Sub WriteMsg(ByVal TypeID As Integer, ByVal MsgID As Integer)
	Dim BackMessages As String() = {"<OWNER> will be back soon.", "<OWNER> is busy. He will be back soon."}
    	Dim OvernightMsg As String() = {"It seems that <OWNER> will be back overnight", "He'll be back overnight."}
    	Dim RudeMessages As String() = {"Can you go away?", "Go away, <OWNER> will be back soon", "<OWNER> isn't here. Go away."}
        Dim text As String = ""
        Select Case TypeID
            Case 1
                text = ParsePlaces(BackMessages(MsgID))
            Case 2
                text = ParsePlaces(OvernightMsg(MsgID))
            Case 3
                text = ParsePlaces(RudeMessages(MsgID))
        End Select
        InitializeBar(text.Length)
        W("   | {0} |", "neutralText", text)
        InitializeBar(text.Length)
    End Sub
12. Koden ska se ut s?? h??r:
    Imports System
    Imports System.Threading
    Imports KS.Screensaver
    Imports KS.TextWriterColor
    Imports KS.Login
    Public Class SoonOvernightRude
    	Implements ICustomSaver
    	Property Initialized As Boolean Implements ICustomSaver.Initialized
    	Public SOR_Random As New Random() 'Initializes the random number generator
    	Public S_Random As New Random() 'Initializes the random number generator
    	Public O_Random As New Random() 'Initializes the random number generator
    	Public R_Random As New Random() 'Initializes the random number generator
    	Sub InitSaver() Implements ICustomSaver.InitSaver
            W("Set this screensaver as default using ""setsaver SORSS.m""", "neutralText")
            Initialized = True
    	End Sub
    	Sub PreDisplay() Implements ICustomSaver.PreDisplay
    	End Sub
    	Sub ScrnSaver() Implements ICustomSaver.ScrnSaver
	        Console.Clear()
	        If Custom.CancellationPending = True Then 'This will fix the issue for the task being busy.
                Exit For
            End If
    	    Dim SOR_Integer As Integer = SOR_Random.Next(1, 4) 'Chooses whether it's Soon, Overnight or Rude
    	    Dim Soon_MsgID As Integer = S_Random.Next(0, 2) 'Selects messages in the Soon array
    	    Dim Over_MsgID As Integer = O_Random.Next(0, 2) 'Selects messages in the Overnight array
    	    Dim Rude_MsgID As Integer = R_Random.Next(0, 3) 'Selects messages in the Rude array
            Console.SetCursorPosition(0, 1)
            Select Case SOR_Integer
            	Case 1 'Soon
                    WriteMsg(SOR_Integer, Soon_MsgID)
            	Case 2 'Overnight
                    WriteMsg(SOR_Integer, Over_MsgID)
            	Case 3 'Rude
                    WriteMsg(SOR_Integer, Rude_MsgID)
            End Select
	    Thread.Sleep(10000)
    	End Sub
    	Public Shared Function ParsePlaces(ByVal text As String)
            text = text.Replace("<OWNER>", signedinusrnm)
            Return text
        End Function
        Public Shared Sub InitializeBar(ByVal strlen As Integer)
            W("   +-", "neutralText")
            For l As Integer = 0 To strlen - 1
            	W("-", "neutralText")
            Next
            W("-+", "neutralText")
        End Sub
        Public Shared Sub WriteMsg(ByVal TypeID As Integer, ByVal MsgID As Integer)
	        Dim BackMessages As String() = {"<OWNER> will be back soon.", "<OWNER> is busy. He will be back soon."}
    	    Dim OvernightMsg As String() = {"It seems that <OWNER> will be back overnight", "He'll be back overnight."}
    	    Dim RudeMessages As String() = {"Can you go away?", "Go away, <OWNER> will be back soon", "<OWNER> isn't here. Go away."}
            Dim text As String = ""
            Select Case TypeID
            	Case 1
                    text = ParsePlaces(BackMessages(MsgID))
            	Case 2
                    text = ParsePlaces(OvernightMsg(MsgID))
            	Case 3
                    text = ParsePlaces(RudeMessages(MsgID))
            End Select
            InitializeBar(text.Length)
            W("   | {0} |", "neutralText", text)
            InitializeBar(text.Length)
    	End Sub
    End Class
13. K??r byggandet. 
14. K??r din Kernelsimulator som du just har refererat till i ditt projekt, och ladda, st??ll in som standard och k??r sparsk??rm.

2. Enkel blank sk??rm

1. Upprepa steg 1-4 i det f??rsta exemplet: Meddelanderuta i konsolen och snart, ??ver natten eller of??rsk??md (g?? bort ...) meddelanden
2. Skriv ovan Public Class Blank (f??rutsatt att ditt klassnamn ??r Tomt):
- Imports System
- Imports KS.Screensaver
3. Skriv dessa nedanf??r Implements ICustomSaver:
	Public Property Initialized As Boolean Implements ICustomSaver.Initialized
	Public Sub InitSaver () Implements ICustomSaver.InitSaver
	Initialiserat = Sant
	End Sub
	Public Sub PreDisplay () Implements ICustomSaver.PreDisplay
	End Sub
	Public Sub ScrnSaver () Implements ICustomSaver.ScrnSaver

	End SUb
4. Skriv in ScrnSaver-sub:
	Console.Clear()
5. Koden ska se ut s?? h??r:
    Imports System
    Imports KS.Screensaver
    Public Class Blank
    	Implements ICustomSaver
    	Public Property Initialized As Boolean Implements ICustomSaver.Initialized
    	Public Sub InitSaver() Implements ICustomSaver.InitSaver
            Initialized = True
    	End Sub
    	Public Sub PreDisplay() Implements ICustomSaver.PreDisplay
    	End Sub
    	Public Sub ScrnSaver() Implements ICustomSaver.ScrnSaver
            Console.Clear()
   		End Sub
    End Class
5. Upprepa stegen 13-14 i det f??rsta exemplet: Meddelanderuta i konsolen och snart, ??ver natten eller of??rsk??md (g?? bort ...) meddelanden

3. Animering (ritningscirkel - 4 ramar - 4 FPS)

Detta exempel kommer att komma ig??ng med animationerna. 

Imports System
Imports Microsoft.VisualBasic.Constants
Imports KS.TextWriterColor
Imports System.Threading
Imports KS.Screensaver
Public Class ANI
    Implements ICustomSaver
    Public Property Initialized As Boolean Implements ICustomSaver.Initialized
    Public CurrentStep As Integer
    Public Sub InitSaver() Implements ICustomSaver.InitSaver
        Initialized = True
    End Sub
    Public Sub PreDisplay() Implements ICustomSaver.PreDisplay
    End Sub
    Public Sub ScrnSaver() Implements ICustomSaver.ScrnSaver
        For CurrentStep = 0 To 3
            Console.Clear()
	        If Custom.CancellationPending = True Then 'This will fix the issue for the task being busy.
                Exit For
            End If
            W(aniset(CurrentStep), "neutralText")
            Thread.Sleep(150)
        Next
    End Sub

    Public aniset As String() = {"                mmhyo/-         " + vbNewLine +
                                 "                mNMMMMMNy:      " + vbNewLine +
                                 "                   .:odMMMd/    " + vbNewLine +
                                 "                       .oMMMd.  " + vbNewLine +
                                 "                         `hMMN- " + vbNewLine +
                                 "                           yMMm`" + vbNewLine +
                                 "                            mMM+" + vbNewLine +
                                 "                            oMMh" + vbNewLine +
                                 "                                " + vbNewLine +
                                 "                                " + vbNewLine +
                                 "                                " + vbNewLine +
                                 "                                " + vbNewLine +
                                 "                                " + vbNewLine +
                                 "                                " + vbNewLine +
                                 "                                " + vbNewLine +
                                 "                                ",
                                 "                mmhyo/-         " + vbNewLine +
                                 "                mNMMMMMNy:      " + vbNewLine +
                                 "                   .:odMMMd/    " + vbNewLine +
                                 "                       .oMMMd.  " + vbNewLine +
                                 "                         `hMMN- " + vbNewLine +
                                 "                           yMMm`" + vbNewLine +
                                 "                            mMM+" + vbNewLine +
                                 "                            oMMh" + vbNewLine +
                                 "                            oMMh" + vbNewLine +
                                 "                            mMM+" + vbNewLine +
                                 "                           yMMm`" + vbNewLine +
                                 "                         `hMMN- " + vbNewLine +
                                 "                       `oMMMd.  " + vbNewLine +
                                 "                   .:odMMMm/    " + vbNewLine +
                                 "                mNMMMMMNy:      " + vbNewLine +
                                 "                mmhhs/-         ",
                                 "                mmhyo/-         " + vbNewLine +
                                 "                mNMMMMMNy:      " + vbNewLine +
                                 "                   .:odMMMd/    " + vbNewLine +
                                 "                       .oMMMd.  " + vbNewLine +
                                 "                         `hMMN- " + vbNewLine +
                                 "                           yMMm`" + vbNewLine +
                                 "                            mMM+" + vbNewLine +
                                 "                            oMMh" + vbNewLine +
                                 "hMMo                        oMMh" + vbNewLine +
                                 "+MMm                        mMM+" + vbNewLine +
                                 " mMMy                      yMMm`" + vbNewLine +
                                 " -NMMh`                  `hMMN- " + vbNewLine +
                                 "  .dMMMs`              `oMMMd.  " + vbNewLine +
                                 "    /dMMMdo:.      .:odMMMm/    " + vbNewLine +
                                 "      :yNMMMMMNmmNMMMMMNy:      " + vbNewLine +
                                 "         -/shhmmmmhhs/-         ",
                                 "         -/oydmmmmhyo/-         " + vbNewLine +
                                 "      :yNMMMMMNmmNMMMMMNy:      " + vbNewLine +
                                 "    :dMMMdo:.      .:odMMMd/    " + vbNewLine +
                                 "  .dMMMs.              .oMMMd.  " + vbNewLine +
                                 " -NMMh`                  `hMMN- " + vbNewLine +
                                 " mMMy                      yMMm`" + vbNewLine +
                                 "+MMm                        mMM+" + vbNewLine +
                                 "hMMo                        oMMh" + vbNewLine +
                                 "hMMo                        oMMh" + vbNewLine +
                                 "+MMm                        mMM+" + vbNewLine +
                                 " mMMy                      yMMm`" + vbNewLine +
                                 " -NMMh`                  `hMMN- " + vbNewLine +
                                 "  .dMMMs`              `oMMMd.  " + vbNewLine +
                                 "    /dMMMdo:.      .:odMMMm/    " + vbNewLine +
                                 "      :yNMMMMMNmmNMMMMMNy:      " + vbNewLine +
                                 "         -/shhmmmmhhs/-         "}
End Class

4. Ber??kna fr??n 0 till 1 000 000 med framstegsf??ltet (dynamiskt)

Imports System
Imports Microsoft.VisualBasic.Constants
Imports KS.TextWriterColor
Imports Microsoft.VisualBasic.Strings
Imports KS.Screensaver
Public Class Dynamic
    Implements ICustomSaver
    Public Property Initialized As Boolean Implements ICustomSaver.Initialized
    Public Res As Integer
    Public ProgWent As Integer
    Public Check As Integer
    Public oldCheck As Integer
    Public Sub InitSaver() Implements ICustomSaver.InitSaver
        Initialized = True
    End Sub
    Public Sub PreDisplay() Implements ICustomSaver.PreDisplay
    End Sub
    Public Sub ScrnSaver() Implements ICustomSaver.ScrnSaver
        Console.Clear()
        For Res = 0 To 1000000
            If Custom.CancellationPending = True Then 'This will fix the issue for the task being busy.
                Exit For
            End If
            Console.SetCursorPosition((Console.WindowWidth / 2) - 9, (Console.WindowHeight / 2) - 5)
            ShowStats()
        Next
        Check = 0 : oldCheck = 0 : ProgWent = 0
    End Sub
    Public Sub ShowStats()
        W("{0} / 1000000 | {1}%", "neutralText", Res, FormatNumber(CStr(Res * 100 / 1000000), 1))
        UpdateProgressBar(Res * 100 / 1000000)
    End Sub
    Public Sub UpdateProgressBar(ByVal percent As String)
        Check = percent / 5
        W(Check, "neutralText")
        Console.SetCursorPosition((Console.WindowWidth / 2) - 9, (Console.WindowHeight / 2) - 3)
        W("+--------------------+", "neutralText")
        Console.SetCursorPosition((Console.WindowWidth / 2) - 9, (Console.WindowHeight / 2) - 2)
        W("| ", "neutralText")
        If Check <> oldCheck Then
            For Went As Integer = 0 To ProgWent
                W("*", "neutralText")
            Next
            ProgWent += 1
        End If
        Console.SetCursorPosition((Console.WindowWidth / 2) + 11, (Console.WindowHeight / 2) - 2)
        W(" |", "neutralText")
        Console.SetCursorPosition((Console.WindowWidth / 2) - 9, (Console.WindowHeight / 2) - 1)
        W("+--------------------+", "neutralText")
        oldCheck = percent / 5
    End Sub
End Class

Fler exempel

Om du vill kolla in fler exempel, k??nn dig fri att kolla in dem i KSModExamples arkiv i mappen Sk??rmsl??ckare i GitHub.
-BODY END-

-COLOR CONFIGURATION-
screensaver=>Green
savescreen=>DarkGreen
Modding guide=>Green
Compile=>Cyan
Build Events=>Cyan
Post-build event=>Green
End Class=>Cyan
Public Class...=>Cyan
Visual Studio 2017=>Magenta
Imports Implements=>Cyan
ICustomSaver=>Green
KS=>Cyan
TextWriterColor=>Green
KS.TextWriterColor=>Green
Property As Boolean Sub=>Cyan
Initialized ICustomSaver.Initialized=>Green
Kernel Simulator=>Green
Rude=>Red
KSModExamples Screensavers GitHub=>Green
-COLOR CONFIG END-

-SECTIONS-
What is the screensaver for the kernel?=>SE1
Basic modding (screensaver)=>SE1
0. How to make your own screensavers on Visual Studio 2017?=>SE2
1. In-Console Message Box, and Soon, Overnight, or Rude (Go away...) messages=>SE2
2. Simple Blank screen=>SE2
3. Animation (Drawing Circle - 4 frames - 4 FPS)=>SE2
4. Calculate from 0 to 1,000,000 with progress bar (dynamic)=>SE2
More examples=>SE1
-SECTIONS END-
