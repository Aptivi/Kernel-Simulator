(*MAN START*)

-TITLE:Como fazer seu pr??prio mod para o kernel
-REVISION:0.0.2
-KSLAYOUT:0.0.5.9-OR-ABOVE

-BODY START-
Qual ?? o mod para o kernel?

O mod ?? o arquivo de c??digo-fonte que ?? carregado na inicializa????o e pode adicionar extens??es ao kernel, ao shell e a tudo. 

Isso ?? ??til se voc?? quiser adicionar suas pr??prias extens??es ao kernel, como manipuladores de eventos para o kernel.

Posso fazer meu pr??prio protetor de tela?

Sim, mas primeiro verifique a p??gina de manual "usermanual modding guide" para obter instru????es sobre como adicionar seu protetor de tela.

Modding B??sico

0. Como criar seus pr??prios mods no Visual Studio 2017?

1. Na P??gina Inicial, clique em Novo Projeto
2. Clique em Projeto Vazio, selecione VB ou C
3. Clique com o bot??o direito do mouse em References no Solution Explorer e pressione Add Reference ...
4. Clique no bot??o Procurar ... e localize o arquivo execut??vel do Simulador do Kernel (o arquivo que voc?? acabou de executar)
5. Ao clicar em OK no Open File, voc?? ver?? que seus arquivos execut??veis ??????do KS s??o adicionados ?? lista de refer??ncias.
6. Certifique-se de que tenha a caixa de sele????o marcada e clique em OK.
7. Clique com o bot??o direito no projeto, n??o na solu????o
8. Altere o tipo de aplicativo para Biblioteca de Classes
9. Na se????o Compile, clique em Build Events e, em seguida, escreva isso na linha de comando do evento Post-build:
Se voc?? estiver usando o VB:
- Copiar .. \ .. \ ModFile.vb .. \ .. \ .. \ .. \ ModFile.m
- del / Q *. * (para ter certeza de que n??o h?? arquivos DLL sendo criados, j?? que n??o usamos DLLs para mods)
- "caminho \ para \ Kernel Simulator.exe" testMods ModFile.m
Se voc?? estiver usando C
- Copie .. \ .. \ ModFile.cs .. \ .. \ .. \ .. \ ModFileCS.m
- del / Q *. * (para ter certeza de que n??o h?? arquivos DLL sendo criados, j?? que n??o usamos DLLs para mods)
- "caminho \ para \ Kernel Simulator.exe" testMods ModFileCS.m
10. Certifique-se de que o evento de p??s-compila????o seja executado somente quando a compila????o for bem-sucedida
11. Salve tudo pressionando CTRL S
12. Expanda a se????o Refer??ncias no Solution Explorer
13. Defina a configura????o Copy Local como False, pois voc?? tem o execut??vel para n??o fazer uma c??pia extra
14. Clique com o bot??o direito no projeto e v?? para Add> Class
15. Suponha que voc?? esteja fazendo um mod em VB. 
16. Clique em Adicionar e o c??digo estar?? pronto:
Classe p??blica ModName
'Seu c??digo aqui
Classe final
17. Entre as linhas Public Class ... e End Class, deixe que o Visual Studio 2017 saiba que voc?? criar?? seu mod KS escrevendo: Implements IScript
18. Se voc?? for adicionar namespaces, essas regras dever??o ser atendidas:
1) N??o importe o KS sozinho. 
2) Ao importar m??dulos / classes como TextWriterColor, est?? escrito assim: Importa o KS.TextWriterColor
19. Defina propriedades para informa????es mod, colocando abaixo o Implements IScript:
Propriedade Cmd como implementa????o de seq????ncia de caracteres IScript.Cmd
Propriedade Def como Implementos de String IScript.Def
Nome da propriedade como implementos de seq????ncia de caracteres IScript.Name
Vers??o da propriedade como os implementos de seq????ncia de caracteres IScript.Version
20. Crie o seu submod inicial, chamado StartMod (), que implementa o IScript.StartMod, escrevendo:
Sub StartMod () implementa IScript.StartMod
Cmd = "" 'Se voc?? for adicionar comandos, escreva seu comando aqui.
Def = "" 'Explique qual ?? o seu comando e o que vai fazer.
Name = "ModName" 'Substitua ModName com o seu nome mod o que quiser, mas deve refletir o prop??sito mod. 
Version = "1.0" 'Voc?? pode especificar sua vers??o mod, mas ela deve seguir as diretrizes de vers??o e voc?? pode encontr??-la na Internet. 

'Seu c??digo abaixo
End Sub
21. Substitua todo seu c??digo abaixo comentar com seu c??digo. 
22. Fa??a o seu sub stop mod chamado StopMod () que implementa o IScript.StopMod, escrevendo:
Sub StopMod () implementa IScript.StopMod
'Seu c??digo abaixo
End Sub
23. 1) Se voc?? est?? fazendo o seu comando no seu mod, escreva o c??digo de resposta abaixo:
Sub PerformCmd (Opcional ByVal args As String = "") Implementa IScript.PerformCmd
'Seu c??digo abaixo
End Sub
2) Se voc?? est?? fazendo o seu comando que lida com argumentos, escreva o c??digo de resposta abaixo:
Sub PerformCmd (Opcional ByVal args As String = "") Implementa IScript.PerformCmd
If (args = "YourArgHere") Ent??o 'Substitua YourArgsHere pelo seu conjunto de argumentos
'Seu c??digo abaixo
Fim se
End Sub
3) Se voc?? est?? fazendo o seu comando que lida com argumentos subseq??entes, escreva o c??digo de resposta abaixo:
Sub PerformCmd (Opcional ByVal args As String = "") Implementa IScript.PerformCmd
Dim splitArgs As String () = args.Split ({"" c})
Se splitArgs.Length> 1 Then
If (splitArgs (0) = "Part1" E splitArgs (1) = "Part2") Ent??o, 'Substitua Part1 pelo seu argumento e Part2 pelo seu argumento. 
'Seu c??digo abaixo
Outro
'Seu c??digo de incompatibilidade de argumento abaixo
Fim se
Outro
'Seu c??digo que manipula argumentos insuficientes
Fim se
End Sub
24. 1) Se voc?? est?? fazendo o seu manipulador de eventos que lida com o que aconteceu no kernel, escreva o c??digo do identificador abaixo:
Sub InitEvents (ByVal ev As String) implementa IScript.InitEvents
If (ev = "EventName") Em seguida, "Substitua EventName por eventos encontrados no comando" usermanual Events for Mod Developers "
'Seu c??digo abaixo
Fim se
End Sub
2) Se voc?? estiver lidando com v??rios eventos, escreva o c??digo do identificador abaixo:
Sub InitEvents (ByVal ev As String) implementa IScript.InitEvents
If (ev = "EventName") Em seguida, "Substitua EventName por eventos encontrados no comando" usermanual Events for Mod Developers "
'Seu c??digo abaixo
ElseIf (ev = "AnotherEvent") Em seguida, 'Substituir AnotherEvent por eventos encontrados no comando "usermanual Events for Mod Developers"
'Seu c??digo abaixo
Fim se
End Sub
3) AVISO IMPORTANTE! 
25. Voc?? pode fazer seus subs em qualquer lugar da classe, mas se:
1) eles est??o na classe diferente, pressione Enter na classe End e fa??a uma nova classe p??blica que armazene novos subs:
Classe P??blica AnotherClass
'Suas defini????es abaixo, e assim seus subs, fun????es, interfaces, etc.
Classe final
2) eles est??o tentando reinicializar o mod chamando novamente o StartMod (), tente primeiro no ambiente de teste, depois no ambiente de produ????o, se isso funcionou corretamente.
E as seguintes condi????es devem ser atendidas:
1) Eles n??o devem fazer um loop infinito, a menos que voc?? os esteja fazendo, se as condi????es especificadas forem cumpridas.
2) Eles n??o devem tentar causar erros no kernel.
3) Se voc?? ?? um explorador e est?? fazendo o c??digo de explora????o para o kernel, fa??a isso em seu ambiente de teste primeiro e depois no ambiente de produ????o, ent??o fa??a seu relat??rio CVE para que possamos obter aten????o e corrigir isso rapidamente.
4) Se o seu mod vai estender o kernel, coloque seus c??digos de extens??o em subs separados
5) Coloque sua sub chamada em um dos quatro subs que implementam a interface IScript. 
26. Execute a constru????o. 
27. Execute o seu Simulador de Kernel que voc?? acabou de referenciar em seu projeto.

1. Hello World no Kernel Start e Goodbye World no Kernel Stop

Hello World ?? o popular exemplo inicial para todos os programadores. 

1. Clique com o bot??o direito no projeto e v?? para Add> Class
2. Nomeie seu mod, mas deixe o .vb intacto. 
3. Clique em Adicionar e o c??digo estar?? pronto.
4. Escreva abaixo o (Suponha que o seu nome mod seja HelloGuys) Public Class HelloGuys: Implements IScript
5. Escreva acima da classe p??blica HelloGuys:
- Importa o KS.ModParser
- Importa o KS.TextWriterColor
6. Voc?? deve receber erros dizendo que esses subs devem ser criados.
7. Fa??a seu manipulador de eventos mod de in??cio escrevendo:
Propriedade Cmd como implementa????o de seq????ncia de caracteres IScript.Cmd
Propriedade Def como Implementos de String IScript.Def
Nome da propriedade como implementos de seq????ncia de caracteres IScript.Name
Vers??o da propriedade como os implementos de seq????ncia de caracteres IScript.Version
Sub StartMod () implementa IScript.StartMod
Cmd = ""
Def = ""
Name = "HelloGuys"
Vers??o = "1.0"
W ("Hello World", "neutralText")
End Sub
8. Fa??a o seu manipulador de eventos parar escrevendo:
Sub StopMod () implementa IScript.StopMod
W ("Adeus Mundo", "neutralText")
End Sub
9. Como n??o estamos implementando comandos nem respondedores de eventos, vamos deixar estes em branco:
Sub PerformCmd (Opcional ByVal args As String = "") Implementa IScript.PerformCmd
End Sub
Sub InitEvents (ByVal ev As String) implementa IScript.InitEvents
End Sub
10. O c??digo deve ficar assim em VB:

Importa o KS.ModParser
Importa o KS.TextWriterColor
Classe p??blica HelloGuys
Implementa o IScript
Propriedade Cmd como implementa????o de seq????ncia de caracteres IScript.Cmd
Propriedade Def como Implementos de String IScript.Def
Nome da propriedade como implementos de seq????ncia de caracteres IScript.Name
Vers??o da propriedade como os implementos de seq????ncia de caracteres IScript.Version
Sub StartMod () implementa IScript.StartMod
Cmd = ""
Def = ""
Name = "HelloGuys"
Vers??o = "1.0"
W ("Hello World", "neutralText")
End Sub
Sub StopMod () implementa IScript.StopMod
W ("Adeus Mundo", "neutralText")
End Sub
Sub PerformCmd (Opcional ByVal args As String = "") Implementa IScript.PerformCmd
End Sub
Sub InitEvents (ByVal ev As String) implementa IScript.InitEvents
End Sub
Classe final

... ou em C

usando MP = KS.ModParser;
usando TWC = KS.TextWriterColor;
classe p??blica HelloGuys: MP.IScript
{
cadeia p??blica Cmd {get; 
cadeia p??blica Def {get; 
public string Nome {get; 
public string Vers??o {get; 
public void StartMod ()
{
Cmd = "";
Def = "";
Name = "HelloGuys";
Vers??o = "1.0";
TWC.W ("Hello World", "neutralText");
}
public void StopMod ()
{
TWC.W ("Adeus Mundo", "neutralText");
}
public void PerformCmd (string args = "")
{
}
publicEvent InitEvents (string ev)
{
}
}

11. Execute a constru????o. 
12. Execute seu Simulador de Kernel que voc?? acabou de referenciar em seu projeto.
13. Se tudo correr bem, voc?? dever?? ver as seguintes mensagens:
mod: Carregando mods ...
Ol?? Mundo
HelloGuys v1.0 iniciado

2. Hello World no comando executar

1. Repita as etapas 1 a 5 no primeiro exemplo: Hello World no Kernel Start e Goodbye World no Kernel Stop
2. Fa??a seu manipulador de eventos de modifica????o de in??cio escrevendo (supondo que seu nome de mod seja HelloShell):
Propriedade Cmd como implementa????o de seq????ncia de caracteres IScript.Cmd
Propriedade Def como Implementos de String IScript.Def
Nome da propriedade como implementos de seq????ncia de caracteres IScript.Name
Vers??o da propriedade como os implementos de seq????ncia de caracteres IScript.Version
Sub StartMod () implementa IScript.StartMod
Cmd = "SayHello"
Def = ""
Name = "HelloShell"
Vers??o = "1.0"
End Sub
3. Como n??o estamos implementando o manipulador de desligamento nem os respondedores de evento, deixaremos em branco:
Sub StopMod () implementa IScript.StopMod
End Sub
Sub InitEvents (ByVal ev As String) implementa IScript.InitEvents
End Sub
4. Fa??a seu manipulador de comando e deixe-o responder ao comando do SayHello mod:
Sub PerformCmd (Opcional ByVal args As String = "") Implementa IScript.PerformCmd
W ("Hello World", "neutralText")
End Sub
5. O c??digo deve ficar assim em VB:

Importa o KS.ModParser
Importa o KS.TextWriterColor
Classe p??blica HelloShell
Implementa o IScript
Propriedade Cmd como implementa????o de seq????ncia de caracteres IScript.Cmd
Propriedade Def como Implementos de String IScript.Def
Nome da propriedade como implementos de seq????ncia de caracteres IScript.Name
Vers??o da propriedade como os implementos de seq????ncia de caracteres IScript.Version
Sub StartMod () implementa IScript.StartMod
Cmd = "SayHello"
Def = ""
Name = "HelloShell"
Vers??o = "1.0"
End Sub
Sub StopMod () implementa IScript.StopMod
End Sub
Sub PerformCmd (Opcional ByVal args As String = "") Implementa IScript.PerformCmd
W ("Hello World", "neutralText")
End Sub
Sub InitEvents (ByVal ev As String) implementa IScript.InitEvents
End Sub
Classe final

... ou em C

usando MP = KS.ModParser;
usando TWC = KS.TextWriterColor;
classe p??blica HelloShell: MP.IScript
{
cadeia p??blica Cmd {get; 
cadeia p??blica Def {get; 
public string Nome {get; 
public string Vers??o {get; 
public void StartMod ()
{
Cmd = "SayHello";
Def = "";
Name = "HelloShell";
Vers??o = "1.0";
}
public void StopMod ()
{
}
public void PerformCmd (string args = "")
{
TWC.W ("Hello World", "neutralText");
}
publicEvent InitEvents (string ev)
{
}
}

6. Repita os passos 11-12 no primeiro exemplo: Hello World no Kernel Start e Goodbye World no Kernel Stop

3. Hello World no comando executar com argumentos (??nico)

1. Supondo que seu nome mod seja HelloArgs, seu argumento que far?? com que seu comando diga Hello World ?? HW, e que seu comando seja SayHello, repita as etapas de 1 a 3 no segundo exemplo: Hello World on command execute
2. Fa??a o seu manipulador de comando e deixe-o responder ao comando mod do SayHello:
Sub PerformCmd (Opcional ByVal args As String = "") Implementa IScript.PerformCmd
Se (args = "HW") ent??o
W ("Hello World", "neutralText")
Outro
W ("Fa??a-me dizer Ol?? executando" "SayHello HW." "", "NeutralText")
Fim se
End Sub
3. O c??digo deve ficar assim em VB:

Importa o KS.ModParser
Importa o KS.TextWriterColor
Classe p??blica HelloArgs
Implementa o IScript
Propriedade Cmd como implementa????o de seq????ncia de caracteres IScript.Cmd
Propriedade Def como Implementos de String IScript.Def
Nome da propriedade como implementos de seq????ncia de caracteres IScript.Name
Vers??o da propriedade como os implementos de seq????ncia de caracteres IScript.Version
Sub StartMod () implementa IScript.StartMod
Cmd = "SayHello"
Def = ""
Name = "HelloArgs"
Vers??o = "1.0"
End Sub
Sub StopMod () implementa IScript.StopMod
End Sub
Sub PerformCmd (Opcional ByVal args As String = "") Implementa IScript.PerformCmd
Se (args = "HW") ent??o
W ("Hello World", "neutralText")
Outro
W ("Fa??a-me dizer Ol?? executando" "SayHello HW." "", "NeutralText")
Fim se
End Sub
Sub InitEvents (ByVal ev As String) implementa IScript.InitEvents
End Sub
Classe final

... ou em C

usando MP = KS.ModParser;
usando TWC = KS.TextWriterColor;
classe p??blica HelloArgs: MP.IScript
{
cadeia p??blica Cmd {get; 
cadeia p??blica Def {get; 
public string Nome {get; 
public string Vers??o {get; 
public void StartMod ()
{
Cmd = "SayHello";
Def = "";
Name = "HelloArgs";
Vers??o = "1.0";
}
public void StopMod ()
{
}
public void PerformCmd (string args = "")
{
if (args == "HW")
{
TWC.W ("Hello World", "neutralText");
}
outro
{
TWC.W ("Fa??a-me dizer Ol?? executando \" SayHello HW. \ "", "NeutralText");
}
}
publicEvent InitEvents (string ev)
{
}
}

4. Repita o ??ltimo passo no segundo exemplo: Hello World on command execute

4. Ol?? mundo no comando executar com v??rios argumentos

1. Supondo que seu nome mod seja HelloArgs, seu argumento que far?? com que seu comando diga Hello World ?? Say Hello e que seu comando seja WhatDoISay, Repita as etapas de 1 a 3 no segundo exemplo: Hello World on command execute
2. Fa??a seu manipulador de comando e deixe-o responder ao comando mod WhatDoISay:
Sub PerformCmd (Opcional ByVal args As String = "") Implementa IScript.PerformCmd
Dim splitArgs As String () = args.Split ({"" c})
Dim ArgCount As Integer = 1
Se splitArgs.Length> 1 Then
Se (splitArgs (0) = "Say" E splitArgs (1) = "Ol??") Ent??o
W ("Hello World", "neutralText")
Outro
W ("Fa??a-me dizer Ol?? executando" "WhatDoISay Say Hello." "", "NeutralText")
Fim se
Outro
W ("Fa??a-me dizer Ol?? executando" "WhatDoISay Say Hello." "", "NeutralText")
Fim se
Para cada arg como string em splitArgs
W ("Argumento {0}: {1}", "neutralText", ArgCount, splitArgs (ArgCount - 1))
ArgCount = 1
Pr??ximo
End Sub
3. O c??digo deve ficar assim em VB:

Importa o KS.ModParser
Importa o KS.TextWriterColor
Classe p??blica HelloArgs
Implementa o IScript
Propriedade Cmd como implementa????o de seq????ncia de caracteres IScript.Cmd
Propriedade Def como Implementos de String IScript.Def
Nome da propriedade como implementos de seq????ncia de caracteres IScript.Name
Vers??o da propriedade como os implementos de seq????ncia de caracteres IScript.Version
Sub StartMod () implementa IScript.StartMod
Cmd = "WhatDoISay"
Def = ""
Name = "HelloArgs"
Vers??o = "1.0"
End Sub
Sub StopMod () implementa IScript.StopMod
End Sub
Sub PerformCmd (Opcional ByVal args As String = "") Implementa IScript.PerformCmd
Dim splitArgs As String () = args.Split ({"" c})
Dim ArgCount As Integer = 1
Se splitArgs.Length> 1 Then
Se (splitArgs (0) = "Say" E splitArgs (1) = "Ol??") Ent??o
W ("Hello World", "neutralText")
Outro
W ("Fa??a-me dizer Ol?? executando" "WhatDoISay Say Hello." "", "NeutralText")
Fim se
Outro
W ("Fa??a-me dizer Ol?? executando" "WhatDoISay Say Hello." "", "NeutralText")
Fim se
Para cada arg como string em splitArgs
W ("Argumento {0}: {1}", "neutralText", ArgCount, splitArgs (ArgCount - 1))
ArgCount = 1
Pr??ximo
End Sub
Sub InitEvents (ByVal ev As String) implementa IScript.InitEvents
End Sub
Classe final

... ou em C

usando MP = KS.ModParser;
usando TWC = KS.TextWriterColor;
classe p??blica HelloArgs: MP.IScript
{
cadeia p??blica Cmd {get; 
cadeia p??blica Def {get; 
public string Nome {get; 
public string Vers??o {get; 
public void StartMod ()
{
Cmd = "WhatDoISay";
Def = "";
Name = "HelloArgs";
Vers??o = "1.0";
}
public void StopMod ()
{
}
public void PerformCmd (string args = "")
{
string [] splitArgs = args.Split (novo [] {''});
int ArgCount = 1;
if (splitArgs.Length> 1)
{
if (splitArgs [0] == "Diga"
{
TWC.W ("Hello World", "neutralText");
}
outro
{
TWC.W ("Fa??a-me dizer Ol?? executando \" WhatDoISay Say Hello. \ "", "NeutralText");
}
}
outro
{
TWC.W ("Fa??a-me dizer Ol?? executando \" WhatDoISay Say Hello. \ "", "NeutralText");
}
foreach (string arg em splitArgs)
{
TWC.W ("Argumento {0}: {1}", "neutralText", ArgCount, splitArgs [ArgCount - 1]);
ArgCount = 1;
}
}
publicEvent InitEvents (string ev)
{
}
}

4. Repita o ??ltimo passo no segundo exemplo: Hello World on command execute

5. Teste de velocidade de rede

1. Supondo que o seu nome mod ?? InternetSpeed ??e que seu comando seja getnetspeed, repita as etapas de 1 a 3 no segundo exemplo: Hello World on command execute
2. Coloque esses namespaces acima do arquivo:
- Imports System.Net
- Imports System.Linq
- Importa????es System.IO
- Importa o System.Math
- Importa o Microsoft.VisualBasic.Interaction
3. Fa??a seu manipulador de comando:
Sub PerformCmd (Opcional ByVal args As String = "") Implementa IScript.PerformCmd
Dim velocidades como Double () = New Double (4) {}
Para i As Integer = 0 a 4
Dim jQueryFileSize As Integer = 261
Dim client como novo cliente da Web ()
Dim startTime As DateTime = DateTime.Now
client.DownloadFile ("http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.js", Environ ("USERPROFILE") "\ jQuery.js")
Dim endTime As DateTime = DateTime.Now
velocidades (i) = Round ((jQueryFileSize / (endTime - startTime) .TotalSeconds))
Pr??ximo
File.Delete (Environ ("USERPROFILE") "\ jQuery.js")
W ("Velocidade do download: {0} KB / s", "neutralText", speeds.Average ())
End Sub
4. O c??digo deve ficar assim em VB:

Imports System.Net
Imports System.Linq
Importa????es System.IO
Imports System.Math
Imports Microsoft.VisualBasic.Interaction
Importa o KS.ModParser
Importa o KS.TextWriterColor
Classe p??blica InternetSpeed
Implementa o IScript
Propriedade Cmd como implementa????o de seq????ncia de caracteres IScript.Cmd
Propriedade Def como Implementos de String IScript.Def
Nome da propriedade como implementos de seq????ncia de caracteres IScript.Name
Vers??o da propriedade como os implementos de seq????ncia de caracteres IScript.Version
Sub StartMod () implementa IScript.StartMod
Cmd = "getnetspeed"
Def = ""
Nome = "InternetSpeed"
Vers??o = "1.0"
End Sub
Sub StopMod () implementa IScript.StopMod
End Sub
Sub PerformCmd (Opcional ByVal args As String = "") Implementa IScript.PerformCmd
Dim velocidades como Double () = New Double (4) {}
Para i As Integer = 0 a 4
Dim jQueryFileSize As Integer = 261
Dim client como novo cliente da Web ()
Dim startTime como Data = Date.Now
client.DownloadFile ("http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.js", Environ ("USERPROFILE") "\ jQuery.js")
Dim endTime As Date = Date.Now
Velocidades (i) = Round (jQueryFileSize / (endTime - startTime) .TotalSeconds)
Pr??ximo
File.Delete (Environ ("USERPROFILE") "\ jQuery.js")
W ("Velocidade do download: {0} KB / s", "neutralText", speeds.Average ())
End Sub
Sub InitEvents (ByVal ev As String) implementa IScript.InitEvents
End Sub
Classe final

... ou em C

usando o sistema;
usando System.Net;
using System.Linq;
using System.IO;
usando M = System.Math;
usando MP = KS.ModParser;
usando TWC = KS.TextWriterColor;
classe p??blica InternetSpeed: MP.IScript
{
cadeia p??blica Cmd {get; 
cadeia p??blica Def {get; 
public string Nome {get; 
public string Vers??o {get; 
public void StartMod ()
{
Cmd = "getnetspeed";
Def = "";
Name = "InternetSpeed";
Vers??o = "1.0";
}
public void StopMod ()
{
}
public void PerformCmd (string args = "")
{
double [] velocidades = novo duplo [5];
para (int i = 0; i <= 4; i)
{
int jQueryFileSize = 261;
Cliente WebClient = novo Cliente Web ();
DateTime startTime = DateTime.Now;
client.DownloadFile ("http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.js", System.Environment.GetEnvironmentVariable ("USERPROFILE") "\\ jQuery.js");
DateTime endTime = DateTime.Now;
velocidades [i] = M.Round (jQueryFileSize / (endTime - startTime) .TotalSeconds);
}
File.Delete (System.Environment.GetEnvironmentVariable ("USERPROFILE") "\\ jQuery.js");
TWC.W ("Velocidade de download: {0} KB / s", "neutralText", speeds.Average ());
}
publicEvent InitEvents (string ev)
{
}
}

5. Repita o ??ltimo passo no segundo exemplo: Hello World on command execute

Mais exemplos

Se voc?? quiser verificar mais exemplos, sinta-se ?? vontade para verific??-los no reposit??rio KSModExamples no GitHub (ainda n??o dispon??vel).

Fontes:

1. https://www.aspsnippets.com/Articles/Check-Internet-Connection-Download-Speed-using-C-and-VBNet-in-ASPNet.aspx
-BODY END-

-COLOR CONFIGURATION-
mod=>Green
New Project=>Cyan
Empty Project=>Cyan
References=>Cyan
Solution Explorer=>DarkGreen
Add Reference...=>Cyan
Browse...=>Cyan
Kernel Simulator=>DarkGreen
OK=>Cyan
Open File=>DarkGreen
KS=>DarkGreen
OK.=>Cyan
checked=>Red
project,=>Green
solution=>Red
Class Library=>Cyan
Compile=>DarkGreen
Build Events,=>Cyan
Post-build=>DarkGreen
copy ..\..\ModFile.vb ..\..\..\..\ModFile.m=>Cyan
del /Q *.*=>Cyan
"path\to\Kernel Simulator.exe" testMods ModFile.m=>Cyan
only=>Red
CTRL+S=>Cyan
Copy Local=>Cyan
False=>Red
Add=>Cyan
mod,=>Green
should=>Red
Public=>Cyan
ModName=>DarkGreen
End=>Cyan
Class...=>Cyan
Visual Studio 2017=>Magenta
Implements=>Cyan
IScript=>DarkGreen
KS=>Cyan
TextWriterColor=>Green
Imports=>Cyan
KS.TextWriterColor=>DarkGreen
IScript:=>DarkGreen
Property As String=>Cyan
Cmd Def Name Version=>DarkGreen
IScript.Cmd IScript.Def IScript.Name IScript.Version=>DarkGreen
StartMod() IScript.StartMod=>DarkGreen
"" "ModName" "1.0"=>DarkGreen
Sub=>Cyan
StopMod() IScript.StopMod=>DarkGreen
PerformCmd (ByVal String) IScript.PerformCmd=>DarkGreen
If (args "YourArgHere") Then=>DarkGreen
Dim String() .Split({" "c})=>Cyan
splitArgs.Length 1=>DarkGreen
(splitArgs(0) "Part1" And splitArgs(1) "Part2")=>DarkGreen
Else=>Red
(ev "EventName") IScript.InitEvents=>DarkGreen
ElseIf=>Red
"AnotherEvent")=>DarkGreen
IMPORTANT NOTICE! Never=>Red
subs=>Green
AnotherClass=>DarkGreen
Hello World=>Green
HelloGuys) HelloGuys: HelloGuys=>DarkGreen
KS.ModParser=>DarkGreen
errors=>Red
"HelloGuys"=>DarkGreen
"Hello World", "neutralText"=>DarkGreen
"Goodbye World",=>DarkGreen
mod: Loading mods...=>Green
v1.0 started=>Green
"SayHello" "HelloShell" HelloShell):=>DarkGreen
"HW")=>DarkGreen
"Say" "Hello"=>DarkGreen
"WhatDoISay" "HelloArgs"=>DarkGreen
"Argument {0}: {1}", "neutralText", ArgCount, splitArgs(ArgCount - 1)=>DarkGreen
ArgCount + 1=>DarkGreen
For Each In=>Cyan
arg splitArgs=>DarkGreen
Next=>Cyan
System.Net System.Linq System.IO System.Math Microsoft.VisualBasic.Interaction=>DarkGreen
"http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.js", Environ("USERPROFILE") "\jQuery.js"=>DarkGreen
"Download speed: {0}KB/s", speeds.Average()=>DarkGreen
"getnetspeed" "InternetSpeed" InternetSpeed InternetSpeed, getnetspeed,=>DarkGreen
KSModExamples GitHub=>Green
-COLOR CONFIG END-

-SECTIONS-
What is the mod for the kernel?=>SE1
Can I make my own screensaver?=>SE1
Basic modding=>SE1
0. How to make your own mods on Visual Studio 2017?=>SE2
1. Hello World on Kernel Start, and Goodbye World on Kernel Stop=>SE2
2. Hello World on command execute=>SE2
3. Hello World on command execute with arguments (single)=>SE2
4. Hello World on command execute with multiple arguments=>SE2
5. Network Speed Testing=>SE2
More examples=>SE1
Sources:=>SE1
-SECTIONS END-
