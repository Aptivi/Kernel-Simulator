(*MAN START*)

-TITLE:Vodi?? za modiranje ??uvara zaslona
-REVISION:0.0.1
-KSLAYOUT:0.0.5.9-OR-ABOVE

-BODY START-
??to je screensaver za kernel?

??uvar zaslona je neaktivan postupak koji ??e se aktivirati ako va??e ra??unalo ne radi. 

??uvar zaslona tako??er se mo??e prilagoditi i nau??it ??emo vas kako napraviti svoj prvi ??uvar zaslona, ??????od najjednostavnijeg ??uvara zaslona do legendarnog.

Osnovni modding (??uvar zaslona)

0. Kako napraviti vlastite ??uvare zaslona u Visual Studio 2017?

1. Ponovite korake 1-8 iz Modding vodi??a
2. U odjeljku Kompilacija kliknite na Doga??aji za izgradnju, a zatim to napi??ite u naredbenoj naredbi Post-build event:
   - copy ..\..\ModFile.vb ..\..\..\..\ModFileSS.m (Stavi SS prije .m tako da ga KS prepozna kao ??uvar zaslona, ??????a ne kao mod)
   - del /Q *.* (kako bismo bili sigurni da se ne stvaraju la??ne DLL datoteke jer ne koristimo DLL za modove)
3. Ponovite korake 9-16 iz Modding vodi??a, ali zamijenite Imports Kernel_Simulator.ModParser s Uvoz Kernel_Simulator.Screensaver
4. Izme??u linija javne klase ... i krajnje klase, obavijestite Visual Studio 2017 da ??ete kreirati svoju KS screensaver pisanjem: Implementira ICustomSaver
5. Ako ??elite dodati prostore s imenima, moraju se ispuniti ova pravila:
   1) Ne uvozite Kernel_Simulator sam. 
   2) Pri uvozu modula / klasa poput TextWriterColor, pi??e se ovako: Uvozi Kernel_Simulator.TextWriterColor
6. Definirajte svojstva za informacije o modu tako ??to ??ete staviti ispod skripte Implements IScript:
   Property Initialized As Boolean Implements ICustomSaver.Initialized
7. U??inite svoj init screensaver pod nazivom InitSaver () koji implementira ICustomSaver.InitSaver, tako ??to ??ete napisati:
    Sub InitSaver() Implements ICustomSaver.InitSaver
        'Your code here
	Initialized = True 'Put it anywhere in the sub if you're making If conditions, otherwise, leave it here.
    End Sub
8. Zamijenite svaki svoj kod ovdje komentirajte svojim kodom. 
9. Napravite svoj pretpregled (Nazvan prije prikazivanja ??uvara zaslona) podnaslov PreDisplay () koji implementira ICustomSaver.PreDisplay tako ??to ??ete napisati:
    Sub PreDisplay() Implements ICustomSaver.PreDisplay
        'Your code here
    End Sub
10. Napravite svoj kod za prikaz (trebao bi prikazivati ??????ne??to) pod imenom ScrnSaver () koji implementira ICustomSaver.ScrnSaver, tako ??to napi??ete:
    Sub ScrnSaver() Implements ICustomSaver.ScrnSaver
        'Your code here
    End Sub
11. Pretplatu mo??ete izvr??iti bilo gdje u razredu, ali ako:
    1) oni su u drugoj klasi, pritisnite Enter on End Class i javite novu klasu koja pohranjuje nove sub:
       Public Class AnotherClass
	       'Your definitions below, and so your subs, functions, interfaces, etc.
       End Class
	2) poku??avaju ponovo inicijalizirati ??uvar zaslona ponovnim pozivom na InitSaver (), Prvo poku??ajte s testnim okru??enjem, a zatim s proizvodnim okru??enjem ako to radi ispravno.
	I trebaju biti ispunjeni sljede??i uvjeti:
	1) Ne bi trebali praviti beskona??nu petlju osim ako ih ne napravite koja izlazi ako su ispunjeni odre??eni uvjeti
	2) Ne bi trebali poku??avati uzrokovati pogre??ke u kernelu.
	3) Postavite svoj sub poziv na jedan od tri potplata koji implementira ICustomSaver su??elje. 
12. Pokrenite gradnju. 
13. Pokrenite svoj Kernel Simulator na koji ste se upravo referirali u svom projektu i u??itajte, postavite zadane postavke i zaklju??ajte svoj scren i ??uvar zaslona je tamo.

1. U okviru konzole poruka, a uskoro i preko no??i, ili rude (odlazi ...) poruke

??uvar zaslona okvirne poruke poru??uje ljudima da vlasnika ra??unala vi??e nema ili da im vlasnik ka??e da bi trebali oti??i jer se na njihovim ra??unalima doga??aju va??ne stvari. 

1. Desnom tipkom mi??a kliknite projekt i idite na Add> Class
2. Navedite svoju ??uvar zaslona, ??????ali .vb ostavite netaknut. 
3. Kliknite Dodaj i kod ??e biti spreman.
4. Napi??ite ispod (pretpostavite da je va??e ime SOR) javna klasa SOR: Provodi ICustomSaver
5. Napi??ite iznad javne klase SOR:
   - Imports System
   - Imports System.Threading
   - Imports KS.Screensaver
   - Imports KS.TextWriterColor
   - Imports KS.Login
6. Trebali biste dobiti pogre??ke govore??i kako bi se ovi potplati trebali stvoriti.
7. U??inite svoj startni ??uvar ??uvara zaslona tako ??to ??ete napisati:
    Property Initialized As Boolean Implements ICustomSaver.Initialized
    Sub InitSaver() Implements ICustomSaver.InitSaver
	W("Load this screensaver using ""loadsaver SORSS.m"" and ""setsaver SORSS.m""", "neutralText")
        Initialized = True
    End Sub
8. Budu??i da ni??ta ne primjenjujemo prije prikazivanja ??uvara zaslona, ??????to ??emo ostaviti prazno:
    Sub PreDisplay() Implements ICustomSaver.PreDisplay
    End Sub
9. Napi??ite iznad entiteta inicijaliziranog ...:
    Public SOR_Random As New Random() 'Initializes the random number generator
    Public S_Random As New Random() 'Initializes the random number generator
    Public O_Random As New Random() 'Initializes the random number generator
    Public R_Random As New Random() 'Initializes the random number generator
9. Napi??i na podstrani ScrnSaver ():
    Console.Clear()
    If Custom.CancellationPending = True Then 'This will fix the issue for the task being busy.
        Exit For
    End If
    Dim SOR_Integer As Integer = SOR_Random.Next(1, 4) 'Chooses whether it's Soon, Overnight or Rude
    Dim Soon_MsgID As Integer = SOR_Random.Next(0, 2) 'Selects messages in the Soon array
    Dim Over_MsgID As Integer = SOR_Random.Next(0, 2) 'Selects messages in the Overnight array
    Dim Rude_MsgID As Integer = SOR_Random.Next(0, 3) 'Selects messages in the Rude array
    Console.SetWindowPosition(0, 1)
    Select Case SOR_Integer
        Case 1 'Soon
            WriteMsg(SOR_Integer, Soon_MsgID)
        Case 2 'Overnight
            WriteMsg(SOR_Integer, Over_MsgID)
        Case 3 'Rude
            WriteMsg(SOR_Integer, Rude_MsgID)
    End Select
    Thread.Sleep(10000)
11. Mo??da ??ete trebati stvoriti 1 funkciju i 2 pomo??ne jedinice kako bi ovo moglo funkcionirati. 
    Public Shared Function ParsePlaces(ByVal text As String)
        text = text.Replace("<OWNER>", signedinusrnm)
        Return text
    End Function
    Public Shared Sub InitializeBar(ByVal strlen As Integer)
        W("   +-", "neutralText")
        For l As Integer = 0 To strlen - 1
            W("-", "neutralText")
        Next
        W("-+", "neutralText")
    End Sub
    Public Shared Sub WriteMsg(ByVal TypeID As Integer, ByVal MsgID As Integer)
	Dim BackMessages As String() = {"<OWNER> will be back soon.", "<OWNER> is busy. He will be back soon."}
    	Dim OvernightMsg As String() = {"It seems that <OWNER> will be back overnight", "He'll be back overnight."}
    	Dim RudeMessages As String() = {"Can you go away?", "Go away, <OWNER> will be back soon", "<OWNER> isn't here. Go away."}
        Dim text As String = ""
        Select Case TypeID
            Case 1
                text = ParsePlaces(BackMessages(MsgID))
            Case 2
                text = ParsePlaces(OvernightMsg(MsgID))
            Case 3
                text = ParsePlaces(RudeMessages(MsgID))
        End Select
        InitializeBar(text.Length)
        W("   | {0} |", "neutralText", text)
        InitializeBar(text.Length)
    End Sub
12. K??d treba izgledati ovako:
    Imports System
    Imports System.Threading
    Imports KS.Screensaver
    Imports KS.TextWriterColor
    Imports KS.Login
    Public Class SoonOvernightRude
    	Implements ICustomSaver
    	Property Initialized As Boolean Implements ICustomSaver.Initialized
    	Public SOR_Random As New Random() 'Initializes the random number generator
    	Public S_Random As New Random() 'Initializes the random number generator
    	Public O_Random As New Random() 'Initializes the random number generator
    	Public R_Random As New Random() 'Initializes the random number generator
    	Sub InitSaver() Implements ICustomSaver.InitSaver
            W("Set this screensaver as default using ""setsaver SORSS.m""", "neutralText")
            Initialized = True
    	End Sub
    	Sub PreDisplay() Implements ICustomSaver.PreDisplay
    	End Sub
    	Sub ScrnSaver() Implements ICustomSaver.ScrnSaver
	        Console.Clear()
	        If Custom.CancellationPending = True Then 'This will fix the issue for the task being busy.
                Exit For
            End If
    	    Dim SOR_Integer As Integer = SOR_Random.Next(1, 4) 'Chooses whether it's Soon, Overnight or Rude
    	    Dim Soon_MsgID As Integer = S_Random.Next(0, 2) 'Selects messages in the Soon array
    	    Dim Over_MsgID As Integer = O_Random.Next(0, 2) 'Selects messages in the Overnight array
    	    Dim Rude_MsgID As Integer = R_Random.Next(0, 3) 'Selects messages in the Rude array
            Console.SetCursorPosition(0, 1)
            Select Case SOR_Integer
            	Case 1 'Soon
                    WriteMsg(SOR_Integer, Soon_MsgID)
            	Case 2 'Overnight
                    WriteMsg(SOR_Integer, Over_MsgID)
            	Case 3 'Rude
                    WriteMsg(SOR_Integer, Rude_MsgID)
            End Select
	    Thread.Sleep(10000)
    	End Sub
    	Public Shared Function ParsePlaces(ByVal text As String)
            text = text.Replace("<OWNER>", signedinusrnm)
            Return text
        End Function
        Public Shared Sub InitializeBar(ByVal strlen As Integer)
            W("   +-", "neutralText")
            For l As Integer = 0 To strlen - 1
            	W("-", "neutralText")
            Next
            W("-+", "neutralText")
        End Sub
        Public Shared Sub WriteMsg(ByVal TypeID As Integer, ByVal MsgID As Integer)
	        Dim BackMessages As String() = {"<OWNER> will be back soon.", "<OWNER> is busy. He will be back soon."}
    	    Dim OvernightMsg As String() = {"It seems that <OWNER> will be back overnight", "He'll be back overnight."}
    	    Dim RudeMessages As String() = {"Can you go away?", "Go away, <OWNER> will be back soon", "<OWNER> isn't here. Go away."}
            Dim text As String = ""
            Select Case TypeID
            	Case 1
                    text = ParsePlaces(BackMessages(MsgID))
            	Case 2
                    text = ParsePlaces(OvernightMsg(MsgID))
            	Case 3
                    text = ParsePlaces(RudeMessages(MsgID))
            End Select
            InitializeBar(text.Length)
            W("   | {0} |", "neutralText", text)
            InitializeBar(text.Length)
    	End Sub
    End Class
13. Pokrenite gradnju. 
14. Pokrenite svoj Kernel Simulator na koji ste se upravo referirali u svom projektu, a zatim se u??itajte, postavite kao zadano i pokrenite spremljeni zaslon.

2. Jednostavan prazan ekran

1. Ponovite korake 1-4 na prvom primjeru: Okvir s porukama u konzoli, a uskoro, no??enje ili nepristojno (odlazite ...)
2. Napi??ite iznad praznog razreda javne klase (pod pretpostavkom da je va??e ime razreda prazno):
    - Imports System
    - Imports KS.Screensaver
3. Napi??ite ove ispod Implements ICustomSaver:
    Public Property Initialized As Boolean Implements ICustomSaver.Initialized
    Public Sub InitSaver() Implements ICustomSaver.InitSaver
        Initialized = True
    End Sub
    Public Sub PreDisplay() Implements ICustomSaver.PreDisplay
    End Sub
    Public Sub ScrnSaver() Implements ICustomSaver.ScrnSaver
    
    End Sub
4. Unesite ScrnSaver pod:
    Console.Clear ()
5. Kod treba izgledati ovako:
    Imports System
    Imports KS.Screensaver
    Public Class Blank
    	Implements ICustomSaver
    	Public Property Initialized As Boolean Implements ICustomSaver.Initialized
    	Public Sub InitSaver() Implements ICustomSaver.InitSaver
            Initialized = True
    	End Sub
    	Public Sub PreDisplay() Implements ICustomSaver.PreDisplay
    	End Sub
    	Public Sub ScrnSaver() Implements ICustomSaver.ScrnSaver
        Console.Clear()
   	End Sub
    End Class
5. Ponovite korake 13-14 na prvom primjeru: Poruka unutar konzole, a uskoro, no??enje ili nepristojno (odlazite ...)

3. Animacija (krug crte??a - 4 kadra - 4 FPS)

Ovaj ??e vam primjer zapo??eti s animacijama. 

Imports System
Imports Microsoft.VisualBasic.Constants
Imports KS.TextWriterColor
Imports System.Threading
Imports KS.Screensaver
Public Class ANI
    Implements ICustomSaver
    Public Property Initialized As Boolean Implements ICustomSaver.Initialized
    Public CurrentStep As Integer
    Public Sub InitSaver() Implements ICustomSaver.InitSaver
        Initialized = True
    End Sub
    Public Sub PreDisplay() Implements ICustomSaver.PreDisplay
    End Sub
    Public Sub ScrnSaver() Implements ICustomSaver.ScrnSaver
        For CurrentStep = 0 To 3
            Console.Clear()
	        If Custom.CancellationPending = True Then 'This will fix the issue for the task being busy.
                Exit For
            End If
            W(aniset(CurrentStep), "neutralText")
            Thread.Sleep(150)
        Next
    End Sub

    Public aniset As String() = {"                mmhyo/-         " + vbNewLine +
                                 "                mNMMMMMNy:      " + vbNewLine +
                                 "                   .:odMMMd/    " + vbNewLine +
                                 "                       .oMMMd.  " + vbNewLine +
                                 "                         `hMMN- " + vbNewLine +
                                 "                           yMMm`" + vbNewLine +
                                 "                            mMM+" + vbNewLine +
                                 "                            oMMh" + vbNewLine +
                                 "                                " + vbNewLine +
                                 "                                " + vbNewLine +
                                 "                                " + vbNewLine +
                                 "                                " + vbNewLine +
                                 "                                " + vbNewLine +
                                 "                                " + vbNewLine +
                                 "                                " + vbNewLine +
                                 "                                ",
                                 "                mmhyo/-         " + vbNewLine +
                                 "                mNMMMMMNy:      " + vbNewLine +
                                 "                   .:odMMMd/    " + vbNewLine +
                                 "                       .oMMMd.  " + vbNewLine +
                                 "                         `hMMN- " + vbNewLine +
                                 "                           yMMm`" + vbNewLine +
                                 "                            mMM+" + vbNewLine +
                                 "                            oMMh" + vbNewLine +
                                 "                            oMMh" + vbNewLine +
                                 "                            mMM+" + vbNewLine +
                                 "                           yMMm`" + vbNewLine +
                                 "                         `hMMN- " + vbNewLine +
                                 "                       `oMMMd.  " + vbNewLine +
                                 "                   .:odMMMm/    " + vbNewLine +
                                 "                mNMMMMMNy:      " + vbNewLine +
                                 "                mmhhs/-         ",
                                 "                mmhyo/-         " + vbNewLine +
                                 "                mNMMMMMNy:      " + vbNewLine +
                                 "                   .:odMMMd/    " + vbNewLine +
                                 "                       .oMMMd.  " + vbNewLine +
                                 "                         `hMMN- " + vbNewLine +
                                 "                           yMMm`" + vbNewLine +
                                 "                            mMM+" + vbNewLine +
                                 "                            oMMh" + vbNewLine +
                                 "hMMo                        oMMh" + vbNewLine +
                                 "+MMm                        mMM+" + vbNewLine +
                                 " mMMy                      yMMm`" + vbNewLine +
                                 " -NMMh`                  `hMMN- " + vbNewLine +
                                 "  .dMMMs`              `oMMMd.  " + vbNewLine +
                                 "    /dMMMdo:.      .:odMMMm/    " + vbNewLine +
                                 "      :yNMMMMMNmmNMMMMMNy:      " + vbNewLine +
                                 "         -/shhmmmmhhs/-         ",
                                 "         -/oydmmmmhyo/-         " + vbNewLine +
                                 "      :yNMMMMMNmmNMMMMMNy:      " + vbNewLine +
                                 "    :dMMMdo:.      .:odMMMd/    " + vbNewLine +
                                 "  .dMMMs.              .oMMMd.  " + vbNewLine +
                                 " -NMMh`                  `hMMN- " + vbNewLine +
                                 " mMMy                      yMMm`" + vbNewLine +
                                 "+MMm                        mMM+" + vbNewLine +
                                 "hMMo                        oMMh" + vbNewLine +
                                 "hMMo                        oMMh" + vbNewLine +
                                 "+MMm                        mMM+" + vbNewLine +
                                 " mMMy                      yMMm`" + vbNewLine +
                                 " -NMMh`                  `hMMN- " + vbNewLine +
                                 "  .dMMMs`              `oMMMd.  " + vbNewLine +
                                 "    /dMMMdo:.      .:odMMMm/    " + vbNewLine +
                                 "      :yNMMMMMNmmNMMMMMNy:      " + vbNewLine +
                                 "         -/shhmmmmhhs/-         "}
End Class

4. Izra??unajte od 0 do 1.000.000 s trakom napretka (dinami??ki)

Imports System
Imports Microsoft.VisualBasic.Constants
Imports KS.TextWriterColor
Imports Microsoft.VisualBasic.Strings
Imports KS.Screensaver
Public Class Dynamic
    Implements ICustomSaver
    Public Property Initialized As Boolean Implements ICustomSaver.Initialized
    Public Res As Integer
    Public ProgWent As Integer
    Public Check As Integer
    Public oldCheck As Integer
    Public Sub InitSaver() Implements ICustomSaver.InitSaver
        Initialized = True
    End Sub
    Public Sub PreDisplay() Implements ICustomSaver.PreDisplay
    End Sub
    Public Sub ScrnSaver() Implements ICustomSaver.ScrnSaver
        Console.Clear()
        For Res = 0 To 1000000
            If Custom.CancellationPending = True Then 'This will fix the issue for the task being busy.
                Exit For
            End If
            Console.SetCursorPosition((Console.WindowWidth / 2) - 9, (Console.WindowHeight / 2) - 5)
            ShowStats()
        Next
        Check = 0 : oldCheck = 0 : ProgWent = 0
    End Sub
    Public Sub ShowStats()
        W("{0} / 1000000 | {1}%", "neutralText", Res, FormatNumber(CStr(Res * 100 / 1000000), 1))
        UpdateProgressBar(Res * 100 / 1000000)
    End Sub
    Public Sub UpdateProgressBar(ByVal percent As String)
        Check = percent / 5
        W(Check, "neutralText")
        Console.SetCursorPosition((Console.WindowWidth / 2) - 9, (Console.WindowHeight / 2) - 3)
        W("+--------------------+", "neutralText")
        Console.SetCursorPosition((Console.WindowWidth / 2) - 9, (Console.WindowHeight / 2) - 2)
        W("| ", "neutralText")
        If Check <> oldCheck Then
            For Went As Integer = 0 To ProgWent
                W("*", "neutralText")
            Next
            ProgWent += 1
        End If
        Console.SetCursorPosition((Console.WindowWidth / 2) + 11, (Console.WindowHeight / 2) - 2)
        W(" |", "neutralText")
        Console.SetCursorPosition((Console.WindowWidth / 2) - 9, (Console.WindowHeight / 2) - 1)
        W("+--------------------+", "neutralText")
        oldCheck = percent / 5
    End Sub
End Class

Vi??e primjera

Ako ??elite provjeriti vi??e primjera, slobodno ih pogledajte u skladi??tu KSModExamples u mapi Screensavers u GitHubu.
-BODY END-

-COLOR CONFIGURATION-
screensaver=>Green
savescreen=>DarkGreen
Modding guide=>Green
Compile=>Cyan
Build Events=>Cyan
Post-build event=>Green
End Class=>Cyan
Public Class...=>Cyan
Visual Studio 2017=>Magenta
Imports Implements=>Cyan
ICustomSaver=>Green
Kernel_Simulator=>Cyan
TextWriterColor=>Green
Kernel_Simulator.TextWriterColor=>Green
Property As Boolean Sub=>Cyan
Initialized ICustomSaver.Initialized=>Green
Kernel Simulator=>Green
Rude=>Red
KSModExamples Screensavers GitHub=>Green
-COLOR CONFIG END-

-SECTIONS-
What is the screensaver for the kernel?=>SE1
Basic modding (screensaver)=>SE1
0. How to make your own screensavers on Visual Studio 2017?=>SE2
1. In-Console Message Box, and Soon, Overnight, or Rude (Go away...) messages=>SE2
2. Simple Blank screen=>SE2
3. Animation (Drawing Circle - 4 frames - 4 FPS)=>SE2
4. Calculate from 0 to 1,000,000 with progress bar (dynamic)=>SE2
More examples=>SE1
-SECTIONS END-
