(*MAN START*)

-TITLE:Come creare la tua mod per il kernel
-REVISION:0.0.2
-KSLAYOUT:0.0.5.9-OR-ABOVE

-BODY START-
Qual ?? la mod per il kernel?

La mod ?? il file di codice sorgente che si carica all'avvio e pu?? aggiungere estensioni al kernel, alla shell e tutto il resto. 

Questo ?? utile se vuoi aggiungere le tue estensioni al kernel, come i gestori di eventi per il kernel.

Posso creare il mio salvaschermo?

S??, ma prima controlla la pagina di manuale "guida al modding del salvavita manuale" per istruzioni su come aggiungere il tuo salvaschermo.

Modding di base

0. Come creare le tue mod su Visual Studio 2017?

1. Nella pagina iniziale, fare clic su Nuovo progetto
2. Fare clic su Progetto vuoto, selezionare VB o C
3. Fare clic con il tasto destro del mouse su Riferimenti in Esplora soluzioni e premere Aggiungi riferimento ...
4. Fare clic sul pulsante Sfoglia ... e individuare il file eseguibile di Kernel Simulator (il file appena eseguito)
5. Quando fai clic su OK su Apri file, vedrai che i file eseguibili di KS vengono aggiunti all'elenco di riferimento.
6. Assicurarsi che abbia la casella di controllo selezionata e fare clic su OK.
7. Fare clic con il tasto destro del mouse sul progetto, non sulla soluzione
8. Modificare il tipo di applicazione in Libreria di classi
9. Nella sezione Compila, fai clic su Build Events, quindi scrivilo sulla riga di comando dell'evento Post-build:
Se stai usando VB:
- copia .. \ .. \ ModFile.vb .. \ .. \ .. \ .. \ ModFile.m
- del / Q *. * (per assicurarsi che non ci siano file DLL fittizi in fase di creazione poich?? non utilizziamo DLL per le mod)
- "path \ to \ Kernel Simulator.exe" testMods ModFile.m
Se stai usando C
- copia .. \ .. \ ModFile.cs .. \ .. \ .. \ .. \ ModFileCS.m
- del / Q *. * (per assicurarsi che non ci siano file DLL fittizi in fase di creazione poich?? non utilizziamo DLL per le mod)
- "path \ to \ Kernel Simulator.exe" testMods ModFileCS.m
10. Assicurarsi che l'evento post-build venga eseguito solo quando la compilazione ha esito positivo
11. Salvare tutto premendo CTRL S
12. Espandere la sezione Riferimenti in Esplora soluzioni
13. Impostare l'impostazione Copia locale su False poich?? si dispone dell'eseguibile in modo da non effettuare una copia aggiuntiva
14. Fare clic con il tasto destro del mouse sul progetto e selezionare Aggiungi> Classe
15. Supponi di fare una mod in VB. 
16. Fai clic su Aggiungi e il codice sar?? pronto:
ModName di classe pubblica
'Il tuo codice qui
End Class
17. Tra le righe Public Class ... e End Class, fai sapere a Visual Studio 2017 che stai per creare la tua mod KS scrivendo: Implementa IScript
18. Se vuoi aggiungere spazi dei nomi, devi rispettare queste regole:
1) Non importare Kernel_Simulator da solo. 
2) Quando si importano moduli / classi come TextWriterColor, ?? scritto cos??: Importa Kernel_Simulator.TextWriterColor
19. Definisci le propriet?? per le informazioni sulle mod inserendo di seguito l'IScript degli attrezzi:
Propriet?? Cmd As String Implementa IScript.Cmd
Propriet?? Def As String Implementa IScript.Def
Nome propriet?? come stringa Implementa IScript.Name
Versione della propriet?? come stringa Implementa IScript.Version
20. Rendi il tuo sottomodulo di avvio denominato StartMod () che implementa IScript.StartMod, scrivendo:
Sub StartMod () Implementa IScript.StartMod
Cmd = "" 'Se vuoi aggiungere comandi, scrivi qui il tuo comando.
Def = "" 'Spiega qual ?? il tuo comando e cosa far??.
Name = "ModName" 'Sostituisci ModName con il tuo nome mod come preferisci, ma DOVREBBE riflettere lo scopo del mod. 
Versione = "1.0" 'Puoi specificare la tua versione mod, ma dovrebbe seguire le linee guida per il controllo delle versioni e puoi trovarla su Internet. 

'Il tuo codice qui sotto
End Sub
21. Sostituisci tutti i commenti del tuo codice di seguito con il tuo codice. 
22. Rendi la tua mod stop sottotitolata StopMod () che implementa IScript.StopMod, scrivendo:
Sub StopMod () Implementa IScript.StopMod
'Il tuo codice qui sotto
End Sub
23. 1) Se stai eseguendo il comando nella tua mod, scrivi il codice di risposta di seguito:
Sub PerformCmd (Argomenti ByVal opzionali come String = "") Implementa IScript.PerformCmd
'Il tuo codice qui sotto
End Sub
2) Se stai eseguendo il comando che gestisce gli argomenti, scrivi il codice di risposta di seguito:
Sub PerformCmd (Argomenti ByVal opzionali come String = "") Implementa IScript.PerformCmd
If (args = "YourArgHere") Allora 'Sostituisci YourArgsHere con il tuo set di argomenti
'Il tuo codice qui sotto
Finisci se
End Sub
3) Se stai eseguendo il comando che gestisce gli argomenti successivi, scrivi il codice di risposta di seguito:
Sub PerformCmd (Argomenti ByVal opzionali come String = "") Implementa IScript.PerformCmd
Dim splitArgs As String () = args.Split ({"" c})
Se splitArgs.Length> 1 Quindi
If (splitArgs (0) = "Part1" E splitArgs (1) = "Part2") Quindi 'Sostituisci Part1 con il tuo argomento e Part2 con il tuo argomento. 
'Il tuo codice qui sotto
Altro
"Il tuo argomento non corrisponde al codice di seguito
Finisci se
Altro
'Il tuo codice che gestisce argomenti non sufficienti
Finisci se
End Sub
24. 1) Se stai creando il tuo gestore eventi che gestisce ci?? che ?? accaduto nel kernel, scrivi il codice handle di seguito:
Sub InitEvents (ByVal ev As String) Implementa IScript.InitEvents
If (ev = "EventName") Quindi 'Sostituisci EventName con eventi che si trovano sul comando "Eventi manuali per sviluppatori di mod"
'Il tuo codice qui sotto
Finisci se
End Sub
2) Se gestisci pi?? eventi, scrivi il codice handle di seguito:
Sub InitEvents (ByVal ev As String) Implementa IScript.InitEvents
If (ev = "EventName") Quindi 'Sostituisci EventName con eventi che si trovano sul comando "Eventi manuali per sviluppatori di mod"
'Il tuo codice qui sotto
ElseIf (ev = "AnotherEvent") Quindi 'Sostituisci AnotherEvent con eventi che si trovano sul comando "Eventi manuali per sviluppatori di mod"
'Il tuo codice qui sotto
Finisci se
End Sub
3) AVVISO IMPORTANTE! 
25. Puoi fare i tuoi abbonamenti ovunque nella classe, ma se:
1) sono nella diversa classe, premi Invio su Fine classe e crea una nuova classe pubblica che memorizza nuovi abbonati:
Classe pubblica AnotherClass
"Le tue definizioni di seguito, quindi i tuoi sottotitoli, funzioni, interfacce, ecc.
End Class
2) stanno provando a reinizializzare la mod chiamando nuovamente StartMod (), provalo prima nel tuo ambiente di test, poi nell'ambiente di produzione se ha funzionato correttamente.
E devono essere soddisfatte le seguenti condizioni:
1) Non dovrebbero fare un ciclo infinito a meno che tu non li stia facendo se vengono soddisfatte determinate condizioni
2) Non dovrebbero provare a causare errori con il kernel.
3) Se sei uno sfruttatore e stai creando il codice exploit per il kernel, fallo prima sul tuo ambiente di test, poi sull'ambiente di produzione, quindi fai il tuo rapporto CVE in modo da attirare l'attenzione e risolverlo rapidamente.
4) Se la tua mod estender?? il kernel, posiziona i tuoi codici di estensione su sottotitoli separati
5) Metti la tua chiamata secondaria su uno dei quattro sottotitoli che implementano l'interfaccia IScript. 
26. Esegui la build. 
27. Esegui il tuo Kernel Simulator a cui hai appena fatto riferimento nel tuo progetto.

1. Hello World on Kernel Start e Goodbye World on Kernel Stop

Hello World ?? il popolare esempio iniziale per tutti i programmatori. 

1. Fare clic con il tasto destro del mouse sul progetto e selezionare Aggiungi> Classe
2. Dai un nome al tuo mod, ma lascia intatto il .vb. 
3. Fai clic su Aggiungi e il codice sar?? pronto.
4. Scrivi sotto (Assumi che il tuo nome mod sia HelloGuys) Classe pubblica HelloGuys: Implementa IScript
5. Scrivi sopra la classe pubblica HelloGuys:
- Importa Kernel_Simulator.ModParser
- Importa Kernel_Simulator.TextWriterColor
6. Dovresti ricevere degli errori che dicono che questi sottotitoli dovrebbero essere creati.
7. Crea il tuo gestore eventi mod iniziale scrivendo:
Propriet?? Cmd As String Implementa IScript.Cmd
Propriet?? Def As String Implementa IScript.Def
Nome propriet?? come stringa Implementa IScript.Name
Versione della propriet?? come stringa Implementa IScript.Version
Sub StartMod () Implementa IScript.StartMod
Cmd = ""
Def = ""
Nome = "HelloGuys"
Versione = "1.0"
Wln ("Hello World", "neutralText")
End Sub
8. Crea il gestore dell'evento di stop scrivendo:
Sub StopMod () Implementa IScript.StopMod
Wln ("Goodbye World", "neutralText")
End Sub
9. Poich?? non stiamo implementando comandi n?? risponditori di eventi, lasceremo vuoti questi:
Sub PerformCmd (Argomenti ByVal opzionali come String = "") Implementa IScript.PerformCmd
End Sub
Sub InitEvents (ByVal ev As String) Implementa IScript.InitEvents
End Sub
10. Il codice dovrebbe apparire cos?? in VB:

Importa Kernel_Simulator.ModParser
Importa Kernel_Simulator.TextWriterColor
Classe pubblica HelloGuys
Implementa IScript
Propriet?? Cmd As String Implementa IScript.Cmd
Propriet?? Def As String Implementa IScript.Def
Nome propriet?? come stringa Implementa IScript.Name
Versione della propriet?? come stringa Implementa IScript.Version
Sub StartMod () Implementa IScript.StartMod
Cmd = ""
Def = ""
Nome = "HelloGuys"
Versione = "1.0"
Wln ("Hello World", "neutralText")
End Sub
Sub StopMod () Implementa IScript.StopMod
Wln ("Goodbye World", "neutralText")
End Sub
Sub PerformCmd (Argomenti ByVal opzionali come String = "") Implementa IScript.PerformCmd
End Sub
Sub InitEvents (ByVal ev As String) Implementa IScript.InitEvents
End Sub
End Class

... O in C

usando MP = Kernel_Simulator.ModParser;
usando TWC = Kernel_Simulator.TextWriterColor;
classe pubblica HelloGuys: MP.IScript
{
stringa pubblica Cmd {get; 
stringa pubblica Def {get; 
stringa pubblica Nome {get; 
stringa pubblica Versione {get; 
void pubblico StartMod ()
{
Cmd = "";
Def = "";
Nome = "HelloGuys";
Versione = "1.0";
TWC.Wln ("Hello World", "neutralText");
}
vuoto pubblico StopMod ()
{
TWC.Wln ("Goodbye World", "neutralText");
}
public void PerformCmd (string args = "")
{
}
public void InitEvents (string ev)
{
}
}

11. Esegui la build. 
12. Esegui il tuo Kernel Simulator a cui hai appena fatto riferimento nel tuo progetto.
13. Se tutto va bene, dovresti vedere i seguenti messaggi:
mod: caricamento mod ...
Ciao mondo
HelloGuys v1.0 avviato

2. Hello World a comando eseguire

1. Ripeti i passaggi 1-5 nel primo esempio: Hello World on Kernel Start e Goodbye World on Kernel Stop
2. Crea il gestore dell'evento mod iniziale scrivendo (supponendo che il nome della tua mod sia HelloShell):
Propriet?? Cmd As String Implementa IScript.Cmd
Propriet?? Def As String Implementa IScript.Def
Nome propriet?? come stringa Implementa IScript.Name
Versione della propriet?? come stringa Implementa IScript.Version
Sub StartMod () Implementa IScript.StartMod
Cmd = "SayHello"
Def = ""
Nome = "HelloShell"
Versione = "1.0"
End Sub
3. Poich?? non stiamo implementando il gestore dello spegnimento n?? i risponditori di eventi, lasceremo vuoti questi:
Sub StopMod () Implementa IScript.StopMod
End Sub
Sub InitEvents (ByVal ev As String) Implementa IScript.InitEvents
End Sub
4. Crea il tuo gestore dei comandi e lascia che risponda al comando mod SayHello:
Sub PerformCmd (Argomenti ByVal opzionali come String = "") Implementa IScript.PerformCmd
Wln ("Hello World", "neutralText")
End Sub
5. Il codice dovrebbe apparire cos?? in VB:

Importa Kernel_Simulator.ModParser
Importa Kernel_Simulator.TextWriterColor
Classe pubblica HelloShell
Implementa IScript
Propriet?? Cmd As String Implementa IScript.Cmd
Propriet?? Def As String Implementa IScript.Def
Nome propriet?? come stringa Implementa IScript.Name
Versione della propriet?? come stringa Implementa IScript.Version
Sub StartMod () Implementa IScript.StartMod
Cmd = "SayHello"
Def = ""
Nome = "HelloShell"
Versione = "1.0"
End Sub
Sub StopMod () Implementa IScript.StopMod
End Sub
Sub PerformCmd (Argomenti ByVal opzionali come String = "") Implementa IScript.PerformCmd
Wln ("Hello World", "neutralText")
End Sub
Sub InitEvents (ByVal ev As String) Implementa IScript.InitEvents
End Sub
End Class

... O in C

usando MP = Kernel_Simulator.ModParser;
usando TWC = Kernel_Simulator.TextWriterColor;
classe pubblica HelloShell: MP.IScript
{
stringa pubblica Cmd {get; 
stringa pubblica Def {get; 
stringa pubblica Nome {get; 
stringa pubblica Versione {get; 
void pubblico StartMod ()
{
Cmd = "SayHello";
Def = "";
Nome = "HelloShell";
Versione = "1.0";
}
vuoto pubblico StopMod ()
{
}
public void PerformCmd (string args = "")
{
TWC.Wln ("Hello World", "neutralText");
}
public void InitEvents (string ev)
{
}
}

6. Ripetere i passaggi 11-12 nel primo esempio: Hello World on Kernel Start e Goodbye World on Kernel Stop

3. Hello World on command eseguito con argomenti (singolo)

1. Supponendo che il nome della tua mod sia HelloArgs, l'argomento che far?? dire al tuo comando che Hello World ?? HW e che il tuo comando ?? SayHello, ripeti i passaggi 1-3 del secondo esempio: esegui Hello World a comando
2. Crea il gestore dei comandi e lascia che risponda al comando mod SayHello:
Sub PerformCmd (Argomenti ByVal opzionali come String = "") Implementa IScript.PerformCmd
If (args = "HW") Quindi
Wln ("Hello World", "neutralText")
Altro
Wln ("Fammi salutare eseguendo" "SayHello HW." "", "NeutralText")
Finisci se
End Sub
3. Il codice dovrebbe apparire cos?? in VB:

Importa Kernel_Simulator.ModParser
Importa Kernel_Simulator.TextWriterColor
Classe pubblica HelloArgs
Implementa IScript
Propriet?? Cmd As String Implementa IScript.Cmd
Propriet?? Def As String Implementa IScript.Def
Nome propriet?? come stringa Implementa IScript.Name
Versione della propriet?? come stringa Implementa IScript.Version
Sub StartMod () Implementa IScript.StartMod
Cmd = "SayHello"
Def = ""
Nome = "HelloArgs"
Versione = "1.0"
End Sub
Sub StopMod () Implementa IScript.StopMod
End Sub
Sub PerformCmd (Argomenti ByVal opzionali come String = "") Implementa IScript.PerformCmd
If (args = "HW") Quindi
Wln ("Hello World", "neutralText")
Altro
Wln ("Fammi salutare eseguendo" "SayHello HW." "", "NeutralText")
Finisci se
End Sub
Sub InitEvents (ByVal ev As String) Implementa IScript.InitEvents
End Sub
End Class

... O in C

usando MP = Kernel_Simulator.ModParser;
usando TWC = Kernel_Simulator.TextWriterColor;
public class HelloArgs: MP.IScript
{
stringa pubblica Cmd {get; 
stringa pubblica Def {get; 
stringa pubblica Nome {get; 
stringa pubblica Versione {get; 
void pubblico StartMod ()
{
Cmd = "SayHello";
Def = "";
Nome = "HelloArgs";
Versione = "1.0";
}
vuoto pubblico StopMod ()
{
}
public void PerformCmd (string args = "")
{
if (args == "HW")
{
TWC.Wln ("Hello World", "neutralText");
}
altro
{
TWC.Wln ("Fammi salutare eseguendo \" SayHello HW. \ "", "NeutralText");
}
}
public void InitEvents (string ev)
{
}
}

4. Ripetere l'ultimo passaggio sul secondo esempio: Hello World a comando eseguire

4. Hello World on command viene eseguito con pi?? argomenti

1. Supponendo che il nome della tua mod sia HelloArgs, il tuo argomento che far?? dire il tuo comando Hello World ?? Say Hello e che il tuo comando sia WhatDoISay, ripeti i passaggi 1-3 del secondo esempio: Hello World on command esegui
2. Crea il gestore dei comandi e lascia che risponda al comando mod WhatDoISay:
Sub PerformCmd (Argomenti ByVal opzionali come String = "") Implementa IScript.PerformCmd
Dim splitArgs As String () = args.Split ({"" c})
Dim ArgCount As Intero = 1
Se splitArgs.Length> 1 Quindi
If (splitArgs (0) = "Say" E splitArgs (1) = "Hello") Quindi
Wln ("Hello World", "neutralText")
Altro
Wln ("Fammi salutare eseguendo" "WhatDoISay Say Hello." "", "NeutralText")
Finisci se
Altro
Wln ("Fammi salutare eseguendo" "WhatDoISay Say Hello." "", "NeutralText")
Finisci se
Per ogni argomento come stringa in splitArgs
Wln ("Argument {0}: {1}", "neutralText", ArgCount, splitArgs (ArgCount - 1))
ArgCount = 1
Il prossimo
End Sub
3. Il codice dovrebbe apparire cos?? in VB:

Importa Kernel_Simulator.ModParser
Importa Kernel_Simulator.TextWriterColor
Classe pubblica HelloArgs
Implementa IScript
Propriet?? Cmd As String Implementa IScript.Cmd
Propriet?? Def As String Implementa IScript.Def
Nome propriet?? come stringa Implementa IScript.Name
Versione della propriet?? come stringa Implementa IScript.Version
Sub StartMod () Implementa IScript.StartMod
Cmd = "WhatDoISay"
Def = ""
Nome = "HelloArgs"
Versione = "1.0"
End Sub
Sub StopMod () Implementa IScript.StopMod
End Sub
Sub PerformCmd (Argomento ByVal opzionale come String = "") Implementa IScript.PerformCmd
Dim splitArgs As String () = args.Split ({"" c})
Dim ArgCount As Intero = 1
Se splitArgs.Length> 1 Quindi
If (splitArgs (0) = "Say" E splitArgs (1) = "Hello") Quindi
Wln ("Hello World", "neutralText")
Altro
Wln ("Fammi salutare eseguendo" "WhatDoISay Say Hello." "", "NeutralText")
Finisci se
Altro
Wln ("Fammi salutare eseguendo" "WhatDoISay Say Hello." "", "NeutralText")
Finisci se
Per ogni argomento come stringa in splitArgs
Wln ("Argument {0}: {1}", "neutralText", ArgCount, splitArgs (ArgCount - 1))
ArgCount = 1
Il prossimo
End Sub
Sub InitEvents (ByVal ev As String) Implementa IScript.InitEvents
End Sub
End Class

... O in C

usando MP = Kernel_Simulator.ModParser;
usando TWC = Kernel_Simulator.TextWriterColor;
public class HelloArgs: MP.IScript
{
stringa pubblica Cmd {get; 
stringa pubblica Def {get; 
stringa pubblica Nome {get; 
stringa pubblica Versione {get; 
void pubblico StartMod ()
{
Cmd = "WhatDoISay";
Def = "";
Nome = "HelloArgs";
Versione = "1.0";
}
vuoto pubblico StopMod ()
{
}
public void PerformCmd (string args = "")
{
string [] splitArgs = args.Split (new [] {''});
int ArgCount = 1;
if (splitArgs.Length> 1)
{
if (splitArgs [0] == "Say"
{
TWC.Wln ("Hello World", "neutralText");
}
altro
{
TWC.Wln ("Fammi salutare eseguendo \" WhatDoISay Say Hello. \ "", "NeutralText");
}
}
altro
{
TWC.Wln ("Fammi salutare eseguendo \" WhatDoISay Say Hello. \ "", "NeutralText");
}
foreach (stringa arg in splitArgs)
{
TWC.Wln ("Argument {0}: {1}", "neutralText", ArgCount, splitArgs [ArgCount - 1]);
ArgCount = 1;
}
}
public void InitEvents (string ev)
{
}
}

4. Ripetere l'ultimo passaggio sul secondo esempio: Hello World a comando eseguire

5. Test di velocit?? della rete

1. Supponendo che il nome della tua mod sia InternetSpeed ??????e che il tuo comando sia getnetspeed, ripeti i passaggi 1-3 del secondo esempio: Hello World on command execute
2. Inserisci questi spazi dei nomi sopra il file:
- Importa System.Net
- Import System.Linq
- Importa System.IO
- Importa System.Math
- Importa Microsoft.VisualBasic.Interaction
3. Crea il tuo gestore di comandi:
Sub PerformCmd (Argomento ByVal opzionale come String = "") Implementa IScript.PerformCmd
Velocit?? attenuata come doppio () = nuovo doppio (4) {}
Per i come numero intero = da 0 a 4
Dim jQueryFileSize As Intero = 261
Dim client come nuovo WebClient ()
Dim startTime As DateTime = DateTime.Now
client.DownloadFile ("http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.js", Environ ("USERPROFILE") "\ jQuery.js")
Dim endTime As DateTime = DateTime.Now
speed (i) = Round ((jQueryFileSize / (endTime - startTime) .TotalSeconds))
Il prossimo
File.Delete (Environ ("USERPROFILE") "\ jQuery.js")
Wln ("Velocit?? download: {0} KB / s", "neutralText", speeds.Average ())
End Sub
4. Il codice dovrebbe apparire cos?? in VB:

Importa System.Net
Importa System.Linq
Importa System.IO
Importa System.Math
Importa Microsoft.VisualBasic.Interaction
Importa Kernel_Simulator.ModParser
Importa Kernel_Simulator.TextWriterColor
Classe pubblica InternetSpeed
Implementa IScript
Propriet?? Cmd As String Implementa IScript.Cmd
Propriet?? Def As String Implementa IScript.Def
Nome propriet?? come stringa Implementa IScript.Name
Versione della propriet?? come stringa Implementa IScript.Version
Sub StartMod () Implementa IScript.StartMod
Cmd = "getnetspeed"
Def = ""
Nome = "InternetSpeed"
Versione = "1.0"
End Sub
Sub StopMod () Implementa IScript.StopMod
End Sub
Sub PerformCmd (Argomento ByVal opzionale come String = "") Implementa IScript.PerformCmd
Velocit?? attenuata come doppio () = nuovo doppio (4) {}
Per i come numero intero = da 0 a 4
Dim jQueryFileSize As Intero = 261
Dim client come nuovo WebClient ()
Dim startTime As Date = Date.Now
client.DownloadFile ("http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.js", Environ ("USERPROFILE") "\ jQuery.js")
Dim endTime As Date = Date.Now
speed (i) = Round (jQueryFileSize / (endTime - startTime) .TotalSeconds)
Il prossimo
File.Delete (Environ ("USERPROFILE") "\ jQuery.js")
Wln ("Velocit?? download: {0} KB / s", "neutralText", speeds.Average ())
End Sub
Sub InitEvents (ByVal ev As String) Implementa IScript.InitEvents
End Sub
End Class

... O in C

utilizzando il sistema;
utilizzando System.Net;
utilizzando System.Linq;
utilizzando System.IO;
usando M = System.Math;
usando MP = Kernel_Simulator.ModParser;
usando TWC = Kernel_Simulator.TextWriterColor;
InternetSpeed ??????di classe pubblica: MP.IScript
{
stringa pubblica Cmd {get; 
stringa pubblica Def {get; 
stringa pubblica Nome {get; 
stringa pubblica Versione {get; 
void pubblico StartMod ()
{
Cmd = "getnetspeed";
Def = "";
Nome = "InternetSpeed";
Versione = "1.0";
}
vuoto pubblico StopMod ()
{
}
public void PerformCmd (string args = "")
{
double [] speed = new double [5];
per (int i = 0; i <= 4; i)
{
int jQueryFileSize = 261;
WebClient client = new WebClient ();
DateTime startTime = DateTime.Now;
client.DownloadFile ("http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.js", System.Environment.GetEnvironmentVariable ("USERPROFILE") "\\ jQuery.js");
DateTime endTime = DateTime.Now;
speed [i] = M.Round (jQueryFileSize / (endTime - startTime) .TotalSeconds);
}
File.Delete (System.Environment.GetEnvironmentVariable ("USERPROFILE") "\\ jQuery.js");
TWC.Wln ("Velocit?? di download: {0} KB / s", "neutralText", speeds.Average ());
}
public void InitEvents (string ev)
{
}
}

5. Ripetere l'ultimo passaggio sul secondo esempio: eseguire Hello World a comando

Pi?? esempi

Se vuoi dare un'occhiata a pi?? esempi, sentiti libero di provarli nel repository KSModExamples in GitHub (Non ancora disponibile).

fonti:

1. https://www.aspsnippets.com/Articles/Check-Internet-Connection-Download-Speed-using-C-and-VBNet-in-ASPNet.aspx
-BODY END-

-COLOR CONFIGURATION-
mod=>Green
New Project=>Cyan
Empty Project=>Cyan
References=>Cyan
Solution Explorer=>DarkGreen
Add Reference...=>Cyan
Browse...=>Cyan
Kernel Simulator=>DarkGreen
OK=>Cyan
Open File=>DarkGreen
KS=>DarkGreen
OK.=>Cyan
checked=>Red
project,=>Green
solution=>Red
Class Library=>Cyan
Compile=>DarkGreen
Build Events,=>Cyan
Post-build=>DarkGreen
copy ..\..\ModFile.vb ..\..\..\..\ModFile.m=>Cyan
del /Q *.*=>Cyan
"path\to\Kernel Simulator.exe" testMods ModFile.m=>Cyan
only=>Red
CTRL+S=>Cyan
Copy Local=>Cyan
False=>Red
Add=>Cyan
mod,=>Green
should=>Red
Public=>Cyan
ModName=>DarkGreen
End=>Cyan
Class...=>Cyan
Visual Studio 2017=>Magenta
Implements=>Cyan
IScript=>DarkGreen
Kernel_Simulator=>Cyan
TextWriterColor=>Green
Imports=>Cyan
Kernel_Simulator.TextWriterColor=>DarkGreen
IScript:=>DarkGreen
Property As String=>Cyan
Cmd Def Name Version=>DarkGreen
IScript.Cmd IScript.Def IScript.Name IScript.Version=>DarkGreen
StartMod() IScript.StartMod=>DarkGreen
"" "ModName" "1.0"=>DarkGreen
Sub=>Cyan
StopMod() IScript.StopMod=>DarkGreen
PerformCmd (ByVal String) IScript.PerformCmd=>DarkGreen
If (args "YourArgHere") Then=>DarkGreen
Dim String() .Split({" "c})=>Cyan
splitArgs.Length 1=>DarkGreen
(splitArgs(0) "Part1" And splitArgs(1) "Part2")=>DarkGreen
Else=>Red
(ev "EventName") IScript.InitEvents=>DarkGreen
ElseIf=>Red
"AnotherEvent")=>DarkGreen
IMPORTANT NOTICE! Never=>Red
subs=>Green
AnotherClass=>DarkGreen
Hello World=>Green
HelloGuys) HelloGuys: HelloGuys=>DarkGreen
Kernel_Simulator.ModParser=>DarkGreen
errors=>Red
"HelloGuys"=>DarkGreen
"Hello World", "neutralText"=>DarkGreen
"Goodbye World",=>DarkGreen
mod: Loading mods...=>Green
v1.0 started=>Green
"SayHello" "HelloShell" HelloShell):=>DarkGreen
"HW")=>DarkGreen
"Say" "Hello"=>DarkGreen
"WhatDoISay" "HelloArgs"=>DarkGreen
"Argument {0}: {1}", "neutralText", ArgCount, splitArgs(ArgCount - 1)=>DarkGreen
ArgCount + 1=>DarkGreen
For Each In=>Cyan
arg splitArgs=>DarkGreen
Next=>Cyan
System.Net System.Linq System.IO System.Math Microsoft.VisualBasic.Interaction=>DarkGreen
"http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.js", Environ("USERPROFILE") "\jQuery.js"=>DarkGreen
"Download speed: {0}KB/s", speeds.Average()=>DarkGreen
"getnetspeed" "InternetSpeed" InternetSpeed InternetSpeed, getnetspeed,=>DarkGreen
KSModExamples GitHub=>Green
-COLOR CONFIG END-

-SECTIONS-
What is the mod for the kernel?=>SE1
Can I make my own screensaver?=>SE1
Basic modding=>SE1
0. How to make your own mods on Visual Studio 2017?=>SE2
1. Hello World on Kernel Start, and Goodbye World on Kernel Stop=>SE2
2. Hello World on command execute=>SE2
3. Hello World on command execute with arguments (single)=>SE2
4. Hello World on command execute with multiple arguments=>SE2
5. Network Speed Testing=>SE2
More examples=>SE1
Sources:=>SE1
-SECTIONS END-
