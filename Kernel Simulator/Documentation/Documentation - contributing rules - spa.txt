| --------------- + -> General <- + --------------- |

- Si desea contribuir al simulador de kernel, deben seguirse las siguientes condiciones:

1. Si desea modificar / recodificar el núcleo principal, asegúrese de escribir los cambios correctamente y con cuidado, asegurándose de no dañar las características del núcleo principal.
2. Si desea agregar / modificar / eliminar / recodificar algunas funciones deseadas en todas partes, escriba los cambios con cuidado.
3. Al igual que todos los otros desarrolladores que desean contribuir con Kernel Simulator, los cambios deben ser probados. No queremos los resultados, solo la prueba, y decimos que se prueba. Si desea proporcionar los resultados, todavía aceptamos su solicitud de extracción.
4. Si no lo ha probado, y nos envió una solicitud de extracción, probaremos el código y si encontramos eso:

   - Su código está funcionando, aceptaremos su solicitud de extracción.
   - su código no funciona, cerraremos su solicitud de extracción

5. Si no lo ha probado y está listo para enviarnos, pruebe el código primero.
6. Si desea modificar la documentación u otras partes que no sean la codificación, o agregar partes de / documentación nueva, no dude en. Puedes notificarnos.

- Transferencia a otros sistemas operativos o lenguajes de programación que no sea ensamblador (ASM, NASM, ...) o lenguaje C / C ++:

Es posible que tenga que portar Kernel Simulator a otro sistema operativo como Linux, macOS, etc. Y también, a otro lenguaje de programación que no sea C / C ++ o lenguaje de ensamblador.

La transferencia a ASM / C / C ++ depende de nosotros, el propietario. Cualquier puerto a ellos antes de nuestra versión oficial de arranque de Kernel ASM / C / C ++ no será compatible con nosotros, y cualquier problema relacionado con ellos se rechazará de inmediato.

- Si desea portar Kernel Simulator a Linux (probado) o macOS (no probado) en Visual Basic:

1. Instale los paquetes Mono, MonoDevelop y libmono-microsoft-visualbasic10.0-cil. Puedes averiguar cómo en su página web oficial.
2. Descargue el código fuente de KS
3. Abra la solución utilizando MonoDevelop y ejecute el programa.
4. Reportar cualquier problema en la sección de Problemas en nuestro repositorio de KS.

- Si desea trasladar Kernel Simulator a Sun OS, BSD, Solaris, etc. (sin probar):

Esta sección está bajo construcción. Si tiene instrucciones, por favor contribuya.

Nota: Si desea transferir Kernel Simulator a otros lenguajes de programación que no sean iguales a Assembly o C / C ++, no dude en hacerlo.
Nota: depende de nosotros transferir Kernel dentro del simulador de kernel a Real Computer / VirtualBox usando Assembly y C / C ++.
Nota: portar Kernel dentro del simulador a Android / iOS está bien. Puedes hacer las modificaciones apropiadas.

| --------------- + -> Otras contribuciones, problemas, etc. <- + --------------- |

- Problemas de información

Siga el patrón de diseño de informes de errores y explique todo lo que pueda. Una explicación menos específica y un patrón de diseño incorrecto a continuación podrían cerrar su problema. Las capturas de pantalla son opcionales.

| --------------- + -> Lista de tareas para agregar en Kernel Simulator <- + --------------- |

Si algunas de las ideas desaparecieron, entonces se hace o se cancela. (Esta sección se elimina en 0.0.7 y se mueve a la Lista de tareas en VS2019).

1. Administrador de archivos del sistema host interactivo (planificado en la versión de arranque)
2. Mueva cada documentación individual a Wiki en el repositorio, incluidas las páginas de manuales, haciendo que los comandos de las páginas del manual abran un sitio web a Wiki (planeado en 0.0.7)
3. Lista permanente de nombres de usuario y contraseñas (contraseñas en forma cifrada - en versión beta)

(Si tiene ideas, edite esta sección insertando su idea).