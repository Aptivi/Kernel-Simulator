| --------------- + -> Umum <- + --------------- |

- Jika anda ingin menyumbang kepada Simulator Kernel, syarat di bawah mesti diikuti:

1. Jika anda ingin mengubah suai / mengkod semula kernel teras, pastikan anda menulis perubahan dengan betul dan berhati-hati, memastikan bahawa anda tidak merosakkan ciri kernel teras.
2. Jika anda ingin menambah / mengubah / mengalihkan / mengkod semula beberapa ciri yang dikehendaki di mana-mana, Tulis perubahan dengan teliti.
3. Seperti setiap pemaju lain yang ingin menyumbang kepada Simulator Kernel, perubahan mesti diuji. Kami tidak mahu hasilnya, hanya ujian, dan mengatakan bahawa ia diuji. Sekiranya anda ingin memberikan hasil, kami masih menerima permintaan tarik anda.
4. Jika anda belum mengujinya, dan anda menghantar permintaan tarik, kami akan menguji kod dan jika kami mendapati bahawa:

   - kod anda berfungsi, kami akan menerima permintaan tarik anda
   - kod anda tidak berfungsi, kami akan menutup permintaan tarik anda

5. Jika anda belum mengujinya, dan anda sudah bersedia untuk menghantar kami, uji kod terlebih dahulu.
6. Jika anda ingin mengubah dokumentasi, atau bahagian lain selain pengekodan, atau menambah bahagian / dokumentasi baru, berasa bebas. Anda boleh memberitahu kami.

- Berpindah ke sistem pengendalian lain atau bahasa pengaturcaraan yang lain selain Assembly (ASM, NASM, ...) atau bahasa C / C ++:

Anda mungkin perlu memindahkan Kernel Simulator ke sistem operasi lain seperti Linux, macOS, dan sebagainya. Dan juga, kepada bahasa pengaturcaraan yang lain selain bahasa C / C ++ atau Assembly.

Pelabuhan ke ASM / C / C ++ terpulang kepada kami, pemiliknya. Mana-mana pelabuhan kepada mereka sebelum pelepasan boot Kernel ASM / C / C ++ rasmi kami tidak akan disokong oleh kami, dan sebarang isu berkaitan dengannya akan ditolak dengan serta-merta.

- Jika anda mahu port Simulator Kernel ke Linux (diuji) atau macOS (belum dicuba) pada Visual Basic:

1. Pasang pakej Mono, MonoDevelop, dan libmono-microsoft-visualbasic10.0-cil. Anda boleh mengetahui bagaimana di laman web rasmi mereka.
2. Muat turun kod sumber KS
3. Buka penyelesaian menggunakan MonoDevelop, dan jalankan program ini.
4. Laporkan sebarang isu di bahagian Isu di repo KS kami.

- Jika anda mahu memasukkan Simulator Kernel ke Sun OS, BSDs, Solaris, dan lain-lain (belum dicuba):

Bahagian ini sedang dalam pembinaan. Jika anda mempunyai arahan, sila sumbangkan.

Nota: Jika anda mahu memasukkan Simulator Kernel ke bahasa pengaturcaraan lain yang tidak sama dengan Assembly atau C / C ++, jangan ragu.
Nota: Pembalakan Kernel di dalam Simulator Kernel ke Real Computer / VirtualBox menggunakan Perhimpunan dan C / C ++ terpulang kepada kami.
Nota: Pemasangan Kernel di dalam simulator ke Android / iOS adalah OK. Anda boleh membuat pengubahsuaian yang sesuai.

| --------------- + -> Sumbangan, isu, dll lain-lain <- + --------------- |

- Isu pelaporan

Ikut corak reka bentuk pelaporan pepijat, dan terangkan seberapa banyak yang anda boleh. Penjelasan kurang khusus dan corak reka bentuk yang salah berikut mungkin menutup isu anda. Tangkapan skrin adalah pilihan.

| --------------- + -> Senarai tugasan untuk dimasukkan ke dalam Kernel Simulator <- + --------------- |

Jika sesetengah idea hilang, maka ia sama ada dilakukan atau dibatalkan. (Bahagian ini dipadamkan oleh 0.0.7, dan dipindahkan ke Senarai Tugas dalam VS2019.)

1. Pengurus fail sistem tuan rumah interaktif (Dirancang dalam versi bootable)
2. Pindahkan setiap dokumentasi tunggal ke Wiki dalam repositori, termasuk halaman manual, membuat arahan halaman manual membuka laman web ke Wiki (Dirancang dalam 0.0.7)
3. Senarai tetap nama pengguna dan kata laluan (kata laluan dalam bentuk disulitkan - dalam beta)

(Jika anda mempunyai idea, edit bahagian ini dengan memasukkan idea anda.)