|---------------+--> General <--+---------------|

- If you want to contribute to Kernel Simulator, the conditions below must be followed:

1. If you want to modify/recode the core kernel, make sure that you write the changes correctly and carefully, making sure that you don't damage the core kernel features.
2. If you want to add/modify/remove/recode some desired features everywhere, Write the changes carefully.
3. Like every other developers that wants to contribute to Kernel Simulator, the changes must be tested. We don't want the results, only test, and say that it is tested. If you want to provide the results, we still accept your pull request.
4. If you haven't tested it, and you sent us pull request, we will test the code and if we find that:

   - your code is working, we will accept your pull request
   - your code is not working, we will close your pull request

5. If you haven't tested it, and you are ready to send us, test the code first.
6. If you want to modify the documentation, or other parts other than coding, or add parts of/new documentation, feel free to. You can notify us.

- Porting to other operating systems or programming languages that is other than Assembly (ASM, NASM, ...) or C/C++ language:

You might have to port Kernel Simulator into other operating system such as Linux, macOS, and so on. And also, to another programming languages that is other than C/C++ or Assembly language.

The porting to ASM/C/C++ is up to us, the owner. Any ports to them before our official Kernel ASM/C/C++ bootable release will not be supported by us, and any issues regarding them will be immediately declined.

- If you want to port Kernel Simulator to Linux (tested) or macOS (untested) on Visual Basic:

1. Install Mono, MonoDevelop, and libmono-microsoft-visualbasic10.0-cil packages. You can find out how at their official website.
2. Download the KS source code
3. Open the solution using MonoDevelop, and run the program.
4. Report any issues on Issues section in our KS repo.

- If you want to port Kernel Simulator to Sun OS, BSDs, Solaris, etc. (untested):

This section is under construction. If you have instructions, please contribute.

Note: If you want to port Kernel Simulator to another programming languages that doesn't equal Assembly or C/C++, feel free to.
Note: Porting Kernel inside the Kernel Simulator to the Real Computer/VirtualBox using Assembly and C/C++ is up to us.
Note: Porting Kernel inside the simulator to Android/iOS is OK. You can make appropriate modifications.

|---------------+--> Other contributions, issues, etc. <--+---------------|

- Reporting issues

Follow the bug reporting design pattern, and explain as much as you can. Less-specific explanation and wrong design pattern following might close your issue. Screenshots are optional.

|---------------+--> To-do list for adding into Kernel Simulator <--+---------------|

If some of the ideas disappeared, then it is either done or cancelled. (This section is deleted by 0.0.7, and moved to Task List in VS2019.)

1. Interactive host system file manager (Planned in the bootable version)
2. Move every single documentation to Wiki in repository, including the manual pages, making manual page commands open a website to Wiki (Planned in 0.0.7)
3. Permanent list of usernames and passwords (passwords in encrypted form - in beta)

(If you have ideas, edit this section by inserting your idea.)