| --------------- + -> Generale <- + --------------- |

- Se si desidera contribuire a Kernel Simulator, è necessario seguire le seguenti condizioni:

1. Se si desidera modificare / ricodificare il kernel principale, assicurarsi di scrivere le modifiche correttamente e con attenzione, accertandosi di non danneggiare le funzionalità del kernel principale.
2. Se si desidera aggiungere / modificare / rimuovere / ricodificare alcune funzionalità desiderate ovunque, scrivere attentamente le modifiche.
3. Come tutti gli altri sviluppatori che vogliono contribuire a Kernel Simulator, le modifiche devono essere testate. Non vogliamo i risultati, solo test e dire che è testato. Se desideri fornire i risultati, accettiamo comunque la tua richiesta pull.
4. Se non lo hai testato e ci hai inviato la richiesta pull, testeremo il codice e se scopriamo che:

   - il tuo codice funziona, accetteremo la tua richiesta pull
   - il tuo codice non funziona, chiuderemo la tua richiesta pull

5. Se non l'hai ancora testato e sei pronto per inviarci, prova prima il codice.
6. Se si desidera modificare la documentazione o altre parti diverse dalla codifica o aggiungere parti di / nuova documentazione, non esitate a. Puoi avvisarci.

- Porting su altri sistemi operativi o linguaggi di programmazione diversi da Assembly (ASM, NASM, ...) o linguaggio C / C ++:

Potrebbe essere necessario eseguire il porting di Kernel Simulator in altri sistemi operativi come Linux, macOS e così via. Inoltre, per un altro linguaggio di programmazione diverso da C / C ++ o linguaggio Assembly.

Il porting su ASM / C / C ++ dipende da noi, il proprietario. Eventuali porte prima del nostro rilascio ufficiale avviabile del kernel ASM / C / C ++ non saranno supportate da noi e qualsiasi problema che li riguardi verrà immediatamente rifiutato.

- Se vuoi trasferire Kernel Simulator su Linux (testato) o macOS (non testato) su Visual Basic:

1. Installa i pacchetti Mono, MonoDevelop e libmono-microsoft-visualbasic10.0-cil. Puoi scoprire come sul loro sito ufficiale.
2. Scarica il codice sorgente di KS
3. Aprire la soluzione utilizzando MonoDevelop ed eseguire il programma.
4. Segnala eventuali problemi sulla sezione Problemi nel nostro repository KS.

- Se si desidera trasferire Kernel Simulator su Sun OS, BSD, Solaris, ecc. (Non testato):

Questa sezione è in costruzione. Se hai istruzioni, ti preghiamo di contribuire.

Nota: se si desidera trasferire Kernel Simulator su altri linguaggi di programmazione che non equivalgono a Assembly o C / C ++, non esitate.
Nota: Portare Kernel all'interno del Kernel Simulator su Real Computer / VirtualBox usando Assembly e C / C ++ dipende da noi.
Nota: il porting del kernel all'interno del simulatore su Android / iOS è OK. È possibile apportare modifiche appropriate.

| --------------- + -> Altri contributi, problemi, ecc. <- + --------------- |

- Segnalazione di problemi

Segui il modello di progettazione della segnalazione di bug e spiega il più possibile. Una spiegazione meno specifica e il seguente modello di progettazione errato potrebbero risolvere il problema. Le schermate sono opzionali.

| --------------- + -> Elenco di cose da fare per l'aggiunta in Kernel Simulator <- + --------------- |

Se alcune idee sono scomparse, allora è fatto o cancellato. (Questa sezione viene eliminata da 0.0.7 e spostata in Elenco attività in VS2019.)

1. File manager del sistema host interattivo (pianificato nella versione di avvio)
2. Spostare ogni singola documentazione su Wiki nel repository, comprese le pagine del manuale, facendo in modo che i comandi della pagina del manuale aprano un sito Web su Wiki (Pianificato in 0.0.7)
3. Elenco permanente di nomi utente e password (password in forma crittografata - in versione beta)

(Se hai idee, modifica questa sezione inserendo la tua idea.)